{"version":3,"sources":["@wordpress/components/src/ui/color-picker/color-display.tsx"],"names":["colorize","useCopyToClipboard","useState","useEffect","useRef","__","Text","Flex","FlexItem","Tooltip","space","ValueDisplay","values","map","value","abbreviation","HslDisplay","color","enableAlpha","h","s","l","a","toHsl","Math","floor","round","push","RgbDisplay","r","g","b","toRgb","HexDisplay","colorized","colorWithoutHash","toHex8String","toHexString","slice","toUpperCase","getComponent","colorType","ColorDisplay","copiedColor","setCopiedColor","copyTimer","props","Component","copyRef","toHslString","toRgbString","current","clearTimeout","setTimeout","undefined","height"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport colorize, { ColorFormats } from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport { useCopyToClipboard } from '@wordpress/compose';\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { Text } from '../../text';\nimport { Flex, FlexItem } from '../../flex';\nimport { Tooltip } from '../tooltip';\nimport type { ColorType } from './types';\nimport { space } from '../utils/space';\n\ninterface ColorDisplayProps {\n\tcolor: ColorFormats.HSLA;\n\tcolorType: ColorType;\n\tenableAlpha: boolean;\n}\n\ninterface DisplayProps {\n\tcolor: ColorFormats.HSLA;\n\tenableAlpha: boolean;\n}\n\ntype Values = [ number, string ][];\n\ninterface ValueDisplayProps {\n\tvalues: Values;\n}\n\nconst ValueDisplay = ( { values }: ValueDisplayProps ) => (\n\t<>\n\t\t{ values.map( ( [ value, abbreviation ] ) => {\n\t\t\treturn (\n\t\t\t\t<FlexItem key={ abbreviation } isBlock display=\"flex\">\n\t\t\t\t\t<Text color=\"blue\">{ abbreviation }</Text>\n\t\t\t\t\t<Text>{ value }</Text>\n\t\t\t\t</FlexItem>\n\t\t\t);\n\t\t} ) }\n\t</>\n);\n\nconst HslDisplay = ( { color, enableAlpha }: DisplayProps ) => {\n\tconst { h, s, l, a } = colorize( color ).toHsl();\n\n\tconst values: Values = [\n\t\t[ Math.floor( h ), 'H' ],\n\t\t[ Math.round( s * 100 ), 'S' ],\n\t\t[ Math.round( l * 100 ), 'L' ],\n\t];\n\tif ( enableAlpha ) {\n\t\tvalues.push( [ Math.round( a * 100 ), 'A' ] );\n\t}\n\n\treturn <ValueDisplay values={ values } />;\n};\n\nconst RgbDisplay = ( { color, enableAlpha }: DisplayProps ) => {\n\tconst { r, g, b, a } = colorize( color ).toRgb();\n\n\tconst values: Values = [\n\t\t[ r, 'R' ],\n\t\t[ g, 'G' ],\n\t\t[ b, 'B' ],\n\t];\n\n\tif ( enableAlpha ) {\n\t\tvalues.push( [ Math.round( a * 100 ), 'A' ] );\n\t}\n\n\treturn <ValueDisplay values={ values } />;\n};\n\nconst HexDisplay = ( { color, enableAlpha }: DisplayProps ) => {\n\tconst colorized = colorize( color );\n\tconst colorWithoutHash = ( enableAlpha\n\t\t? colorized.toHex8String()\n\t\t: colorized.toHexString()\n\t)\n\t\t.slice( 1 )\n\t\t.toUpperCase();\n\treturn (\n\t\t<FlexItem>\n\t\t\t<Text color=\"blue\">#</Text>\n\t\t\t<Text>{ colorWithoutHash }</Text>\n\t\t</FlexItem>\n\t);\n};\n\nconst getComponent = ( colorType: ColorType ) => {\n\tswitch ( colorType ) {\n\t\tcase 'hsl':\n\t\t\treturn HslDisplay;\n\t\tcase 'rgb':\n\t\t\treturn RgbDisplay;\n\t\tdefault:\n\t\tcase 'hex':\n\t\t\treturn HexDisplay;\n\t}\n};\n\nexport const ColorDisplay = ( {\n\tcolor,\n\tcolorType,\n\tenableAlpha,\n}: ColorDisplayProps ) => {\n\tconst [ copiedColor, setCopiedColor ] = useState< string | null >( null );\n\tconst copyTimer = useRef< number | undefined >();\n\tconst props = { color, enableAlpha };\n\tconst Component = getComponent( colorType );\n\tconst copyRef = useCopyToClipboard< HTMLDivElement >(\n\t\t() => {\n\t\t\tswitch ( colorType ) {\n\t\t\t\tcase 'hsl': {\n\t\t\t\t\treturn colorize( color ).toHslString();\n\t\t\t\t}\n\t\t\t\tcase 'rgb': {\n\t\t\t\t\treturn colorize( color ).toRgbString();\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\tcase 'hex': {\n\t\t\t\t\tconst colorized = colorize( color );\n\t\t\t\t\treturn enableAlpha\n\t\t\t\t\t\t? colorized.toHex8String()\n\t\t\t\t\t\t: colorized.toHexString();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t() => {\n\t\t\tif ( copyTimer.current ) {\n\t\t\t\tclearTimeout( copyTimer.current );\n\t\t\t}\n\t\t\tsetCopiedColor( colorize( color ).toHex8String() );\n\t\t\tcopyTimer.current = setTimeout( () => {\n\t\t\t\tsetCopiedColor( null );\n\t\t\t\tcopyTimer.current = undefined;\n\t\t\t}, 3000 );\n\t\t}\n\t);\n\tuseEffect( () => {\n\t\t// clear copyTimer on component unmount.\n\t\treturn () => {\n\t\t\tif ( copyTimer.current ) {\n\t\t\t\tclearTimeout( copyTimer.current );\n\t\t\t}\n\t\t};\n\t}, [] );\n\treturn (\n\t\t<Tooltip\n\t\t\tcontent={\n\t\t\t\t<Text color=\"white\">\n\t\t\t\t\t{ copiedColor === colorize( color ).toHex8String()\n\t\t\t\t\t\t? __( 'Copied!' )\n\t\t\t\t\t\t: __( 'Copy' ) }\n\t\t\t\t</Text>\n\t\t\t}\n\t\t>\n\t\t\t<Flex\n\t\t\t\tjustify=\"flex-start\"\n\t\t\t\tgap={ space( 1 ) }\n\t\t\t\tref={ copyRef }\n\t\t\t\tstyle={ { height: 30 } }\n\t\t\t>\n\t\t\t\t<Component { ...props } />\n\t\t\t</Flex>\n\t\t</Tooltip>\n\t);\n};\n"]}