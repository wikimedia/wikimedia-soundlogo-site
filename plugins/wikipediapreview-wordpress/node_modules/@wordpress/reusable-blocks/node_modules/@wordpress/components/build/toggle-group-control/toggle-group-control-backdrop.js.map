{"version":3,"sources":["@wordpress/components/src/toggle-group-control/toggle-group-control-backdrop.tsx"],"names":["ToggleGroupControlBackdrop","containerRef","containerWidth","isAdaptiveWidth","state","left","setLeft","width","setWidth","canAnimate","setCanAnimate","containerNode","current","targetNode","querySelector","x","parentX","getBoundingClientRect","offsetWidth","borderWidth","offsetLeft","requestId","window","requestAnimationFrame","cancelAnimationFrame","transform","transition","undefined"],"mappings":";;;;;;;AAGA;;AAMA;;AATA;AACA;AACA;AASA,SAASA,0BAAT,CAAqC;AACpCC,EAAAA,YADoC;AAEpCC,EAAAA,cAFoC;AAGpCC,EAAAA,eAHoC;AAIpCC,EAAAA;AAJoC,CAArC,EAKqC;AACpC,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoB,uBAAU,CAAV,CAA1B;AACA,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsB,uBAAU,CAAV,CAA5B;AACA,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgC,uBAAU,KAAV,CAAtC;AAEA,0BAAW,MAAM;AAChB,UAAMC,aAAa,GAAGV,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEW,OAApC;AACA,QAAK,CAAED,aAAP,EAAuB;AAEvB;AACF;AACA;;AACE,UAAME,UAAU,GAAGF,aAAa,CAACG,aAAd,CACjB,gBAAgBV,KAAO,IADN,CAAnB;AAGA,QAAK,CAAES,UAAP,EAAoB;AAEpB,UAAM;AAAEE,MAAAA,CAAC,EAAEC;AAAL,QAAiBL,aAAa,CAACM,qBAAd,EAAvB;AACA,UAAM;AAAEV,MAAAA,KAAK,EAAEW,WAAT;AAAsBH,MAAAA;AAAtB,QAA4BF,UAAU,CAACI,qBAAX,EAAlC;AACA,UAAME,WAAW,GAAG,CAApB;AACA,UAAMC,UAAU,GAAGL,CAAC,GAAGC,OAAJ,GAAcG,WAAjC;AAEAb,IAAAA,OAAO,CAAEc,UAAF,CAAP;AACAZ,IAAAA,QAAQ,CAAEU,WAAF,CAAR;AAEA,QAAIG,SAAJ;;AACA,QAAK,CAAEZ,UAAP,EAAoB;AACnBY,MAAAA,SAAS,GAAGC,MAAM,CAACC,qBAAP,CAA8B,MAAM;AAC/Cb,QAAAA,aAAa,CAAE,IAAF,CAAb;AACA,OAFW,CAAZ;AAGA;;AACD,WAAO,MAAMY,MAAM,CAACE,oBAAP,CAA6BH,SAA7B,CAAb;AACA,GA3BD,EA2BG,CAAEZ,UAAF,EAAcR,YAAd,EAA4BC,cAA5B,EAA4CE,KAA5C,EAAmDD,eAAnD,CA3BH;AA6BA,SACC,4BAAC,oBAAD;AACC,IAAA,IAAI,EAAC,cADN;AAEC,IAAA,KAAK,EAAG;AACPsB,MAAAA,SAAS,EAAG,cAAcpB,IAAM,KADzB;AAEPqB,MAAAA,UAAU,EAAEjB,UAAU,GAAGkB,SAAH,GAAe,MAF9B;AAGPpB,MAAAA;AAHO;AAFT,IADD;AAUA;;eAEc,mBAAMP,0BAAN,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useState, useEffect, memo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport type { ToggleGroupControlBackdropProps } from './types';\nimport { BackdropView } from './styles';\n\nfunction ToggleGroupControlBackdrop( {\n\tcontainerRef,\n\tcontainerWidth,\n\tisAdaptiveWidth,\n\tstate,\n}: ToggleGroupControlBackdropProps ) {\n\tconst [ left, setLeft ] = useState( 0 );\n\tconst [ width, setWidth ] = useState( 0 );\n\tconst [ canAnimate, setCanAnimate ] = useState( false );\n\n\tuseEffect( () => {\n\t\tconst containerNode = containerRef?.current;\n\t\tif ( ! containerNode ) return;\n\n\t\t/**\n\t\t * Workaround for Reakit\n\t\t */\n\t\tconst targetNode = containerNode.querySelector(\n\t\t\t`[data-value=\"${ state }\"]`\n\t\t);\n\t\tif ( ! targetNode ) return;\n\n\t\tconst { x: parentX } = containerNode.getBoundingClientRect();\n\t\tconst { width: offsetWidth, x } = targetNode.getBoundingClientRect();\n\t\tconst borderWidth = 1;\n\t\tconst offsetLeft = x - parentX - borderWidth;\n\n\t\tsetLeft( offsetLeft );\n\t\tsetWidth( offsetWidth );\n\n\t\tlet requestId: number;\n\t\tif ( ! canAnimate ) {\n\t\t\trequestId = window.requestAnimationFrame( () => {\n\t\t\t\tsetCanAnimate( true );\n\t\t\t} );\n\t\t}\n\t\treturn () => window.cancelAnimationFrame( requestId );\n\t}, [ canAnimate, containerRef, containerWidth, state, isAdaptiveWidth ] );\n\n\treturn (\n\t\t<BackdropView\n\t\t\trole=\"presentation\"\n\t\t\tstyle={ {\n\t\t\t\ttransform: `translateX(${ left }px)`,\n\t\t\t\ttransition: canAnimate ? undefined : 'none',\n\t\t\t\twidth,\n\t\t\t} }\n\t\t/>\n\t);\n}\n\nexport default memo( ToggleGroupControlBackdrop );\n"]}