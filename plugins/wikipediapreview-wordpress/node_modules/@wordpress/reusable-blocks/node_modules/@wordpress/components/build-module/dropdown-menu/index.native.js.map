{"version":3,"sources":["@wordpress/components/src/dropdown-menu/index.native.js"],"names":["classnames","flatMap","isEmpty","isFunction","Platform","DOWN","BottomSheet","PanelBody","withPreferredColorScheme","menu","Button","Dropdown","mergeProps","defaultProps","props","mergedProps","className","DropdownMenu","children","controls","icon","label","popoverProps","toggleProps","controlSets","Array","isArray","mergedPopoverProps","isOpen","onToggle","openOnArrowDown","event","keyCode","preventDefault","mergedToggleProps","onClick","onKeyDown","onClose","paddingLeft","paddingRight","controlSet","indexOfSet","map","control","indexOfControl","join","title","isActive","OS"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\nimport { flatMap, isEmpty, isFunction } from 'lodash';\nimport { Platform } from 'react-native';\n/**\n * WordPress dependencies\n */\nimport { DOWN } from '@wordpress/keycodes';\nimport { BottomSheet, PanelBody } from '@wordpress/components';\nimport { withPreferredColorScheme } from '@wordpress/compose';\nimport { menu } from '@wordpress/icons';\n\n/**\n * Internal dependencies\n */\nimport Button from '../button';\nimport Dropdown from '../dropdown';\n\nfunction mergeProps( defaultProps = {}, props = {} ) {\n\tconst mergedProps = {\n\t\t...defaultProps,\n\t\t...props,\n\t};\n\n\tif ( props.className && defaultProps.className ) {\n\t\tmergedProps.className = classnames(\n\t\t\tprops.className,\n\t\t\tdefaultProps.className\n\t\t);\n\t}\n\n\treturn mergedProps;\n}\n\nfunction DropdownMenu( {\n\tchildren,\n\tclassName,\n\tcontrols,\n\ticon = menu,\n\tlabel,\n\tpopoverProps,\n\ttoggleProps,\n} ) {\n\tif ( isEmpty( controls ) && ! isFunction( children ) ) {\n\t\treturn null;\n\t}\n\n\t// Normalize controls to nested array of objects (sets of controls)\n\tlet controlSets;\n\tif ( ! isEmpty( controls ) ) {\n\t\tcontrolSets = controls;\n\t\tif ( ! Array.isArray( controlSets[ 0 ] ) ) {\n\t\t\tcontrolSets = [ controlSets ];\n\t\t}\n\t}\n\tconst mergedPopoverProps = mergeProps(\n\t\t{\n\t\t\tclassName: 'components-dropdown-menu__popover',\n\t\t},\n\t\tpopoverProps\n\t);\n\n\treturn (\n\t\t<Dropdown\n\t\t\tclassName={ classnames( 'components-dropdown-menu', className ) }\n\t\t\tpopoverProps={ mergedPopoverProps }\n\t\t\trenderToggle={ ( { isOpen, onToggle } ) => {\n\t\t\t\tconst openOnArrowDown = ( event ) => {\n\t\t\t\t\tif ( ! isOpen && event.keyCode === DOWN ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\tonToggle();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tconst mergedToggleProps = mergeProps(\n\t\t\t\t\t{\n\t\t\t\t\t\tclassName: classnames(\n\t\t\t\t\t\t\t'components-dropdown-menu__toggle',\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t'is-opened': isOpen,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t),\n\t\t\t\t\t},\n\t\t\t\t\ttoggleProps\n\t\t\t\t);\n\n\t\t\t\treturn (\n\t\t\t\t\t<Button\n\t\t\t\t\t\t{ ...mergedToggleProps }\n\t\t\t\t\t\ticon={ icon }\n\t\t\t\t\t\tonClick={ ( event ) => {\n\t\t\t\t\t\t\tonToggle( event );\n\t\t\t\t\t\t\tif ( mergedToggleProps.onClick ) {\n\t\t\t\t\t\t\t\tmergedToggleProps.onClick( event );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonKeyDown={ ( event ) => {\n\t\t\t\t\t\t\topenOnArrowDown( event );\n\t\t\t\t\t\t\tif ( mergedToggleProps.onKeyDown ) {\n\t\t\t\t\t\t\t\tmergedToggleProps.onKeyDown( event );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} }\n\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\tlabel={ label }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ mergedToggleProps.children }\n\t\t\t\t\t</Button>\n\t\t\t\t);\n\t\t\t} }\n\t\t\trenderContent={ ( { isOpen, onClose, ...props } ) => {\n\t\t\t\treturn (\n\t\t\t\t\t<BottomSheet\n\t\t\t\t\t\thideHeader={ true }\n\t\t\t\t\t\tisVisible={ isOpen }\n\t\t\t\t\t\tonClose={ onClose }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ isFunction( children ) ? children( props ) : null }\n\t\t\t\t\t\t<PanelBody\n\t\t\t\t\t\t\ttitle={ label }\n\t\t\t\t\t\t\tstyle={ { paddingLeft: 0, paddingRight: 0 } }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ flatMap(\n\t\t\t\t\t\t\t\tcontrolSets,\n\t\t\t\t\t\t\t\t( controlSet, indexOfSet ) =>\n\t\t\t\t\t\t\t\t\tcontrolSet.map(\n\t\t\t\t\t\t\t\t\t\t( control, indexOfControl ) => (\n\t\t\t\t\t\t\t\t\t\t\t<BottomSheet.Cell\n\t\t\t\t\t\t\t\t\t\t\t\tkey={ [\n\t\t\t\t\t\t\t\t\t\t\t\t\tindexOfSet,\n\t\t\t\t\t\t\t\t\t\t\t\t\tindexOfControl,\n\t\t\t\t\t\t\t\t\t\t\t\t].join() }\n\t\t\t\t\t\t\t\t\t\t\t\tlabel={ control.title }\n\t\t\t\t\t\t\t\t\t\t\t\tonPress={ () => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t\t\t\tif ( control.onClick ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol.onClick();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t\t\t\teditable={ false }\n\t\t\t\t\t\t\t\t\t\t\t\ticon={ control.icon }\n\t\t\t\t\t\t\t\t\t\t\t\tleftAlign={ true }\n\t\t\t\t\t\t\t\t\t\t\t\tisSelected={ control.isActive }\n\t\t\t\t\t\t\t\t\t\t\t\tseparatorType={\n\t\t\t\t\t\t\t\t\t\t\t\t\tPlatform.OS === 'android'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'none'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'leftMargin'\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</PanelBody>\n\t\t\t\t\t</BottomSheet>\n\t\t\t\t);\n\t\t\t} }\n\t\t/>\n\t);\n}\n\nexport default withPreferredColorScheme( DropdownMenu );\n"]}