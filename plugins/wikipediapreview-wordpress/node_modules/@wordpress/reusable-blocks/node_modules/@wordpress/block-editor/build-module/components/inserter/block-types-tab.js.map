{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"names":["map","flow","groupBy","orderBy","__","_x","useMemo","useEffect","useAsyncList","BlockTypesList","InserterPanel","useBlockTypesState","InserterListbox","getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","EMPTY_ARRAY","BlockTypesTab","rootClientId","onInsert","onHover","showMostUsedBlocks","items","categories","collections","onSelectItem","suggestedItems","slice","uncategorizedItems","filter","category","itemsPerCategory","itemList","itemsPerCollection","result","Object","keys","forEach","namespace","length","currentlyRenderedCategories","didRenderAllCategories","collectionEntries","entries","currentlyRenderedCollections","categoryItems","slug","title","icon","collection","collectionItems"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { map, flow, groupBy, orderBy } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport InserterPanel from './panel';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport InserterListbox from '../inserter-listbox';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation and rerendering the component.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nexport function BlockTypesTab( {\n\trootClientId,\n\tonInsert,\n\tonHover,\n\tshowMostUsedBlocks,\n} ) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, [ 'frecency' ], [ 'desc' ] ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn items.filter( ( item ) => ! item.category );\n\t}, [ items ] );\n\n\tconst itemsPerCategory = useMemo( () => {\n\t\treturn flow(\n\t\t\t( itemList ) =>\n\t\t\t\titemList.filter(\n\t\t\t\t\t( item ) => item.category && item.category !== 'reusable'\n\t\t\t\t),\n\t\t\t( itemList ) => groupBy( itemList, 'category' )\n\t\t)( items );\n\t}, [ items ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = items.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ items, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\t/**\n\t * The inserter contains a big number of blocks and opening it is a costful operation.\n\t * The rendering is the most costful part of it, in order to improve the responsiveness\n\t * of the \"opening\" action, these lazy lists allow us to render the inserter category per category,\n\t * once all the categories are rendered, we start rendering the collections and the uncategorized block types.\n\t */\n\tconst currentlyRenderedCategories = useAsyncList( categories );\n\tconst didRenderAllCategories =\n\t\tcategories.length === currentlyRenderedCategories.length;\n\n\t// Async List requires an array\n\tconst collectionEntries = useMemo( () => {\n\t\treturn Object.entries( collections );\n\t}, [ collections ] );\n\tconst currentlyRenderedCollections = useAsyncList(\n\t\tdidRenderAllCategories ? collectionEntries : EMPTY_ARRAY\n\t);\n\n\treturn (\n\t\t<InserterListbox>\n\t\t\t<div>\n\t\t\t\t{ showMostUsedBlocks && !! suggestedItems.length && (\n\t\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ map( currentlyRenderedCategories, ( category ) => {\n\t\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t\t{ didRenderAllCategories && uncategorizedItems.length > 0 && (\n\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ map(\n\t\t\t\t\tcurrentlyRenderedCollections,\n\t\t\t\t\t( [ namespace, collection ] ) => {\n\t\t\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</InserterListbox>\n\t);\n}\n\nexport default BlockTypesTab;\n"]}