{"version":3,"sources":["@wordpress/block-editor/src/components/list-view/branch.js"],"names":["ListViewBranch","props","blocks","selectBlock","showAppender","showBlockMovers","showNestedBlocks","parentBlockClientId","level","terminatedLevels","path","isBranchSelected","isLastOfBranch","expandedState","expand","collapse","draggedClientIds","selectedClientIds","isTreeRoot","filteredBlocks","itemHasAppender","parentClientId","hasAppender","blockCount","length","rowCount","appenderPosition","block","index","clientId","innerBlocks","position","isLastRowAtLevel","updatedTerminatedLevels","updatedPath","hasNestedBlocks","hasNestedAppender","hasNestedBranch","isSelected","isSelectedBranch","isLastBlock","isLast","isLastOfSelectedBranch","isExpanded","undefined","selectBlockWithClientId","event","stopPropagation","toggleExpanded","isDragged","includes","defaultProps"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { map, compact } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { AsyncModeProvider } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport ListViewBlock from './block';\nimport ListViewAppender from './appender';\nimport { isClientIdSelected } from './utils';\nimport { useListViewContext } from './context';\n\nexport default function ListViewBranch( props ) {\n\tconst {\n\t\tblocks,\n\t\tselectBlock,\n\t\tshowAppender,\n\t\tshowBlockMovers,\n\t\tshowNestedBlocks,\n\t\tparentBlockClientId,\n\t\tlevel = 1,\n\t\tterminatedLevels = [],\n\t\tpath = [],\n\t\tisBranchSelected = false,\n\t\tisLastOfBranch = false,\n\t} = props;\n\n\tconst {\n\t\texpandedState,\n\t\texpand,\n\t\tcollapse,\n\t\tdraggedClientIds,\n\t\tselectedClientIds,\n\t} = useListViewContext();\n\n\tconst isTreeRoot = ! parentBlockClientId;\n\tconst filteredBlocks = compact( blocks );\n\tconst itemHasAppender = ( parentClientId ) =>\n\t\tshowAppender &&\n\t\t! isTreeRoot &&\n\t\tisClientIdSelected( parentClientId, selectedClientIds );\n\tconst hasAppender = itemHasAppender( parentBlockClientId );\n\t// Add +1 to the rowCount to take the block appender into account.\n\tconst blockCount = filteredBlocks.length;\n\tconst rowCount = hasAppender ? blockCount + 1 : blockCount;\n\tconst appenderPosition = rowCount;\n\n\treturn (\n\t\t<>\n\t\t\t{ map( filteredBlocks, ( block, index ) => {\n\t\t\t\tconst { clientId, innerBlocks } = block;\n\t\t\t\tconst position = index + 1;\n\t\t\t\tconst isLastRowAtLevel = rowCount === position;\n\t\t\t\tconst updatedTerminatedLevels = isLastRowAtLevel\n\t\t\t\t\t? [ ...terminatedLevels, level ]\n\t\t\t\t\t: terminatedLevels;\n\t\t\t\tconst updatedPath = [ ...path, position ];\n\t\t\t\tconst hasNestedBlocks =\n\t\t\t\t\tshowNestedBlocks && !! innerBlocks && !! innerBlocks.length;\n\t\t\t\tconst hasNestedAppender = itemHasAppender( clientId );\n\t\t\t\tconst hasNestedBranch = hasNestedBlocks || hasNestedAppender;\n\n\t\t\t\tconst isSelected = isClientIdSelected(\n\t\t\t\t\tclientId,\n\t\t\t\t\tselectedClientIds\n\t\t\t\t);\n\t\t\t\tconst isSelectedBranch =\n\t\t\t\t\tisBranchSelected || ( isSelected && hasNestedBranch );\n\n\t\t\t\t// Logic needed to target the last item of a selected branch which might be deeply nested.\n\t\t\t\t// This is currently only needed for styling purposes. See: `.is-last-of-selected-branch`.\n\t\t\t\tconst isLastBlock = index === blockCount - 1;\n\t\t\t\tconst isLast = isSelected || ( isLastOfBranch && isLastBlock );\n\t\t\t\tconst isLastOfSelectedBranch =\n\t\t\t\t\tisLastOfBranch && ! hasNestedBranch && isLastBlock;\n\n\t\t\t\tconst isExpanded = hasNestedBranch\n\t\t\t\t\t? expandedState[ clientId ] ?? true\n\t\t\t\t\t: undefined;\n\n\t\t\t\tconst selectBlockWithClientId = ( event ) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tselectBlock( clientId );\n\t\t\t\t};\n\n\t\t\t\tconst toggleExpanded = ( event ) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tif ( isExpanded === true ) {\n\t\t\t\t\t\tcollapse( clientId );\n\t\t\t\t\t} else if ( isExpanded === false ) {\n\t\t\t\t\t\texpand( clientId );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Make updates to the selected or dragged blocks synchronous,\n\t\t\t\t// but asynchronous for any other block.\n\t\t\t\tconst isDragged = !! draggedClientIds?.includes( clientId );\n\n\t\t\t\treturn (\n\t\t\t\t\t<AsyncModeProvider key={ clientId } value={ ! isSelected }>\n\t\t\t\t\t\t<ListViewBlock\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectBlockWithClientId }\n\t\t\t\t\t\t\tonToggleExpanded={ toggleExpanded }\n\t\t\t\t\t\t\tisDragged={ isDragged }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tisBranchSelected={ isSelectedBranch }\n\t\t\t\t\t\t\tisLastOfSelectedBranch={ isLastOfSelectedBranch }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\trowCount={ rowCount }\n\t\t\t\t\t\t\tsiblingBlockCount={ blockCount }\n\t\t\t\t\t\t\tshowBlockMovers={ showBlockMovers }\n\t\t\t\t\t\t\tterminatedLevels={ terminatedLevels }\n\t\t\t\t\t\t\tpath={ updatedPath }\n\t\t\t\t\t\t\tisExpanded={ isExpanded }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ hasNestedBranch && isExpanded && ! isDragged && (\n\t\t\t\t\t\t\t<ListViewBranch\n\t\t\t\t\t\t\t\tblocks={ innerBlocks }\n\t\t\t\t\t\t\t\tselectBlock={ selectBlock }\n\t\t\t\t\t\t\t\tisBranchSelected={ isSelectedBranch }\n\t\t\t\t\t\t\t\tisLastOfBranch={ isLast }\n\t\t\t\t\t\t\t\tshowAppender={ showAppender }\n\t\t\t\t\t\t\t\tshowBlockMovers={ showBlockMovers }\n\t\t\t\t\t\t\t\tshowNestedBlocks={ showNestedBlocks }\n\t\t\t\t\t\t\t\tparentBlockClientId={ clientId }\n\t\t\t\t\t\t\t\tlevel={ level + 1 }\n\t\t\t\t\t\t\t\tterminatedLevels={ updatedTerminatedLevels }\n\t\t\t\t\t\t\t\tpath={ updatedPath }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</AsyncModeProvider>\n\t\t\t\t);\n\t\t\t} ) }\n\t\t\t{ hasAppender && (\n\t\t\t\t<ListViewAppender\n\t\t\t\t\tparentBlockClientId={ parentBlockClientId }\n\t\t\t\t\tposition={ rowCount }\n\t\t\t\t\trowCount={ appenderPosition }\n\t\t\t\t\tlevel={ level }\n\t\t\t\t\tterminatedLevels={ terminatedLevels }\n\t\t\t\t\tpath={ [ ...path, appenderPosition ] }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n}\n\nListViewBranch.defaultProps = {\n\tselectBlock: () => {},\n};\n"]}