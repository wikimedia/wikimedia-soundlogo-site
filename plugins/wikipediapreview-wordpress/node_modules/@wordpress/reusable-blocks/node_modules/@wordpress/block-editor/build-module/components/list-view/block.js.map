{"version":3,"sources":["@wordpress/block-editor/src/components/list-view/block.js"],"names":["classnames","__experimentalTreeGridCell","TreeGridCell","__experimentalTreeGridItem","TreeGridItem","MenuGroup","MenuItem","__","moreVertical","useState","useRef","useEffect","useDispatch","useSelect","ListViewLeaf","BlockMoverUpButton","BlockMoverDownButton","ListViewBlockContents","BlockSettingsDropdown","useListViewContext","store","blockEditorStore","ListViewBlock","block","isSelected","isDragged","isBranchSelected","isLastOfSelectedBranch","onClick","onToggleExpanded","position","level","rowCount","siblingBlockCount","showBlockMovers","path","isExpanded","cellRef","isHovered","setIsHovered","clientId","blockParents","select","getBlockParents","selectBlock","selectEditorBlock","toggleBlockHighlight","hasSiblings","hasRenderedMovers","moverCellClassName","__experimentalFeatures","withExperimentalFeatures","__experimentalPersistentListViewFeatures","withExperimentalPersistentListViewFeatures","isTreeGridMounted","listViewBlockSettingsClassName","current","focus","highlightBlock","onMouseEnter","onMouseLeave","classes","undefined","ref","tabIndex","onFocus","onClose","length","parent"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\t__experimentalTreeGridCell as TreeGridCell,\n\t__experimentalTreeGridItem as TreeGridItem,\n\tMenuGroup,\n\tMenuItem,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { moreVertical } from '@wordpress/icons';\nimport { useState, useRef, useEffect } from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport ListViewLeaf from './leaf';\nimport {\n\tBlockMoverUpButton,\n\tBlockMoverDownButton,\n} from '../block-mover/button';\nimport ListViewBlockContents from './block-contents';\nimport BlockSettingsDropdown from '../block-settings-menu/block-settings-dropdown';\nimport { useListViewContext } from './context';\nimport { store as blockEditorStore } from '../../store';\n\nexport default function ListViewBlock( {\n\tblock,\n\tisSelected,\n\tisDragged,\n\tisBranchSelected,\n\tisLastOfSelectedBranch,\n\tonClick,\n\tonToggleExpanded,\n\tposition,\n\tlevel,\n\trowCount,\n\tsiblingBlockCount,\n\tshowBlockMovers,\n\tpath,\n\tisExpanded,\n} ) {\n\tconst cellRef = useRef( null );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\tconst { clientId } = block;\n\tconst blockParents = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( blockEditorStore ).getBlockParents( clientId );\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst {\n\t\tselectBlock: selectEditorBlock,\n\t\ttoggleBlockHighlight,\n\t} = useDispatch( blockEditorStore );\n\n\tconst hasSiblings = siblingBlockCount > 0;\n\tconst hasRenderedMovers = showBlockMovers && hasSiblings;\n\tconst moverCellClassName = classnames(\n\t\t'block-editor-list-view-block__mover-cell',\n\t\t{ 'is-visible': isHovered }\n\t);\n\tconst {\n\t\t__experimentalFeatures: withExperimentalFeatures,\n\t\t__experimentalPersistentListViewFeatures: withExperimentalPersistentListViewFeatures,\n\t\tisTreeGridMounted,\n\t} = useListViewContext();\n\tconst listViewBlockSettingsClassName = classnames(\n\t\t'block-editor-list-view-block__menu-cell',\n\t\t{ 'is-visible': isHovered }\n\t);\n\n\t// If ListView has experimental features related to the Persistent List View,\n\t// only focus the selected list item on mount; otherwise the list would always\n\t// try to steal the focus from the editor canvas.\n\tuseEffect( () => {\n\t\tif (\n\t\t\twithExperimentalPersistentListViewFeatures &&\n\t\t\t! isTreeGridMounted &&\n\t\t\tisSelected\n\t\t) {\n\t\t\tcellRef.current.focus();\n\t\t}\n\t}, [] );\n\n\t// If ListView has experimental features (such as drag and drop) enabled,\n\t// leave the focus handling as it was before, to avoid accidental regressions.\n\tuseEffect( () => {\n\t\tif ( withExperimentalFeatures && isSelected ) {\n\t\t\tcellRef.current.focus();\n\t\t}\n\t}, [ withExperimentalFeatures, isSelected ] );\n\n\tconst highlightBlock = withExperimentalPersistentListViewFeatures\n\t\t? toggleBlockHighlight\n\t\t: () => {};\n\n\tconst onMouseEnter = () => {\n\t\tsetIsHovered( true );\n\t\thighlightBlock( clientId, true );\n\t};\n\tconst onMouseLeave = () => {\n\t\tsetIsHovered( false );\n\t\thighlightBlock( clientId, false );\n\t};\n\n\tconst classes = classnames( {\n\t\t'is-selected': isSelected,\n\t\t'is-branch-selected':\n\t\t\twithExperimentalPersistentListViewFeatures && isBranchSelected,\n\t\t'is-last-of-selected-branch':\n\t\t\twithExperimentalPersistentListViewFeatures &&\n\t\t\tisLastOfSelectedBranch,\n\t\t'is-dragging': isDragged,\n\t} );\n\n\treturn (\n\t\t<ListViewLeaf\n\t\t\tclassName={ classes }\n\t\t\tonMouseEnter={ onMouseEnter }\n\t\t\tonMouseLeave={ onMouseLeave }\n\t\t\tonFocus={ onMouseEnter }\n\t\t\tonBlur={ onMouseLeave }\n\t\t\tlevel={ level }\n\t\t\tposition={ position }\n\t\t\trowCount={ rowCount }\n\t\t\tpath={ path }\n\t\t\tid={ `list-view-block-${ clientId }` }\n\t\t\tdata-block={ clientId }\n\t\t\tisExpanded={ isExpanded }\n\t\t>\n\t\t\t<TreeGridCell\n\t\t\t\tclassName=\"block-editor-list-view-block__contents-cell\"\n\t\t\t\tcolSpan={ hasRenderedMovers ? undefined : 2 }\n\t\t\t\tref={ cellRef }\n\t\t\t>\n\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t<div className=\"block-editor-list-view-block__contents-container\">\n\t\t\t\t\t\t<ListViewBlockContents\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ onClick }\n\t\t\t\t\t\t\tonToggleExpanded={ onToggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</TreeGridCell>\n\t\t\t{ hasRenderedMovers && (\n\t\t\t\t<>\n\t\t\t\t\t<TreeGridCell\n\t\t\t\t\t\tclassName={ moverCellClassName }\n\t\t\t\t\t\twithoutGridItem\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverUpButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverDownButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t</TreeGridCell>\n\t\t\t\t</>\n\t\t\t) }\n\n\t\t\t{ withExperimentalFeatures && (\n\t\t\t\t<TreeGridCell className={ listViewBlockSettingsClassName }>\n\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t<BlockSettingsDropdown\n\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\ttabIndex,\n\t\t\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdisableOpenOnArrowDown\n\t\t\t\t\t\t\t__experimentalSelectBlock={ onClick }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ ( { onClose } ) => (\n\t\t\t\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\t\tonClick={ async () => {\n\t\t\t\t\t\t\t\t\t\t\tif ( blockParents.length ) {\n\t\t\t\t\t\t\t\t\t\t\t\t// If the block to select is inside a dropdown, we need to open the dropdown.\n\t\t\t\t\t\t\t\t\t\t\t\t// Otherwise focus won't transfer to the block.\n\t\t\t\t\t\t\t\t\t\t\t\tfor ( const parent of blockParents ) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tawait selectEditorBlock(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tparent\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t// If clientId is already selected, it won't be focused (see block-wrapper.js)\n\t\t\t\t\t\t\t\t\t\t\t\t// This removes the selection first to ensure the focus will always switch.\n\t\t\t\t\t\t\t\t\t\t\t\tawait selectEditorBlock( null );\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\tawait selectEditorBlock( clientId );\n\t\t\t\t\t\t\t\t\t\t\tonClose();\n\t\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{ __( 'Go to block' ) }\n\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t</MenuGroup>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</BlockSettingsDropdown>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t) }\n\t\t</ListViewLeaf>\n\t);\n}\n"]}