{"version":3,"sources":["@wordpress/components/src/ui/color-picker/component.tsx"],"names":["options","label","value","getSafeColor","color","a","h","s","l","ColorPicker","props","forwardedRef","enableAlpha","colorProp","onChange","defaultValue","copyFormat","divProps","setColor","debouncedSetColor","handleChange","nextValue","safeColor","showInputs","setShowInputs","colorType","setColorType","nextColorType","settings","ConnectedColorPicker"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\n// eslint-disable-next-line no-restricted-imports\nimport type { Ref } from 'react';\nimport type { ColorFormats } from 'tinycolor2';\n\n/**\n * WordPress dependencies\n */\nimport { useState } from '@wordpress/element';\nimport { settings } from '@wordpress/icons';\nimport { useDebounce } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseContextSystem,\n\tcontextConnect,\n\tWordPressComponentProps,\n} from '../context';\nimport { HStack } from '../../h-stack';\nimport { Spacer } from '../../spacer';\nimport {\n\tColorfulWrapper,\n\tSelectControl,\n\tAuxiliaryColorArtefactWrapper,\n\tDetailsControlButton,\n} from './styles';\nimport { ColorDisplay } from './color-display';\nimport { ColorInput } from './color-input';\nimport { Picker } from './picker';\nimport { useControlledValue } from '../../utils/hooks';\n\nimport type { ColorType } from './types';\n\nexport interface ColorPickerProps {\n\tenableAlpha?: boolean;\n\tcolor?: ColorFormats.HSL | ColorFormats.HSLA;\n\tonChange?: ( color: ColorFormats.HSL | ColorFormats.HSLA ) => void;\n\tdefaultValue?: ColorFormats.HSL | ColorFormats.HSLA;\n\tcopyFormat?: ColorType;\n}\n\nconst options = [\n\t{ label: 'RGB', value: 'rgb' as const },\n\t{ label: 'HSL', value: 'hsl' as const },\n\t{ label: 'Hex', value: 'hex' as const },\n];\n\nconst getSafeColor = (\n\tcolor: ColorFormats.HSL | ColorFormats.HSLA | undefined\n): ColorFormats.HSLA => {\n\treturn color ? { a: 1, ...color } : { h: 0, s: 0, l: 100, a: 1 };\n};\n\nconst ColorPicker = (\n\tprops: WordPressComponentProps< ColorPickerProps, 'div', false >,\n\tforwardedRef: Ref< any >\n) => {\n\tconst {\n\t\tenableAlpha = false,\n\t\tcolor: colorProp,\n\t\tonChange,\n\t\tdefaultValue,\n\t\tcopyFormat,\n\t\t...divProps\n\t} = useContextSystem( props, 'ColorPicker' );\n\n\tconst [ color, setColor ] = useControlledValue( {\n\t\tonChange,\n\t\tvalue: colorProp,\n\t\tdefaultValue,\n\t} );\n\n\t// Debounce to prevent rapid changes from conflicting with one another.\n\tconst debouncedSetColor = useDebounce( setColor );\n\n\tconst handleChange = (\n\t\tnextValue: ColorFormats.HSLA | ColorFormats.HSL\n\t) => {\n\t\tdebouncedSetColor( nextValue );\n\t};\n\n\t// Use a safe default value for the color and remove the possibility of `undefined`.\n\tconst safeColor = getSafeColor( color );\n\n\tconst [ showInputs, setShowInputs ] = useState< boolean >( false );\n\tconst [ colorType, setColorType ] = useState< ColorType >(\n\t\tcopyFormat || 'hex'\n\t);\n\n\treturn (\n\t\t<ColorfulWrapper ref={ forwardedRef } { ...divProps }>\n\t\t\t<Picker\n\t\t\t\tonChange={ handleChange }\n\t\t\t\tcolor={ safeColor }\n\t\t\t\tenableAlpha={ enableAlpha }\n\t\t\t/>\n\t\t\t<AuxiliaryColorArtefactWrapper>\n\t\t\t\t<HStack justify=\"space-between\">\n\t\t\t\t\t{ showInputs ? (\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\toptions={ options }\n\t\t\t\t\t\t\tvalue={ colorType }\n\t\t\t\t\t\t\tonChange={ ( nextColorType ) =>\n\t\t\t\t\t\t\t\tsetColorType( nextColorType as ColorType )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tlabel={ __( 'Color format' ) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<ColorDisplay\n\t\t\t\t\t\t\tcolor={ safeColor }\n\t\t\t\t\t\t\tcolorType={ copyFormat || colorType }\n\t\t\t\t\t\t\tenableAlpha={ enableAlpha }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<DetailsControlButton\n\t\t\t\t\t\tisSmall\n\t\t\t\t\t\tonClick={ () => setShowInputs( ! showInputs ) }\n\t\t\t\t\t\ticon={ settings }\n\t\t\t\t\t\tisPressed={ showInputs }\n\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\tshowInputs\n\t\t\t\t\t\t\t\t? __( 'Hide detailed inputs' )\n\t\t\t\t\t\t\t\t: __( 'Show detailed inputs' )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</HStack>\n\t\t\t\t<Spacer margin={ 4 } />\n\t\t\t\t{ showInputs && (\n\t\t\t\t\t<ColorInput\n\t\t\t\t\t\tcolorType={ colorType }\n\t\t\t\t\t\tcolor={ safeColor }\n\t\t\t\t\t\tonChange={ handleChange }\n\t\t\t\t\t\tenableAlpha={ enableAlpha }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</AuxiliaryColorArtefactWrapper>\n\t\t</ColorfulWrapper>\n\t);\n};\n\nconst ConnectedColorPicker = contextConnect( ColorPicker, 'ColorPicker' );\n\nexport default ConnectedColorPicker;\n"]}