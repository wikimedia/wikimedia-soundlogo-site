{"version":3,"sources":["@wordpress/components/src/tools-panel/tools-panel-item/hook.ts"],"names":["useToolsPanelItem","props","className","hasValue","isShownByDefault","label","panelId","resetAllFilter","onDeselect","onSelect","otherProps","cx","classes","styles","ToolsPanelItem","currentPanelId","menuItems","registerPanelItem","deregisterPanelItem","flagItemCustomization","isResetting","hasValueCallback","resetAllFilterCallback","isValueSet","wasValueSet","menuGroup","isMenuItemChecked","wasMenuItemChecked","isShown","undefined"],"mappings":";;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AAZA;AACA;AACA;;AAIA;AACA;AACA;AAOO,SAASA,iBAAT,CACNC,KADM,EAEL;AAAA;;AACD,QAAM;AACLC,IAAAA,SADK;AAELC,IAAAA,QAFK;AAGLC,IAAAA,gBAHK;AAILC,IAAAA,KAJK;AAKLC,IAAAA,OALK;AAMLC,IAAAA,cANK;AAOLC,IAAAA,UAPK;AAQLC,IAAAA,QARK;AASL,OAAGC;AATE,MAUF,gCAAkBT,KAAlB,EAAyB,gBAAzB,CAVJ;AAYA,QAAMU,EAAE,GAAG,mBAAX;AACA,QAAMC,OAAO,GAAG,sBAAS,MAAM;AAC9B,WAAOD,EAAE,CAAEE,MAAM,CAACC,cAAT,EAAyBZ,SAAzB,CAAT;AACA,GAFe,EAEb,CAAEA,SAAF,CAFa,CAAhB;AAIA,QAAM;AACLI,IAAAA,OAAO,EAAES,cADJ;AAELC,IAAAA,SAFK;AAGLC,IAAAA,iBAHK;AAILC,IAAAA,mBAJK;AAKLC,IAAAA,qBALK;AAMLC,IAAAA;AANK,MAOF,oCAPJ;AASA,QAAMC,gBAAgB,GAAG,0BAAalB,QAAb,EAAuB,CAAEG,OAAF,CAAvB,CAAzB;AACA,QAAMgB,sBAAsB,GAAG,0BAAaf,cAAb,EAA6B,CAAED,OAAF,CAA7B,CAA/B,CA5BC,CA8BD;AACA;;AACA,0BAAW,MAAM;AAChB,QAAKS,cAAc,KAAKT,OAAxB,EAAkC;AACjCW,MAAAA,iBAAiB,CAAE;AAClBd,QAAAA,QAAQ,EAAEkB,gBADQ;AAElBjB,QAAAA,gBAFkB;AAGlBC,QAAAA,KAHkB;AAIlBE,QAAAA,cAAc,EAAEe,sBAJE;AAKlBhB,QAAAA;AALkB,OAAF,CAAjB;AAOA;;AAED,WAAO,MAAMY,mBAAmB,CAAEb,KAAF,CAAhC;AACA,GAZD,EAYG,CACFU,cADE,EAEFT,OAFE,EAGFF,gBAHE,EAIFC,KAJE,EAKFgB,gBALE,EAMFC,sBANE,CAZH;AAqBA,QAAMC,UAAU,GAAGpB,QAAQ,EAA3B;AACA,QAAMqB,WAAW,GAAG,0BAAaD,UAAb,CAApB,CAtDC,CAwDD;AACA;;AACA,0BAAW,MAAM;AAChB,QAAKnB,gBAAgB,IAAImB,UAApB,IAAkC,CAAEC,WAAzC,EAAuD;AACtDL,MAAAA,qBAAqB,CAAEd,KAAF,CAArB;AACA;AACD,GAJD,EAIG,CAAEkB,UAAF,EAAcC,WAAd,EAA2BpB,gBAA3B,EAA6CC,KAA7C,CAJH,EA1DC,CAgED;AACA;;AACA,QAAMoB,SAAS,GAAGrB,gBAAgB,GAAG,SAAH,GAAe,UAAjD;AACA,QAAMsB,iBAAiB,GAAGV,SAAH,aAAGA,SAAH,+CAAGA,SAAS,CAAIS,SAAJ,CAAZ,yDAAG,qBAA4BpB,KAA5B,CAA1B;AACA,QAAMsB,kBAAkB,GAAG,0BAAaD,iBAAb,CAA3B,CApEC,CAsED;AACA;;AACA,0BAAW,MAAM;AAChB,QAAKN,WAAW,IAAIL,cAAc,KAAKT,OAAvC,EAAiD;AAChD;AACA;;AAED,QAAKoB,iBAAiB,IAAI,CAAEH,UAAvB,IAAqC,CAAEI,kBAA5C,EAAiE;AAChElB,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ;AACR;;AAED,QAAK,CAAEiB,iBAAF,IAAuBC,kBAA5B,EAAiD;AAChDnB,MAAAA,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU;AACV;AACD,GAZD,EAYG,CACFO,cADE,EAEFW,iBAFE,EAGFN,WAHE,EAIFG,UAJE,EAKFjB,OALE,EAMFqB,kBANE,CAZH,EAxEC,CA6FD;AACA;AACA;;AACA,QAAMC,OAAO,GAAGxB,gBAAgB,GAC7B,CAAAY,SAAS,SAAT,IAAAA,SAAS,WAAT,qCAAAA,SAAS,CAAIS,SAAJ,CAAT,gFAA4BpB,KAA5B,OAAwCwB,SADX,GAE7BH,iBAFH;AAIA,SAAO,EACN,GAAGhB,UADG;AAENkB,IAAAA,OAFM;AAGN1B,IAAAA,SAAS,EAAEU;AAHL,GAAP;AAKA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { usePrevious } from '@wordpress/compose';\nimport { useCallback, useEffect, useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport * as styles from '../styles';\nimport { useToolsPanelContext } from '../context';\nimport { useContextSystem, WordPressComponentProps } from '../../ui/context';\nimport { useCx } from '../../utils/hooks/use-cx';\nimport type { ToolsPanelItemProps } from '../types';\n\nexport function useToolsPanelItem(\n\tprops: WordPressComponentProps< ToolsPanelItemProps, 'div' >\n) {\n\tconst {\n\t\tclassName,\n\t\thasValue,\n\t\tisShownByDefault,\n\t\tlabel,\n\t\tpanelId,\n\t\tresetAllFilter,\n\t\tonDeselect,\n\t\tonSelect,\n\t\t...otherProps\n\t} = useContextSystem( props, 'ToolsPanelItem' );\n\n\tconst cx = useCx();\n\tconst classes = useMemo( () => {\n\t\treturn cx( styles.ToolsPanelItem, className );\n\t}, [ className ] );\n\n\tconst {\n\t\tpanelId: currentPanelId,\n\t\tmenuItems,\n\t\tregisterPanelItem,\n\t\tderegisterPanelItem,\n\t\tflagItemCustomization,\n\t\tisResetting,\n\t} = useToolsPanelContext();\n\n\tconst hasValueCallback = useCallback( hasValue, [ panelId ] );\n\tconst resetAllFilterCallback = useCallback( resetAllFilter, [ panelId ] );\n\n\t// Registering the panel item allows the panel to include it in its\n\t// automatically generated menu and determine its initial checked status.\n\tuseEffect( () => {\n\t\tif ( currentPanelId === panelId ) {\n\t\t\tregisterPanelItem( {\n\t\t\t\thasValue: hasValueCallback,\n\t\t\t\tisShownByDefault,\n\t\t\t\tlabel,\n\t\t\t\tresetAllFilter: resetAllFilterCallback,\n\t\t\t\tpanelId,\n\t\t\t} );\n\t\t}\n\n\t\treturn () => deregisterPanelItem( label );\n\t}, [\n\t\tcurrentPanelId,\n\t\tpanelId,\n\t\tisShownByDefault,\n\t\tlabel,\n\t\thasValueCallback,\n\t\tresetAllFilterCallback,\n\t] );\n\n\tconst isValueSet = hasValue();\n\tconst wasValueSet = usePrevious( isValueSet );\n\n\t// If this item represents a default control it will need to notify the\n\t// panel when a custom value has been set.\n\tuseEffect( () => {\n\t\tif ( isShownByDefault && isValueSet && ! wasValueSet ) {\n\t\t\tflagItemCustomization( label );\n\t\t}\n\t}, [ isValueSet, wasValueSet, isShownByDefault, label ] );\n\n\t// Note: `label` is used as a key when building menu item state in\n\t// `ToolsPanel`.\n\tconst menuGroup = isShownByDefault ? 'default' : 'optional';\n\tconst isMenuItemChecked = menuItems?.[ menuGroup ]?.[ label ];\n\tconst wasMenuItemChecked = usePrevious( isMenuItemChecked );\n\n\t// Determine if the panel item's corresponding menu is being toggled and\n\t// trigger appropriate callback if it is.\n\tuseEffect( () => {\n\t\tif ( isResetting || currentPanelId !== panelId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( isMenuItemChecked && ! isValueSet && ! wasMenuItemChecked ) {\n\t\t\tonSelect?.();\n\t\t}\n\n\t\tif ( ! isMenuItemChecked && wasMenuItemChecked ) {\n\t\t\tonDeselect?.();\n\t\t}\n\t}, [\n\t\tcurrentPanelId,\n\t\tisMenuItemChecked,\n\t\tisResetting,\n\t\tisValueSet,\n\t\tpanelId,\n\t\twasMenuItemChecked,\n\t] );\n\n\t// The item is shown if it is a default control regardless of whether it\n\t// has a value. Optional items are shown when they are checked or have\n\t// a value.\n\tconst isShown = isShownByDefault\n\t\t? menuItems?.[ menuGroup ]?.[ label ] !== undefined\n\t\t: isMenuItemChecked;\n\n\treturn {\n\t\t...otherProps,\n\t\tisShown,\n\t\tclassName: classes,\n\t};\n}\n"]}