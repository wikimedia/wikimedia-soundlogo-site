{"version":3,"sources":["@wordpress/components/src/ui/color-picker/rgb-input.tsx"],"names":["RgbInput","color","onChange","enableAlpha","r","g","b","a","toRgb","nextR","toHsl","nextG","nextB","Math","trunc","nextA"],"mappings":";;;;;;;;;;;AAGA;;AAKA;;AARA;AACA;AACA;;AAGA;AACA;AACA;AASO,MAAMA,QAAQ,GAAG,CAAE;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAF,KAAuD;AAC9E,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA,CAAL;AAAQC,IAAAA,CAAR;AAAWC,IAAAA;AAAX,MAAiB,wBAAUN,KAAV,EAAkBO,KAAlB,EAAvB;AAEA,SACC,qDACC,4BAAC,gCAAD;AACC,IAAA,GAAG,EAAG,CADP;AAEC,IAAA,GAAG,EAAG,GAFP;AAGC,IAAA,KAAK,EAAC,KAHP;AAIC,IAAA,YAAY,EAAC,GAJd;AAKC,IAAA,KAAK,EAAGJ,CALT;AAMC,IAAA,QAAQ,EAAKK,KAAF,IACVP,QAAQ,CAAE,wBAAU;AAAEE,MAAAA,CAAC,EAAEK,KAAL;AAAYJ,MAAAA,CAAZ;AAAeC,MAAAA,CAAf;AAAkBC,MAAAA;AAAlB,KAAV,EAAkCG,KAAlC,EAAF;AAPV,IADD,EAWC,4BAAC,gCAAD;AACC,IAAA,GAAG,EAAG,CADP;AAEC,IAAA,GAAG,EAAG,GAFP;AAGC,IAAA,KAAK,EAAC,OAHP;AAIC,IAAA,YAAY,EAAC,GAJd;AAKC,IAAA,KAAK,EAAGL,CALT;AAMC,IAAA,QAAQ,EAAKM,KAAF,IACVT,QAAQ,CAAE,wBAAU;AAAEE,MAAAA,CAAF;AAAKC,MAAAA,CAAC,EAAEM,KAAR;AAAeL,MAAAA,CAAf;AAAkBC,MAAAA;AAAlB,KAAV,EAAkCG,KAAlC,EAAF;AAPV,IAXD,EAqBC,4BAAC,gCAAD;AACC,IAAA,GAAG,EAAG,CADP;AAEC,IAAA,GAAG,EAAG,GAFP;AAGC,IAAA,KAAK,EAAC,MAHP;AAIC,IAAA,YAAY,EAAC,GAJd;AAKC,IAAA,KAAK,EAAGJ,CALT;AAMC,IAAA,QAAQ,EAAKM,KAAF,IACVV,QAAQ,CAAE,wBAAU;AAAEE,MAAAA,CAAF;AAAKC,MAAAA,CAAL;AAAQC,MAAAA,CAAC,EAAEM,KAAX;AAAkBL,MAAAA;AAAlB,KAAV,EAAkCG,KAAlC,EAAF;AAPV,IArBD,EA+BGP,WAAW,IACZ,4BAAC,gCAAD;AACC,IAAA,GAAG,EAAG,CADP;AAEC,IAAA,GAAG,EAAG,GAFP;AAGC,IAAA,KAAK,EAAC,OAHP;AAIC,IAAA,YAAY,EAAC,GAJd;AAKC,IAAA,KAAK,EAAGU,IAAI,CAACC,KAAL,CAAYP,CAAC,GAAG,GAAhB,CALT;AAMC,IAAA,QAAQ,EAAKQ,KAAF,IACVb,QAAQ,CACP,wBAAU;AACTE,MAAAA,CADS;AAETC,MAAAA,CAFS;AAGTC,MAAAA,CAHS;AAITC,MAAAA,CAAC,EAAEQ,KAAK,GAAG;AAJF,KAAV,EAKIL,KALJ,EADO;AAPV,IAhCF,CADD;AAqDA,CAxDM","sourcesContent":["/**\n * External dependencies\n */\nimport colorize, { ColorFormats } from 'tinycolor2';\n\n/**\n * Internal dependencies\n */\nimport { InputWithSlider } from './input-with-slider';\n\ninterface RgbInputProps {\n\tcolor: ColorFormats.HSLA;\n\tonChange: ( color: ColorFormats.HSLA ) => void;\n\tenableAlpha: boolean;\n}\n\nexport const RgbInput = ( { color, onChange, enableAlpha }: RgbInputProps ) => {\n\tconst { r, g, b, a } = colorize( color ).toRgb();\n\n\treturn (\n\t\t<>\n\t\t\t<InputWithSlider\n\t\t\t\tmin={ 0 }\n\t\t\t\tmax={ 255 }\n\t\t\t\tlabel=\"Red\"\n\t\t\t\tabbreviation=\"R\"\n\t\t\t\tvalue={ r }\n\t\t\t\tonChange={ ( nextR: number ) =>\n\t\t\t\t\tonChange( colorize( { r: nextR, g, b, a } ).toHsl() )\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InputWithSlider\n\t\t\t\tmin={ 0 }\n\t\t\t\tmax={ 255 }\n\t\t\t\tlabel=\"Green\"\n\t\t\t\tabbreviation=\"G\"\n\t\t\t\tvalue={ g }\n\t\t\t\tonChange={ ( nextG: number ) =>\n\t\t\t\t\tonChange( colorize( { r, g: nextG, b, a } ).toHsl() )\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<InputWithSlider\n\t\t\t\tmin={ 0 }\n\t\t\t\tmax={ 255 }\n\t\t\t\tlabel=\"Blue\"\n\t\t\t\tabbreviation=\"B\"\n\t\t\t\tvalue={ b }\n\t\t\t\tonChange={ ( nextB: number ) =>\n\t\t\t\t\tonChange( colorize( { r, g, b: nextB, a } ).toHsl() )\n\t\t\t\t}\n\t\t\t/>\n\t\t\t{ enableAlpha && (\n\t\t\t\t<InputWithSlider\n\t\t\t\t\tmin={ 0 }\n\t\t\t\t\tmax={ 100 }\n\t\t\t\t\tlabel=\"Alpha\"\n\t\t\t\t\tabbreviation=\"A\"\n\t\t\t\t\tvalue={ Math.trunc( a * 100 ) }\n\t\t\t\t\tonChange={ ( nextA: number ) =>\n\t\t\t\t\t\tonChange(\n\t\t\t\t\t\t\tcolorize( {\n\t\t\t\t\t\t\t\tr,\n\t\t\t\t\t\t\t\tg,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\ta: nextA / 100,\n\t\t\t\t\t\t\t} ).toHsl()\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t</>\n\t);\n};\n"]}