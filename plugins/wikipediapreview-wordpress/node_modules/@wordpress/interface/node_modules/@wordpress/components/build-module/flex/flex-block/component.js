import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * Internal dependencies
 */
import { contextConnect } from '../../ui/context';
import { View } from '../../view';
import { useFlexBlock } from './hook';
/**
 * @param {import('../../ui/context').WordPressComponentProps<import('../types').FlexBlockProps, 'div'>} props
 * @param {import('react').Ref<any>}                                                                     forwardedRef
 */

function FlexBlock(props, forwardedRef) {
  const flexBlockProps = useFlexBlock(props);
  return createElement(View, _extends({}, flexBlockProps, {
    ref: forwardedRef
  }));
}
/**
 * `FlexBlock` is a primitive layout component that adaptively resizes content within layout containers like `Flex`.
 *
 * @example
 * ```jsx
 * <Flex>
 * 	<FlexBlock>...</FlexBlock>
 * </Flex>
 * ```
 */


const ConnectedFlexBlock = contextConnect(FlexBlock, 'FlexBlock');
export default ConnectedFlexBlock;
//# sourceMappingURL=component.js.map