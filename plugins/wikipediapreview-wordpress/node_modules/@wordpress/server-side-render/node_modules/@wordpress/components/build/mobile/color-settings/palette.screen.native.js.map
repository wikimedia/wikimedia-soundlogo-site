{"version":3,"sources":["@wordpress/components/src/mobile/color-settings/palette.screen.native.js"],"names":["HIT_SLOP","top","bottom","left","right","PaletteScreen","route","navigation","shouldEnableBottomSheetScroll","BottomSheetContext","label","onColorChange","onGradientChange","colorValue","defaultSettings","params","segments","isGradient","colorsUtils","currentValue","setCurrentValue","isGradientColor","selectedSegmentIndex","currentSegment","setCurrentSegment","horizontalSeparatorStyle","styles","horizontalSeparator","horizontalSeparatorDark","clearButtonStyle","clearButton","clearButtonDark","selectedColorTextStyle","colorText","colorTextDark","isSolidSegment","isCustomGadientShown","setColor","color","onClear","undefined","onCustomPress","navigate","screens","picker","gradientPicker","getClearButton","clearButtonContainer","getFooter","indexOf","colorIndicator","footer","flex","toUpperCase","selectColorText","goBack"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View, Text, TouchableWithoutFeedback } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useState, useContext } from '@wordpress/element';\nimport { usePreferredColorSchemeStyle } from '@wordpress/compose';\nimport {\n\tColorControl,\n\tPanelBody,\n\tBottomSheetContext,\n} from '@wordpress/components';\nimport { useRoute, useNavigation } from '@react-navigation/native';\n/**\n * Internal dependencies\n */\nimport ColorPalette from '../../color-palette';\nimport ColorIndicator from '../../color-indicator';\nimport NavBar from '../bottom-sheet/nav-bar';\nimport SegmentedControls from '../segmented-control';\nimport { colorsUtils } from './utils';\n\nimport styles from './style.scss';\n\nconst HIT_SLOP = { top: 22, bottom: 22, left: 22, right: 22 };\n\nconst PaletteScreen = () => {\n\tconst route = useRoute();\n\tconst navigation = useNavigation();\n\tconst { shouldEnableBottomSheetScroll } = useContext( BottomSheetContext );\n\tconst {\n\t\tlabel,\n\t\tonColorChange,\n\t\tonGradientChange,\n\t\tcolorValue,\n\t\tdefaultSettings,\n\t} = route.params || {};\n\tconst { segments, isGradient } = colorsUtils;\n\tconst [ currentValue, setCurrentValue ] = useState( colorValue );\n\tconst isGradientColor = isGradient( currentValue );\n\tconst selectedSegmentIndex = isGradientColor ? 1 : 0;\n\n\tconst [ currentSegment, setCurrentSegment ] = useState(\n\t\tsegments[ selectedSegmentIndex ]\n\t);\n\n\tconst horizontalSeparatorStyle = usePreferredColorSchemeStyle(\n\t\tstyles.horizontalSeparator,\n\t\tstyles.horizontalSeparatorDark\n\t);\n\tconst clearButtonStyle = usePreferredColorSchemeStyle(\n\t\tstyles.clearButton,\n\t\tstyles.clearButtonDark\n\t);\n\tconst selectedColorTextStyle = usePreferredColorSchemeStyle(\n\t\tstyles.colorText,\n\t\tstyles.colorTextDark\n\t);\n\n\tconst isSolidSegment = currentSegment === segments[ 0 ];\n\tconst isCustomGadientShown = ! isSolidSegment && isGradientColor;\n\n\tconst setColor = ( color ) => {\n\t\tsetCurrentValue( color );\n\t\tif ( isSolidSegment && onColorChange && onGradientChange ) {\n\t\t\tonColorChange( color );\n\t\t\tonGradientChange( '' );\n\t\t} else if ( isSolidSegment && onColorChange ) {\n\t\t\tonColorChange( color );\n\t\t} else if ( ! isSolidSegment && onGradientChange ) {\n\t\t\tonGradientChange( color );\n\t\t\tonColorChange( '' );\n\t\t}\n\t};\n\n\tfunction onClear() {\n\t\tsetCurrentValue( undefined );\n\t\tif ( isSolidSegment ) {\n\t\t\tonColorChange( '' );\n\t\t} else {\n\t\t\tonGradientChange( '' );\n\t\t}\n\t}\n\n\tfunction onCustomPress() {\n\t\tif ( isSolidSegment ) {\n\t\t\tnavigation.navigate( colorsUtils.screens.picker, {\n\t\t\t\tcurrentValue,\n\t\t\t\tsetColor,\n\t\t\t} );\n\t\t} else {\n\t\t\tnavigation.navigate( colorsUtils.screens.gradientPicker, {\n\t\t\t\tsetColor,\n\t\t\t\tisGradientColor,\n\t\t\t\tcurrentValue,\n\t\t\t} );\n\t\t}\n\t}\n\n\tfunction getClearButton() {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback onPress={ onClear } hitSlop={ HIT_SLOP }>\n\t\t\t\t<View style={ styles.clearButtonContainer }>\n\t\t\t\t\t<Text style={ clearButtonStyle }>{ __( 'Reset' ) }</Text>\n\t\t\t\t</View>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t}\n\n\tfunction getFooter() {\n\t\tif ( onGradientChange ) {\n\t\t\treturn (\n\t\t\t\t<SegmentedControls\n\t\t\t\t\tsegments={ segments }\n\t\t\t\t\tsegmentHandler={ setCurrentSegment }\n\t\t\t\t\tselectedIndex={ segments.indexOf( currentSegment ) }\n\t\t\t\t\taddonLeft={\n\t\t\t\t\t\tcurrentValue && (\n\t\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\taddonRight={ currentValue && getClearButton() }\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<View style={ styles.footer }>\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && (\n\t\t\t\t\t\t<ColorIndicator\n\t\t\t\t\t\t\tcolor={ currentValue }\n\t\t\t\t\t\t\tstyle={ styles.colorIndicator }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</View>\n\t\t\t\t{ currentValue ? (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ selectedColorTextStyle }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t\tselectable\n\t\t\t\t\t>\n\t\t\t\t\t\t{ currentValue.toUpperCase() }\n\t\t\t\t\t</Text>\n\t\t\t\t) : (\n\t\t\t\t\t<Text\n\t\t\t\t\t\tstyle={ styles.selectColorText }\n\t\t\t\t\t\tmaxFontSizeMultiplier={ 2 }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Select a color above' ) }\n\t\t\t\t\t</Text>\n\t\t\t\t) }\n\t\t\t\t<View style={ styles.flex }>\n\t\t\t\t\t{ currentValue && getClearButton() }\n\t\t\t\t</View>\n\t\t\t</View>\n\t\t);\n\t}\n\treturn (\n\t\t<View>\n\t\t\t<NavBar>\n\t\t\t\t<NavBar.BackButton onPress={ navigation.goBack } />\n\t\t\t\t<NavBar.Heading>{ label } </NavBar.Heading>\n\t\t\t</NavBar>\n\t\t\t<ColorPalette\n\t\t\t\tsetColor={ setColor }\n\t\t\t\tactiveColor={ currentValue }\n\t\t\t\tisGradientColor={ isGradientColor }\n\t\t\t\tcurrentSegment={ currentSegment }\n\t\t\t\tonCustomPress={ onCustomPress }\n\t\t\t\tshouldEnableBottomSheetScroll={ shouldEnableBottomSheetScroll }\n\t\t\t\tdefaultSettings={ defaultSettings }\n\t\t\t/>\n\t\t\t{ isCustomGadientShown && (\n\t\t\t\t<>\n\t\t\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t\t\t<PanelBody>\n\t\t\t\t\t\t<ColorControl\n\t\t\t\t\t\t\tlabel={ __( 'Customize Gradient' ) }\n\t\t\t\t\t\t\tonPress={ onCustomPress }\n\t\t\t\t\t\t\twithColorIndicator={ false }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t<View style={ horizontalSeparatorStyle } />\n\t\t\t{ getFooter() }\n\t\t</View>\n\t);\n};\n\nexport default PaletteScreen;\n"]}