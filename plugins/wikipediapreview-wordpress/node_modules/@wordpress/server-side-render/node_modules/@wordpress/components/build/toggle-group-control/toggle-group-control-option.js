"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _compose = require("@wordpress/compose");

var _context = require("../ui/context");

var _toggleGroupControlButton = _interopRequireDefault(require("./toggle-group-control-button"));

var _toggleGroupControlContext = require("./toggle-group-control-context");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function getShowSeparator(toggleGroupControlContext, index) {
  var _items$index, _items;

  const {
    currentId,
    items
  } = toggleGroupControlContext;
  const isLast = index === items.length - 1;
  const isActive = ((_items$index = items[index]) === null || _items$index === void 0 ? void 0 : _items$index.id) === currentId;
  const isNextActive = ((_items = items[index + 1]) === null || _items === void 0 ? void 0 : _items.id) === currentId;
  let showSeparator = true;

  if (items.length < 3) {
    showSeparator = false;
  }

  if (isActive || isNextActive || isLast) {
    showSeparator = false;
  }

  return showSeparator;
}

function ToggleGroupControlOption(props, forwardedRef) {
  const toggleGroupControlContext = (0, _toggleGroupControlContext.useToggleGroupControlContext)();
  const id = (0, _compose.useInstanceId)(ToggleGroupControlOption, toggleGroupControlContext.baseId || 'toggle-group-control-option');
  const buttonProps = (0, _context.useContextSystem)({ ...props,
    id
  }, 'ToggleGroupControlOption');
  const index = toggleGroupControlContext.items.findIndex(item => item.id === buttonProps.id);
  const showSeparator = getShowSeparator(toggleGroupControlContext, index);
  return (0, _element.createElement)(_toggleGroupControlButton.default, (0, _extends2.default)({
    ref: forwardedRef
  }, toggleGroupControlContext, buttonProps, {
    showSeparator
  }));
}

var _default = (0, _context.contextConnect)(ToggleGroupControlOption, 'ToggleGroupControlOption');

exports.default = _default;
//# sourceMappingURL=toggle-group-control-option.js.map