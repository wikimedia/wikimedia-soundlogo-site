{"version":3,"sources":["@wordpress/core-data/src/entity-provider.js"],"names":["EMPTY_ARRAY","entities","defaultEntities","reduce","acc","entity","kind","name","context","kinds","getEntity","type","Error","EntityProvider","id","children","Provider","useEntityId","useEntityProp","prop","_id","providerId","value","fullValue","select","getEntityRecord","getEditedEntityRecord","STORE_NAME","editedEntity","editEntityRecord","setValue","newValue","useEntityBlockEditor","content","blocks","__unstableCreateUndoLevel","parsedContent","undoIgnore","onChange","newBlocks","options","selection","edits","noChange","blocksForSerialization","onInput"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tcreateContext,\n\tuseContext,\n\tuseCallback,\n\tuseEffect,\n} from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { parse, __unstableSerializeAndClean } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { STORE_NAME } from './name';\n\nconst EMPTY_ARRAY = [];\n\n/**\n * Internal dependencies\n */\nimport { defaultEntities, kinds } from './entities';\n\nconst entities = {\n\t...defaultEntities.reduce( ( acc, entity ) => {\n\t\tif ( ! acc[ entity.kind ] ) {\n\t\t\tacc[ entity.kind ] = {};\n\t\t}\n\t\tacc[ entity.kind ][ entity.name ] = { context: createContext() };\n\t\treturn acc;\n\t}, {} ),\n\t...kinds.reduce( ( acc, kind ) => {\n\t\tacc[ kind.name ] = {};\n\t\treturn acc;\n\t}, {} ),\n};\nconst getEntity = ( kind, type ) => {\n\tif ( ! entities[ kind ] ) {\n\t\tthrow new Error( `Missing entity config for kind: ${ kind }.` );\n\t}\n\n\tif ( ! entities[ kind ][ type ] ) {\n\t\tentities[ kind ][ type ] = { context: createContext() };\n\t}\n\n\treturn entities[ kind ][ type ];\n};\n\n/**\n * Context provider component for providing\n * an entity for a specific entity type.\n *\n * @param {Object} props          The component's props.\n * @param {string} props.kind     The entity kind.\n * @param {string} props.type     The entity type.\n * @param {number} props.id       The entity ID.\n * @param {*}      props.children The children to wrap.\n *\n * @return {Object} The provided children, wrapped with\n *                   the entity's context provider.\n */\nexport default function EntityProvider( { kind, type, id, children } ) {\n\tconst Provider = getEntity( kind, type ).context.Provider;\n\treturn <Provider value={ id }>{ children }</Provider>;\n}\n\n/**\n * Hook that returns the ID for the nearest\n * provided entity of the specified type.\n *\n * @param {string} kind The entity kind.\n * @param {string} type The entity type.\n */\nexport function useEntityId( kind, type ) {\n\treturn useContext( getEntity( kind, type ).context );\n}\n\n/**\n * Hook that returns the value and a setter for the\n * specified property of the nearest provided\n * entity of the specified type.\n *\n * @param {string} kind  The entity kind.\n * @param {string} type  The entity type.\n * @param {string} prop  The property name.\n * @param {string} [_id] An entity ID to use instead of the context-provided one.\n *\n * @return {[*, Function, *]} An array where the first item is the\n *                            property value, the second is the\n *                            setter and the third is the full value\n * \t\t\t\t\t\t\t  object from REST API containing more\n * \t\t\t\t\t\t\t  information like `raw`, `rendered` and\n * \t\t\t\t\t\t\t  `protected` props.\n */\nexport function useEntityProp( kind, type, prop, _id ) {\n\tconst providerId = useEntityId( kind, type );\n\tconst id = _id ?? providerId;\n\n\tconst { value, fullValue } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecord, getEditedEntityRecord } = select(\n\t\t\t\tSTORE_NAME\n\t\t\t);\n\t\t\tconst entity = getEntityRecord( kind, type, id ); // Trigger resolver.\n\t\t\tconst editedEntity = getEditedEntityRecord( kind, type, id );\n\t\t\treturn entity && editedEntity\n\t\t\t\t? {\n\t\t\t\t\t\tvalue: editedEntity[ prop ],\n\t\t\t\t\t\tfullValue: entity[ prop ],\n\t\t\t\t  }\n\t\t\t\t: {};\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\tconst { editEntityRecord } = useDispatch( STORE_NAME );\n\tconst setValue = useCallback(\n\t\t( newValue ) => {\n\t\t\teditEntityRecord( kind, type, id, {\n\t\t\t\t[ prop ]: newValue,\n\t\t\t} );\n\t\t},\n\t\t[ kind, type, id, prop ]\n\t);\n\n\treturn [ value, setValue, fullValue ];\n}\n\n/**\n * Hook that returns block content getters and setters for\n * the nearest provided entity of the specified type.\n *\n * The return value has the shape `[ blocks, onInput, onChange ]`.\n * `onInput` is for block changes that don't create undo levels\n * or dirty the post, non-persistent changes, and `onChange` is for\n * peristent changes. They map directly to the props of a\n * `BlockEditorProvider` and are intended to be used with it,\n * or similar components or hooks.\n *\n * @param {string} kind         The entity kind.\n * @param {string} type         The entity type.\n * @param {Object} options\n * @param {string} [options.id] An entity ID to use instead of the context-provided one.\n *\n * @return {[WPBlock[], Function, Function]} The block array and setters.\n */\nexport function useEntityBlockEditor( kind, type, { id: _id } = {} ) {\n\tconst providerId = useEntityId( kind, type );\n\tconst id = _id ?? providerId;\n\tconst { content, blocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEditedEntityRecord } = select( STORE_NAME );\n\t\t\tconst editedEntity = getEditedEntityRecord( kind, type, id );\n\t\t\treturn {\n\t\t\t\tblocks: editedEntity.blocks,\n\t\t\t\tcontent: editedEntity.content,\n\t\t\t};\n\t\t},\n\t\t[ kind, type, id ]\n\t);\n\tconst { __unstableCreateUndoLevel, editEntityRecord } = useDispatch(\n\t\tSTORE_NAME\n\t);\n\n\tuseEffect( () => {\n\t\t// Load the blocks from the content if not already in state\n\t\t// Guard against other instances that might have\n\t\t// set content to a function already or the blocks are already in state.\n\t\tif ( content && typeof content !== 'function' && ! blocks ) {\n\t\t\tconst parsedContent = parse( content );\n\t\t\teditEntityRecord(\n\t\t\t\tkind,\n\t\t\t\ttype,\n\t\t\t\tid,\n\t\t\t\t{\n\t\t\t\t\tblocks: parsedContent,\n\t\t\t\t},\n\t\t\t\t{ undoIgnore: true }\n\t\t\t);\n\t\t}\n\t}, [ content ] );\n\n\tconst onChange = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst { selection } = options;\n\t\t\tconst edits = { blocks: newBlocks, selection };\n\n\t\t\tconst noChange = blocks === edits.blocks;\n\t\t\tif ( noChange ) {\n\t\t\t\treturn __unstableCreateUndoLevel( kind, type, id );\n\t\t\t}\n\n\t\t\t// We create a new function here on every persistent edit\n\t\t\t// to make sure the edit makes the post dirty and creates\n\t\t\t// a new undo level.\n\t\t\tedits.content = ( { blocks: blocksForSerialization = [] } ) =>\n\t\t\t\t__unstableSerializeAndClean( blocksForSerialization );\n\n\t\t\teditEntityRecord( kind, type, id, edits );\n\t\t},\n\t\t[ kind, type, id, blocks ]\n\t);\n\n\tconst onInput = useCallback(\n\t\t( newBlocks, options ) => {\n\t\t\tconst { selection } = options;\n\t\t\tconst edits = { blocks: newBlocks, selection };\n\t\t\teditEntityRecord( kind, type, id, edits );\n\t\t},\n\t\t[ kind, type, id ]\n\t);\n\n\treturn [ blocks ?? EMPTY_ARRAY, onInput, onChange ];\n}\n"]}