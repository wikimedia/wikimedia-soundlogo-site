{"version":3,"sources":["@wordpress/viewport/src/with-viewport-match.native.js"],"names":["withViewportMatch","queries","select","query","store","isViewportMatch"],"mappings":";;;;;;;AAGA;;AAKA;;AACA;;AAKA;;AAdA;AACA;AACA;;AAGA;AACA;AACA;;AAIA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,iBAAiB,GAAKC,OAAF,IACzB,yCACC,sBAAcC,MAAF,IAAc;AACzB,SAAO,uBAAWD,OAAX,EAAsBE,KAAF,IAAa;AACvC,WAAOD,MAAM,CAAEE,YAAF,CAAN,CAAgBC,eAAhB,CAAiCF,KAAjC,CAAP;AACA,GAFM,CAAP;AAGA,CAJD,CADD,EAMC,mBAND,CADD;;eAUeH,iB","sourcesContent":["/**\n * External dependencies\n */\nimport { mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { createHigherOrderComponent } from '@wordpress/compose';\nimport { withSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store } from './store';\n\n/**\n * Higher-order component creator, creating a new component which renders with\n * the given prop names, where the value passed to the underlying component is\n * the result of the query assigned as the object's value.\n *\n * @see isViewportMatch\n *\n * @param {Object} queries Object of prop name to viewport query.\n *\n * @example\n *\n * ```jsx\n * function MyComponent( { isMobile } ) {\n * \treturn (\n * \t\t<div>Currently: { isMobile ? 'Mobile' : 'Not Mobile' }</div>\n * \t);\n * }\n *\n * MyComponent = withViewportMatch( { isMobile: '< small' } )( MyComponent );\n * ```\n *\n * @return {Function} Higher-order component.\n */\nconst withViewportMatch = ( queries ) =>\n\tcreateHigherOrderComponent(\n\t\twithSelect( ( select ) => {\n\t\t\treturn mapValues( queries, ( query ) => {\n\t\t\t\treturn select( store ).isViewportMatch( query );\n\t\t\t} );\n\t\t} ),\n\t\t'withViewportMatch'\n\t);\n\nexport default withViewportMatch;\n"]}