import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
// eslint-disable-next-line no-restricted-imports

/**
 * Internal dependencies
 */
import ToolsPanelHeader from '../tools-panel-header';
import { ToolsPanelContext } from '../context';
import { useToolsPanel } from './hook';
import { View } from '../../view';
import { contextConnect } from '../../ui/context';

const ToolsPanel = (props, forwardedRef) => {
  const {
    children,
    label,
    panelContext,
    resetAllItems,
    toggleItem,
    ...toolsPanelProps
  } = useToolsPanel(props);
  return createElement(View, _extends({}, toolsPanelProps, {
    ref: forwardedRef
  }), createElement(ToolsPanelContext.Provider, {
    value: panelContext
  }, createElement(ToolsPanelHeader, {
    label: label,
    resetAll: resetAllItems,
    toggleItem: toggleItem
  }), children));
};

const ConnectedToolsPanel = contextConnect(ToolsPanel, 'ToolsPanel');
export default ConnectedToolsPanel;
//# sourceMappingURL=component.js.map