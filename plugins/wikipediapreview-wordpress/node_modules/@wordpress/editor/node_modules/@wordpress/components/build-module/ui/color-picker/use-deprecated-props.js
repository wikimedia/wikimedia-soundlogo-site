/**
 * External dependencies
 */
import colorize from 'tinycolor2'; // eslint-disable-next-line no-restricted-imports

import memoize from 'memize';
/**
 * WordPress dependencies
 */

import { useCallback, useMemo } from '@wordpress/element';
/**
 * Internal dependencies
 */

function isLegacyProps(props) {
  var _props$color;

  return typeof props.onChangeComplete !== 'undefined' || typeof props.color === 'string' || typeof ((_props$color = props.color) === null || _props$color === void 0 ? void 0 : _props$color.hex) === 'string';
}

function getColorFromLegacyProps(props) {
  if (typeof props.color === 'string') {
    return colorize(props.color).toHsl();
  }

  return props.color.hsl;
}

function toHsv(color) {
  const {
    h,
    s,
    v,
    a
  } = color.toHsv();
  return {
    h: Math.round(h),
    s: Math.round(s * 100),
    v: Math.round(v * 100),
    a
  };
}

const transformHslToLegacyColor = memoize(hsla => {
  const color = colorize(hsla);
  const rawHex = color.toHex();
  const rgb = color.toRgb();
  const hsv = toHsv(color);
  const hsl = hsla;
  const isTransparent = rawHex === '000000' && rgb.a === 0;
  const hex = isTransparent ? 'transparent' : `#${rawHex}`;
  return {
    color,
    hex,
    rgb,
    hsv,
    hsl,
    source: 'hex',
    oldHue: hsl.h
  };
});
export function useDeprecatedProps(props) {
  const onChange = useCallback(hsla => {
    var _props$onChange;

    if (isLegacyProps(props)) {
      return props.onChangeComplete(transformHslToLegacyColor(hsla));
    }

    return (_props$onChange = props.onChange) === null || _props$onChange === void 0 ? void 0 : _props$onChange.call(props, hsla);
  }, [props.onChangeComplete, props.onChange]);
  const color = useMemo(() => {
    return isLegacyProps(props) ? getColorFromLegacyProps(props) : props.color;
  }, [props.color]);
  const enableAlpha = useMemo(() => {
    return isLegacyProps(props) ? !props.disableAlpha : props.enableAlpha;
  }, [props.disableAlpha, props.enableAlpha]);
  return { ...(isLegacyProps(props) ? {} : props),
    onChange,
    color,
    enableAlpha
  };
}
//# sourceMappingURL=use-deprecated-props.js.map