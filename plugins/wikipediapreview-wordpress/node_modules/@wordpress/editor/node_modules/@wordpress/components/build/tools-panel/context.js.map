{"version":3,"sources":["@wordpress/components/src/tools-panel/context.ts"],"names":["noop","undefined","ToolsPanelContext","menuItems","default","optional","hasMenuItems","isResetting","registerPanelItem","deregisterPanelItem","flagItemCustomization","useToolsPanelContext"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;AAQA,MAAMA,IAAI,GAAG,MAAMC,SAAnB;;AAEO,MAAMC,iBAAiB,GAAG,4BAAwC;AACxEC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,OAAO,EAAE,EAAX;AAAeC,IAAAA,QAAQ,EAAE;AAAzB,GAD6D;AAExEC,EAAAA,YAAY,EAAE,KAF0D;AAGxEC,EAAAA,WAAW,EAAE,KAH2D;AAIxEC,EAAAA,iBAAiB,EAAER,IAJqD;AAKxES,EAAAA,mBAAmB,EAAET,IALmD;AAMxEU,EAAAA,qBAAqB,EAAEV;AANiD,CAAxC,CAA1B;;;AASA,MAAMW,oBAAoB,GAAG,MACnC,yBAAqCT,iBAArC,CADM","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createContext, useContext } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport type { ToolsPanelContext as ToolsPanelContextType } from './types';\n\nconst noop = () => undefined;\n\nexport const ToolsPanelContext = createContext< ToolsPanelContextType >( {\n\tmenuItems: { default: {}, optional: {} },\n\thasMenuItems: false,\n\tisResetting: false,\n\tregisterPanelItem: noop,\n\tderegisterPanelItem: noop,\n\tflagItemCustomization: noop,\n} );\n\nexport const useToolsPanelContext = () =>\n\tuseContext< ToolsPanelContextType >( ToolsPanelContext );\n"]}