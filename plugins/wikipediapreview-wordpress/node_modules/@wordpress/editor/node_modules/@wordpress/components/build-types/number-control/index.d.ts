export function NumberControl({ __unstableStateReducer: stateReducer, className, dragDirection, hideHTMLArrows, isDragEnabled, isShiftStepEnabled, label, max, min, required, shiftStep, step, type: typeProp, value: valueProp, ...props }: {
    [x: string]: any;
    __unstableStateReducer?: ((state: any) => any) | undefined;
    className: any;
    dragDirection?: string | undefined;
    hideHTMLArrows?: boolean | undefined;
    isDragEnabled?: boolean | undefined;
    isShiftStepEnabled?: boolean | undefined;
    label: any;
    max?: number | undefined;
    min?: number | undefined;
    required?: boolean | undefined;
    shiftStep?: number | undefined;
    step?: number | undefined;
    type?: string | undefined;
    value: any;
}, ref: any): JSX.Element;
declare var _default: import("react").ForwardRefExoticComponent<Pick<{
    [x: string]: any;
    __unstableStateReducer?: ((state: any) => any) | undefined;
    className: any;
    dragDirection?: string | undefined;
    hideHTMLArrows?: boolean | undefined;
    isDragEnabled?: boolean | undefined;
    isShiftStepEnabled?: boolean | undefined;
    label: any;
    max?: number | undefined;
    min?: number | undefined;
    required?: boolean | undefined;
    shiftStep?: number | undefined;
    step?: number | undefined;
    type?: string | undefined;
    value: any;
}, string | number> & import("react").RefAttributes<any>>;
export default _default;
//# sourceMappingURL=index.d.ts.map