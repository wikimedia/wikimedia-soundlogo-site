{"version":3,"sources":["@wordpress/block-editor/src/components/inserter/hooks/use-block-type-impressions.native.js"],"names":["useSelect","useDispatch","setBlockTypeImpressions","store","blockEditorStore","useBlockTypeImpressions","blockTypes","blockTypeImpressions","enableEditorOnboarding","select","getSettings","getBlockEditorSettings","editorOnboarding","impressions","updateSettings","items","map","blockType","isNew","name","trackBlockTypeSelected","updatedBlockTypeImpressions"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,uBAAT,QAAwC,gCAAxC;AAEA;AACA;AACA;;AACA,SAASC,KAAK,IAAIC,gBAAlB,QAA0C,gBAA1C;;AAEA,SAASC,uBAAT,CAAkCC,UAAlC,EAA+C;AAC9C,QAAM;AAAEC,IAAAA,oBAAF;AAAwBC,IAAAA;AAAxB,MAAmDR,SAAS,CAC/DS,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA,WAAW,EAAEC;AAAf,QAA0CF,MAAM,CACrDL,gBADqD,CAAtD;AAGA,UAAM;AAAEQ,MAAAA,gBAAF;AAAoBC,MAAAA;AAApB,QAAoCF,sBAAsB,EAAhE;AAEA,WAAO;AACNJ,MAAAA,oBAAoB,EAAEM,WADhB;AAENL,MAAAA,sBAAsB,EAAEI;AAFlB,KAAP;AAIA,GAXgE,EAYjE,EAZiE,CAAlE;AAcA,QAAM;AAAEE,IAAAA;AAAF,MAAqBb,WAAW,CAAEG,gBAAF,CAAtC;AAEA,QAAMW,KAAK,GAAGP,sBAAsB,GACjCF,UAAU,CAACU,GAAX,CAAkBC,SAAF,KAAmB,EACnC,GAAGA,SADgC;AAEnCC,IAAAA,KAAK,EAAEX,oBAAoB,CAAEU,SAAS,CAACE,IAAZ,CAApB,GAAyC;AAFb,GAAnB,CAAhB,CADiC,GAKjCb,UALH;;AAOA,QAAMc,sBAAsB,GAAG,CAAE;AAAED,IAAAA;AAAF,GAAF,KAAgB;AAC9C,QAAKZ,oBAAoB,CAAEY,IAAF,CAApB,GAA+B,CAApC,EAAwC;AACvC,YAAME,2BAA2B,GAAG,EACnC,GAAGd,oBADgC;AAEnC,SAAEY,IAAF,GAAU;AAFyB,OAApC,CADuC,CAKvC;;AACAL,MAAAA,cAAc,CAAE;AACfD,QAAAA,WAAW,EAAEQ;AADE,OAAF,CAAd,CANuC,CAUvC;;AACAnB,MAAAA,uBAAuB,CAAEmB,2BAAF,CAAvB;AACA;AACD,GAdD;;AAgBA,SAAO;AAAEN,IAAAA,KAAF;AAASK,IAAAA;AAAT,GAAP;AACA;;AAED,eAAef,uBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { setBlockTypeImpressions } from '@wordpress/react-native-bridge';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../../store';\n\nfunction useBlockTypeImpressions( blockTypes ) {\n\tconst { blockTypeImpressions, enableEditorOnboarding } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getSettings: getBlockEditorSettings } = select(\n\t\t\t\tblockEditorStore\n\t\t\t);\n\t\t\tconst { editorOnboarding, impressions } = getBlockEditorSettings();\n\n\t\t\treturn {\n\t\t\t\tblockTypeImpressions: impressions,\n\t\t\t\tenableEditorOnboarding: editorOnboarding,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\tconst { updateSettings } = useDispatch( blockEditorStore );\n\n\tconst items = enableEditorOnboarding\n\t\t? blockTypes.map( ( blockType ) => ( {\n\t\t\t\t...blockType,\n\t\t\t\tisNew: blockTypeImpressions[ blockType.name ] > 0,\n\t\t  } ) )\n\t\t: blockTypes;\n\n\tconst trackBlockTypeSelected = ( { name } ) => {\n\t\tif ( blockTypeImpressions[ name ] > 0 ) {\n\t\t\tconst updatedBlockTypeImpressions = {\n\t\t\t\t...blockTypeImpressions,\n\t\t\t\t[ name ]: 0,\n\t\t\t};\n\t\t\t// Persist block type impression to JavaScript store\n\t\t\tupdateSettings( {\n\t\t\t\timpressions: updatedBlockTypeImpressions,\n\t\t\t} );\n\n\t\t\t// Persist block type impression count to native app store\n\t\t\tsetBlockTypeImpressions( updatedBlockTypeImpressions );\n\t\t}\n\t};\n\n\treturn { items, trackBlockTypeSelected };\n}\n\nexport default useBlockTypeImpressions;\n"]}