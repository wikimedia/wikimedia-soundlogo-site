{"version":3,"sources":["@wordpress/editor/src/components/entities-saved-states/entity-record-item.js"],"names":["EntityRecordItem","record","checked","onChange","closePanel","name","kind","title","key","parentBlockId","select","blocks","coreStore","getEditedEntityRecord","parents","blockEditorStore","getBlockParents","clientId","length","entityRecordTitle","template","editorStore","__experimentalGetTemplateInfo","isSelected","selectedBlockId","getSelectedBlockClientId","isSelectedText","selectBlock","selectParentBlock","selectAndDismiss"],"mappings":";;;;;;;AAMA;;AAHA;;AACA;;AACA;;AAEA;;AACA;;AAKA;;AAbA;AACA;AACA;;AAQA;AACA;AACA;AAGe,SAASA,gBAAT,CAA2B;AACzCC,EAAAA,MADyC;AAEzCC,EAAAA,OAFyC;AAGzCC,EAAAA,QAHyC;AAIzCC,EAAAA;AAJyC,CAA3B,EAKX;AACH,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA;AAArB,MAA6BP,MAAnC;AACA,QAAMQ,aAAa,GAAG,qBAAaC,MAAF,IAAc;AAAA;;AAC9C;AACA,UAAM;AAAEC,MAAAA,MAAM,GAAG;AAAX,QAAkBD,MAAM,CAAEE,eAAF,CAAN,CAAoBC,qBAApB,CACvBP,IADuB,EAEvBD,IAFuB,EAGvBG,GAHuB,CAAxB,CAF8C,CAO9C;;AACA,UAAMM,OAAO,GAAGJ,MAAM,CAAEK,kBAAF,CAAN,CAA2BC,eAA3B,aACfL,MAAM,CAAE,CAAF,CADS,6CACf,SAAaM,QADE,CAAhB,CAR8C,CAW9C;;AACA,WAAOH,OAAO,CAAEA,OAAO,CAACI,MAAR,GAAiB,CAAnB,CAAd;AACA,GAbqB,EAanB,EAbmB,CAAtB,CAFG,CAiBH;;AACA,QAAMC,iBAAiB,GAAG,qBACvBT,MAAF,IAAc;AACb,QAAK,eAAeJ,IAAf,IAAuB,kBAAkBD,IAA9C,EAAqD;AACpD,aAAOE,KAAP;AACA;;AAED,UAAMa,QAAQ,GAAGV,MAAM,CAAEE,eAAF,CAAN,CAAoBC,qBAApB,CAChBP,IADgB,EAEhBD,IAFgB,EAGhBG,GAHgB,CAAjB;AAKA,WAAOE,MAAM,CAAEW,YAAF,CAAN,CAAsBC,6BAAtB,CACNF,QADM,EAELb,KAFF;AAGA,GAdwB,EAezB,CAAEF,IAAF,EAAQC,IAAR,EAAcC,KAAd,EAAqBC,GAArB,CAfyB,CAA1B;AAkBA,QAAMe,UAAU,GAAG,qBAChBb,MAAF,IAAc;AACb,UAAMc,eAAe,GAAGd,MAAM,CAC7BK,kBAD6B,CAAN,CAEtBU,wBAFsB,EAAxB;AAGA,WAAOD,eAAe,KAAKf,aAA3B;AACA,GANiB,EAOlB,CAAEA,aAAF,CAPkB,CAAnB;AASA,QAAMiB,cAAc,GAAGH,UAAU,GAAG,cAAI,UAAJ,CAAH,GAAsB,cAAI,QAAJ,CAAvD;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAkB,uBAAaZ,kBAAb,CAAxB;AACA,QAAMa,iBAAiB,GAAG,0BAAa,MAAMD,WAAW,CAAElB,aAAF,CAA9B,EAAiD,CAC1EA,aAD0E,CAAjD,CAA1B;AAGA,QAAMoB,gBAAgB,GAAG,0BAAa,MAAM;AAC3CF,IAAAA,WAAW,CAAElB,aAAF,CAAX;AACAL,IAAAA,UAAU;AACV,GAHwB,EAGtB,CAAEK,aAAF,CAHsB,CAAzB;AAKA,SACC,4BAAC,oBAAD,QACC,4BAAC,2BAAD;AACC,IAAA,KAAK,EACJ,4CAAUU,iBAAiB,IAAI,cAAI,UAAJ,CAA/B,CAFF;AAIC,IAAA,OAAO,EAAGjB,OAJX;AAKC,IAAA,QAAQ,EAAGC;AALZ,IADD,EAQGM,aAAa,GACd,qDACC,4BAAC,kBAAD;AACC,IAAA,OAAO,EAAGmB,iBADX;AAEC,IAAA,SAAS,EAAC,oCAFX;AAGC,IAAA,QAAQ,EAAGL;AAHZ,KAKGG,cALH,CADD,EAQC,4BAAC,kBAAD;AACC,IAAA,OAAO,EAAGG,gBADX;AAEC,IAAA,SAAS,EAAC,0CAFX;AAGC,IAAA,QAAQ,EAAGN;AAHZ,KAKGG,cALH,CARD,CADc,GAiBX,IAzBL,CADD;AA6BA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { CheckboxControl, Button, PanelRow } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useCallback } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\n\nexport default function EntityRecordItem( {\n\trecord,\n\tchecked,\n\tonChange,\n\tclosePanel,\n} ) {\n\tconst { name, kind, title, key } = record;\n\tconst parentBlockId = useSelect( ( select ) => {\n\t\t// Get entity's blocks.\n\t\tconst { blocks = [] } = select( coreStore ).getEditedEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\tkey\n\t\t);\n\t\t// Get parents of the entity's first block.\n\t\tconst parents = select( blockEditorStore ).getBlockParents(\n\t\t\tblocks[ 0 ]?.clientId\n\t\t);\n\t\t// Return closest parent block's clientId.\n\t\treturn parents[ parents.length - 1 ];\n\t}, [] );\n\n\t// Handle templates that might use default descriptive titles\n\tconst entityRecordTitle = useSelect(\n\t\t( select ) => {\n\t\t\tif ( 'postType' !== kind || 'wp_template' !== name ) {\n\t\t\t\treturn title;\n\t\t\t}\n\n\t\t\tconst template = select( coreStore ).getEditedEntityRecord(\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\tkey\n\t\t\t);\n\t\t\treturn select( editorStore ).__experimentalGetTemplateInfo(\n\t\t\t\ttemplate\n\t\t\t).title;\n\t\t},\n\t\t[ name, kind, title, key ]\n\t);\n\n\tconst isSelected = useSelect(\n\t\t( select ) => {\n\t\t\tconst selectedBlockId = select(\n\t\t\t\tblockEditorStore\n\t\t\t).getSelectedBlockClientId();\n\t\t\treturn selectedBlockId === parentBlockId;\n\t\t},\n\t\t[ parentBlockId ]\n\t);\n\tconst isSelectedText = isSelected ? __( 'Selected' ) : __( 'Select' );\n\tconst { selectBlock } = useDispatch( blockEditorStore );\n\tconst selectParentBlock = useCallback( () => selectBlock( parentBlockId ), [\n\t\tparentBlockId,\n\t] );\n\tconst selectAndDismiss = useCallback( () => {\n\t\tselectBlock( parentBlockId );\n\t\tclosePanel();\n\t}, [ parentBlockId ] );\n\n\treturn (\n\t\t<PanelRow>\n\t\t\t<CheckboxControl\n\t\t\t\tlabel={\n\t\t\t\t\t<strong>{ entityRecordTitle || __( 'Untitled' ) }</strong>\n\t\t\t\t}\n\t\t\t\tchecked={ checked }\n\t\t\t\tonChange={ onChange }\n\t\t\t/>\n\t\t\t{ parentBlockId ? (\n\t\t\t\t<>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={ selectParentBlock }\n\t\t\t\t\t\tclassName=\"entities-saved-states__find-entity\"\n\t\t\t\t\t\tdisabled={ isSelected }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ isSelectedText }\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={ selectAndDismiss }\n\t\t\t\t\t\tclassName=\"entities-saved-states__find-entity-small\"\n\t\t\t\t\t\tdisabled={ isSelected }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ isSelectedText }\n\t\t\t\t\t</Button>\n\t\t\t\t</>\n\t\t\t) : null }\n\t\t</PanelRow>\n\t);\n}\n"]}