"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = EntityTypeList;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _data = require("@wordpress/data");

var _components = require("@wordpress/components");

var _icons = require("@wordpress/icons");

var _coreData = require("@wordpress/core-data");

var _entityRecordItem = _interopRequireDefault(require("./entity-record-item"));

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const ENTITY_NAME_ICONS = {
  site: _icons.layout,
  page: _icons.page
};

function EntityTypeList({
  list,
  unselectedEntities,
  setUnselectedEntities,
  closePanel
}) {
  const firstRecord = list[0];
  const entity = (0, _data.useSelect)(select => select(_coreData.store).getEntity(firstRecord.kind, firstRecord.name), [firstRecord.kind, firstRecord.name]); // Set icon based on type of entity.

  const {
    name
  } = firstRecord;
  const icon = ENTITY_NAME_ICONS[name];
  return (0, _element.createElement)(_components.PanelBody, {
    title: entity.label,
    initialOpen: true,
    icon: icon
  }, list.map(record => {
    return (0, _element.createElement)(_entityRecordItem.default, {
      key: record.key || record.property,
      record: record,
      checked: !(0, _lodash.some)(unselectedEntities, elt => elt.kind === record.kind && elt.name === record.name && elt.key === record.key && elt.property === record.property),
      onChange: value => setUnselectedEntities(record, value),
      closePanel: closePanel
    });
  }));
}
//# sourceMappingURL=entity-type-list.js.map