"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getUserLabel = getUserLabel;
exports.default = void 0;

var _element = require("@wordpress/element");

var _data = require("@wordpress/data");

var _coreData = require("@wordpress/core-data");

/**
 * WordPress dependencies
 */

/** @typedef {import('@wordpress/components').WPCompleter} WPCompleter */
function getUserLabel(user) {
  const avatar = user.avatar_urls && user.avatar_urls[24] ? (0, _element.createElement)("img", {
    className: "editor-autocompleters__user-avatar",
    alt: "",
    src: user.avatar_urls[24]
  }) : (0, _element.createElement)("span", {
    className: "editor-autocompleters__no-avatar"
  });
  return (0, _element.createElement)(_element.Fragment, null, avatar, (0, _element.createElement)("span", {
    className: "editor-autocompleters__user-name"
  }, user.name), (0, _element.createElement)("span", {
    className: "editor-autocompleters__user-slug"
  }, user.slug));
}
/**
 * A user mentions completer.
 *
 * @type {WPCompleter}
 */


var _default = {
  name: 'users',
  className: 'editor-autocompleters__user',
  triggerPrefix: '@',

  useItems(filterValue) {
    const users = (0, _data.useSelect)(select => {
      const {
        getUsers
      } = select(_coreData.store);
      return getUsers({
        context: 'view',
        search: encodeURIComponent(filterValue)
      });
    }, [filterValue]);
    const options = (0, _element.useMemo)(() => users ? users.map(user => ({
      key: `user-${user.slug}`,
      value: user,
      label: getUserLabel(user)
    })) : [], [users]);
    return [options];
  },

  getOptionCompletion(user) {
    return `@${user.slug}`;
  }

};
exports.default = _default;
//# sourceMappingURL=user.js.map