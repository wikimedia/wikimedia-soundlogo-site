"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  togglePostTitleSelection: true,
  autosave: true
};
exports.togglePostTitleSelection = togglePostTitleSelection;
exports.autosave = autosave;

var _reactNativeBridge = _interopRequireDefault(require("@wordpress/react-native-bridge"));

var _actions = require("./actions.js");

Object.keys(_actions).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _actions[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _actions[key];
    }
  });
});

/**
 * WordPress dependencies
 */

/**
 * Returns an action object that enables or disables post title selection.
 *
 * @param {boolean} [isSelected=true] Whether post title is currently selected.
 *
 * @return {Object} Action object.
 */
function togglePostTitleSelection(isSelected = true) {
  return {
    type: 'TOGGLE_POST_TITLE_SELECTION',
    isSelected
  };
}
/**
 * Action generator used in signalling that the post should autosave.
 */


function* autosave() {
  _reactNativeBridge.default.editorDidAutosave();
}
//# sourceMappingURL=actions.native.js.map