{"version":3,"sources":["@wordpress/editor/src/components/provider/index.native.js"],"names":["memize","RNReactNativeGutenbergBridge","requestBlockTypeImpressions","setBlockTypeImpressions","subscribeParentGetHtml","subscribeParentToggleHTMLMode","subscribeUpdateHtml","subscribeSetTitle","subscribeMediaAppend","subscribeReplaceBlock","subscribeUpdateEditorSettings","subscribeUpdateCapabilities","subscribeShowNotice","subscribeShowEditorHelp","Component","count","wordCount","parse","serialize","getUnregisteredTypeHandlerName","createBlock","withDispatch","withSelect","compose","applyFilters","validateThemeColors","validateThemeGradients","store","blockEditorStore","getGlobalStyles","NEW_BLOCK_TYPES","postTypeEntities","name","baseURL","map","postTypeEntity","kind","transientEdits","blocks","selection","mergedEdits","meta","rawAttributes","EditorHelpTopics","EditorProvider","NativeEditorProvider","constructor","arguments","post","props","addEntities","receiveEntityRecords","type","getEditorSettings","settings","capabilities","maxSize","state","isHelpVisible","componentDidMount","locale","updateSettings","galleryWithImageBlocks","__unstableGalleryWithImageBlocks","getThemeColors","subscriptionParentGetHtml","serializeToNativeAction","subscriptionParentToggleHTMLMode","toggleMode","subscriptionParentSetTitle","payload","editTitle","title","subscriptionParentUpdateHtml","updateHtmlAction","html","subscriptionParentReplaceBlock","replaceBlockAction","clientId","subscriptionParentMediaAppend","blockName","mediaType","newBlock","id","mediaId","mediaUrl","indexAfterSelected","selectedBlockIndex","insertionIndex","blockCount","insertBlock","subscriptionParentUpdateEditorSettings","editorSettings","subscriptionParentUpdateCapabilities","updateCapabilitiesAction","subscriptionParentShowNotice","createSuccessNotice","message","subscriptionParentShowEditorHelp","setState","storedImpressions","impressions","storedImpressionKeys","Object","keys","storedImpressionsCurrent","every","newKey","includes","componentWillUnmount","remove","colors","gradients","rawStyles","rawFeatures","componentDidUpdate","prevProps","isReady","isUnsupportedBlock","unsupportedBlockNames","filter","block","attributes","originalName","editorDidMount","mode","hasChanges","raw","content","contentInfo","characterCount","paragraphCount","provideToNative_Html","parsed","resetEditorBlocksWithoutUndoLevel","blockClientId","replaceBlock","switchMode","clearSelectedBlock","render","children","select","__unstableIsEditorReady","isEditorReady","getEditorBlocks","getEditedPostAttribute","getEditedPostContent","getEditorMode","getBlockIndex","getSelectedBlockClientId","getGlobalBlockCount","getSettings","getBlockEditorSettings","selectedBlockClientId","dispatch","editPost","resetEditorBlocks","switchEditorMode","__unstableShouldCreateUndoLevel"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\n\n/**\n * WordPress dependencies\n */\nimport RNReactNativeGutenbergBridge, {\n\trequestBlockTypeImpressions,\n\tsetBlockTypeImpressions,\n\tsubscribeParentGetHtml,\n\tsubscribeParentToggleHTMLMode,\n\tsubscribeUpdateHtml,\n\tsubscribeSetTitle,\n\tsubscribeMediaAppend,\n\tsubscribeReplaceBlock,\n\tsubscribeUpdateEditorSettings,\n\tsubscribeUpdateCapabilities,\n\tsubscribeShowNotice,\n\tsubscribeShowEditorHelp,\n} from '@wordpress/react-native-bridge';\nimport { Component } from '@wordpress/element';\nimport { count as wordCount } from '@wordpress/wordcount';\nimport {\n\tparse,\n\tserialize,\n\tgetUnregisteredTypeHandlerName,\n\tcreateBlock,\n} from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport { applyFilters } from '@wordpress/hooks';\nimport {\n\tvalidateThemeColors,\n\tvalidateThemeGradients,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { getGlobalStyles } from '@wordpress/components';\nimport { NEW_BLOCK_TYPES } from '@wordpress/block-library';\n\nconst postTypeEntities = [\n\t{ name: 'post', baseURL: '/wp/v2/posts' },\n\t{ name: 'page', baseURL: '/wp/v2/pages' },\n\t{ name: 'attachment', baseURL: '/wp/v2/media' },\n\t{ name: 'wp_block', baseURL: '/wp/v2/blocks' },\n].map( ( postTypeEntity ) => ( {\n\tkind: 'postType',\n\t...postTypeEntity,\n\ttransientEdits: {\n\t\tblocks: true,\n\t\tselection: true,\n\t},\n\tmergedEdits: {\n\t\tmeta: true,\n\t},\n\trawAttributes: [ 'title', 'excerpt', 'content' ],\n} ) );\nimport { EditorHelpTopics } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport EditorProvider from './index.js';\n\nclass NativeEditorProvider extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\n\t\t// Keep a local reference to `post` to detect changes\n\t\tthis.post = this.props.post;\n\t\tthis.props.addEntities( postTypeEntities );\n\t\tthis.props.receiveEntityRecords(\n\t\t\t'postType',\n\t\t\tthis.post.type,\n\t\t\tthis.post\n\t\t);\n\t\tthis.getEditorSettings = memize(\n\t\t\t( settings, capabilities ) => ( {\n\t\t\t\t...settings,\n\t\t\t\tcapabilities,\n\t\t\t} ),\n\t\t\t{\n\t\t\t\tmaxSize: 1,\n\t\t\t}\n\t\t);\n\t\tthis.state = {\n\t\t\tisHelpVisible: false,\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {\n\t\t\tcapabilities,\n\t\t\tlocale,\n\t\t\tupdateSettings,\n\t\t\tgalleryWithImageBlocks,\n\t\t} = this.props;\n\n\t\tupdateSettings( {\n\t\t\t...capabilities,\n\t\t\t...{ __unstableGalleryWithImageBlocks: galleryWithImageBlocks },\n\t\t\t...this.getThemeColors( this.props ),\n\t\t\tlocale,\n\t\t} );\n\n\t\tthis.subscriptionParentGetHtml = subscribeParentGetHtml( () => {\n\t\t\tthis.serializeToNativeAction();\n\t\t} );\n\n\t\tthis.subscriptionParentToggleHTMLMode = subscribeParentToggleHTMLMode(\n\t\t\t() => {\n\t\t\t\tthis.toggleMode();\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentSetTitle = subscribeSetTitle( ( payload ) => {\n\t\t\tthis.props.editTitle( payload.title );\n\t\t} );\n\n\t\tthis.subscriptionParentUpdateHtml = subscribeUpdateHtml(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateHtmlAction( payload.html );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentReplaceBlock = subscribeReplaceBlock(\n\t\t\t( payload ) => {\n\t\t\t\tthis.replaceBlockAction( payload.html, payload.clientId );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentMediaAppend = subscribeMediaAppend(\n\t\t\t( payload ) => {\n\t\t\t\tconst blockName = 'core/' + payload.mediaType;\n\t\t\t\tconst newBlock = createBlock( blockName, {\n\t\t\t\t\tid: payload.mediaId,\n\t\t\t\t\t[ payload.mediaType === 'image'\n\t\t\t\t\t\t? 'url'\n\t\t\t\t\t\t: 'src' ]: payload.mediaUrl,\n\t\t\t\t} );\n\n\t\t\t\tconst indexAfterSelected = this.props.selectedBlockIndex + 1;\n\t\t\t\tconst insertionIndex =\n\t\t\t\t\tindexAfterSelected || this.props.blockCount;\n\n\t\t\t\tthis.props.insertBlock( newBlock, insertionIndex );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentUpdateEditorSettings = subscribeUpdateEditorSettings(\n\t\t\t( editorSettings ) => {\n\t\t\t\tupdateSettings( {\n\t\t\t\t\t...{\n\t\t\t\t\t\t__unstableGalleryWithImageBlocks:\n\t\t\t\t\t\t\teditorSettings.galleryWithImageBlocks,\n\t\t\t\t\t},\n\t\t\t\t\t...this.getThemeColors( editorSettings ),\n\t\t\t\t} );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentUpdateCapabilities = subscribeUpdateCapabilities(\n\t\t\t( payload ) => {\n\t\t\t\tthis.updateCapabilitiesAction( payload );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentShowNotice = subscribeShowNotice(\n\t\t\t( payload ) => {\n\t\t\t\tthis.props.createSuccessNotice( payload.message );\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentShowEditorHelp = subscribeShowEditorHelp( () => {\n\t\t\tthis.setState( { isHelpVisible: true } );\n\t\t} );\n\n\t\t// Request current block impressions from native app\n\t\trequestBlockTypeImpressions( ( storedImpressions ) => {\n\t\t\tconst impressions = { ...NEW_BLOCK_TYPES, ...storedImpressions };\n\n\t\t\t// Persist impressions to JavaScript store\n\t\t\tupdateSettings( { impressions } );\n\n\t\t\t// Persist impressions to native store if they do not include latest\n\t\t\t// `NEW_BLOCK_TYPES` configuration\n\t\t\tconst storedImpressionKeys = Object.keys( storedImpressions );\n\t\t\tconst storedImpressionsCurrent = Object.keys(\n\t\t\t\tNEW_BLOCK_TYPES\n\t\t\t).every( ( newKey ) => storedImpressionKeys.includes( newKey ) );\n\t\t\tif ( ! storedImpressionsCurrent ) {\n\t\t\t\tsetBlockTypeImpressions( impressions );\n\t\t\t}\n\t\t} );\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentGetHtml ) {\n\t\t\tthis.subscriptionParentGetHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentToggleHTMLMode ) {\n\t\t\tthis.subscriptionParentToggleHTMLMode.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentSetTitle ) {\n\t\t\tthis.subscriptionParentSetTitle.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateHtml ) {\n\t\t\tthis.subscriptionParentUpdateHtml.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentReplaceBlock ) {\n\t\t\tthis.subscriptionParentReplaceBlock.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentMediaAppend ) {\n\t\t\tthis.subscriptionParentMediaAppend.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateEditorSettings ) {\n\t\t\tthis.subscriptionParentUpdateEditorSettings.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentUpdateCapabilities ) {\n\t\t\tthis.subscriptionParentUpdateCapabilities.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentShowNotice ) {\n\t\t\tthis.subscriptionParentShowNotice.remove();\n\t\t}\n\n\t\tif ( this.subscriptionParentShowEditorHelp ) {\n\t\t\tthis.subscriptionParentShowEditorHelp.remove();\n\t\t}\n\t}\n\n\tgetThemeColors( { colors, gradients, rawStyles, rawFeatures } ) {\n\t\treturn {\n\t\t\t...( rawStyles && rawFeatures\n\t\t\t\t? getGlobalStyles( rawStyles, rawFeatures )\n\t\t\t\t: {\n\t\t\t\t\t\tcolors: validateThemeColors( colors ),\n\t\t\t\t\t\tgradients: validateThemeGradients( gradients ),\n\t\t\t\t  } ),\n\t\t};\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( ! prevProps.isReady && this.props.isReady ) {\n\t\t\tconst blocks = this.props.blocks;\n\t\t\tconst isUnsupportedBlock = ( { name } ) =>\n\t\t\t\tname === getUnregisteredTypeHandlerName();\n\t\t\tconst unsupportedBlockNames = blocks\n\t\t\t\t.filter( isUnsupportedBlock )\n\t\t\t\t.map( ( block ) => block.attributes.originalName );\n\t\t\tRNReactNativeGutenbergBridge.editorDidMount(\n\t\t\t\tunsupportedBlockNames\n\t\t\t);\n\t\t}\n\t}\n\n\tserializeToNativeAction() {\n\t\tconst title = this.props.title;\n\t\tlet html;\n\n\t\tif ( this.props.mode === 'text' ) {\n\t\t\t// The HTMLTextInput component does not update the store when user is doing changes\n\t\t\t// Let's request the HTML from the component's state directly\n\t\t\thtml = applyFilters( 'native.persist-html' );\n\t\t} else {\n\t\t\thtml = serialize( this.props.blocks );\n\t\t}\n\n\t\tconst hasChanges =\n\t\t\ttitle !== this.post.title.raw || html !== this.post.content.raw;\n\n\t\t// Variable to store the content structure metrics.\n\t\tconst contentInfo = {};\n\t\tcontentInfo.characterCount = wordCount(\n\t\t\thtml,\n\t\t\t'characters_including_spaces'\n\t\t);\n\t\tcontentInfo.wordCount = wordCount( html, 'words' );\n\t\tcontentInfo.paragraphCount = this.props.paragraphCount;\n\t\tcontentInfo.blockCount = this.props.blockCount;\n\t\tRNReactNativeGutenbergBridge.provideToNative_Html(\n\t\t\thtml,\n\t\t\ttitle,\n\t\t\thasChanges,\n\t\t\tcontentInfo\n\t\t);\n\n\t\tif ( hasChanges ) {\n\t\t\tthis.post.title.raw = title;\n\t\t\tthis.post.content.raw = html;\n\t\t}\n\t}\n\n\tupdateHtmlAction( html ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.resetEditorBlocksWithoutUndoLevel( parsed );\n\t}\n\n\treplaceBlockAction( html, blockClientId ) {\n\t\tconst parsed = parse( html );\n\t\tthis.props.replaceBlock( blockClientId, parsed );\n\t}\n\n\ttoggleMode() {\n\t\tconst { mode, switchMode } = this.props;\n\t\t// refresh html content first\n\t\tthis.serializeToNativeAction();\n\t\t// make sure to blur the selected block and dismiss the keyboard\n\t\tthis.props.clearSelectedBlock();\n\t\tswitchMode( mode === 'visual' ? 'text' : 'visual' );\n\t}\n\n\tupdateCapabilitiesAction( capabilities ) {\n\t\tthis.props.updateSettings( capabilities );\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tchildren,\n\t\t\tpost, // eslint-disable-line no-unused-vars\n\t\t\tcapabilities,\n\t\t\tsettings,\n\t\t\t...props\n\t\t} = this.props;\n\t\tconst editorSettings = this.getEditorSettings( settings, capabilities );\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<EditorProvider\n\t\t\t\t\tpost={ this.post }\n\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t{ children }\n\t\t\t\t</EditorProvider>\n\t\t\t\t<EditorHelpTopics\n\t\t\t\t\tisVisible={ this.state.isHelpVisible }\n\t\t\t\t\tonClose={ () => this.setState( { isHelpVisible: false } ) }\n\t\t\t\t\tclose={ () => this.setState( { isHelpVisible: false } ) }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\t__unstableIsEditorReady: isEditorReady,\n\t\t\tgetEditorBlocks,\n\t\t\tgetEditedPostAttribute,\n\t\t\tgetEditedPostContent,\n\t\t} = select( 'core/editor' );\n\t\tconst { getEditorMode } = select( 'core/edit-post' );\n\n\t\tconst {\n\t\t\tgetBlockIndex,\n\t\t\tgetSelectedBlockClientId,\n\t\t\tgetGlobalBlockCount,\n\t\t\tgetSettings: getBlockEditorSettings,\n\t\t} = select( blockEditorStore );\n\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\t\treturn {\n\t\t\tmode: getEditorMode(),\n\t\t\tisReady: isEditorReady(),\n\t\t\tblocks: getEditorBlocks(),\n\t\t\ttitle: getEditedPostAttribute( 'title' ),\n\t\t\tgetEditedPostContent,\n\t\t\tgetBlockEditorSettings,\n\t\t\tselectedBlockIndex: getBlockIndex( selectedBlockClientId ),\n\t\t\tblockCount: getGlobalBlockCount(),\n\t\t\tparagraphCount: getGlobalBlockCount( 'core/paragraph' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { editPost, resetEditorBlocks } = dispatch( 'core/editor' );\n\t\tconst {\n\t\t\tupdateSettings,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\treplaceBlock,\n\t\t} = dispatch( blockEditorStore );\n\t\tconst { switchEditorMode } = dispatch( 'core/edit-post' );\n\t\tconst { addEntities, receiveEntityRecords } = dispatch( 'core' );\n\t\tconst { createSuccessNotice } = dispatch( 'core/notices' );\n\n\t\treturn {\n\t\t\tupdateSettings,\n\t\t\taddEntities,\n\t\t\tclearSelectedBlock,\n\t\t\tinsertBlock,\n\t\t\tcreateSuccessNotice,\n\t\t\teditTitle( title ) {\n\t\t\t\teditPost( { title } );\n\t\t\t},\n\t\t\treceiveEntityRecords,\n\t\t\tresetEditorBlocksWithoutUndoLevel( blocks ) {\n\t\t\t\tresetEditorBlocks( blocks, {\n\t\t\t\t\t__unstableShouldCreateUndoLevel: false,\n\t\t\t\t} );\n\t\t\t},\n\t\t\tswitchMode( mode ) {\n\t\t\t\tswitchEditorMode( mode );\n\t\t\t},\n\t\t\treplaceBlock,\n\t\t};\n\t} ),\n] )( NativeEditorProvider );\n"]}