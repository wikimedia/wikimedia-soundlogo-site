import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import { ScrollView, StyleSheet, TouchableWithoutFeedback, View } from 'react-native';
import { useNavigation } from '@react-navigation/native';
/**
 * WordPress dependencies
 */

import { BottomSheet, BottomSheetContext } from '@wordpress/components';
import { useContext } from '@wordpress/element';
/**
 * Internal dependencies
 */

import styles from './style.scss';

const HelpDetailNavigationScreen = ({
  content,
  label
}) => {
  const navigation = useNavigation();
  const {
    listProps
  } = useContext(BottomSheetContext);
  const contentContainerStyle = StyleSheet.flatten(listProps.contentContainerStyle);
  return createElement(BottomSheet.NavigationScreen, {
    isScrollable: true,
    fullScreen: true
  }, createElement(View, {
    style: styles.container
  }, createElement(BottomSheet.NavBar, null, createElement(BottomSheet.NavBar.BackButton, {
    onPress: navigation.goBack
  }), createElement(BottomSheet.NavBar.Heading, null, label)), createElement(ScrollView, _extends({}, listProps, {
    contentContainerStyle: { ...contentContainerStyle,
      paddingBottom: Math.max(listProps.safeAreaBottomInset, contentContainerStyle.paddingBottom),

      /**
       * Remove margin set via `hideHeader`. Combining a header
       * and navigation in this bottom sheet is at odds with the
       * current `BottomSheet` implementation.
       */
      marginTop: 0
    }
  }), createElement(TouchableWithoutFeedback, {
    accessible: false
  }, createElement(View, null, content)))));
};

export default HelpDetailNavigationScreen;
//# sourceMappingURL=help-detail-navigation-screen.native.js.map