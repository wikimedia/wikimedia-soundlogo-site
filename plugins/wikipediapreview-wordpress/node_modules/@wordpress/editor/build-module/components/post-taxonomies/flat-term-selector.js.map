{"version":3,"sources":["@wordpress/editor/src/components/post-taxonomies/flat-term-selector.js"],"names":["debounce","escape","escapeString","find","get","invoke","isEmpty","uniqBy","__","_x","sprintf","Component","FormTokenField","withFilters","withSpokenMessages","withSelect","withDispatch","store","coreStore","compose","apiFetch","addQueryArgs","editorStore","unescapeString","unescapeTerm","unescapeTerms","MostUsedTerms","MAX_TERMS_SUGGESTIONS","DEFAULT_QUERY","per_page","orderby","order","_fields","isSameTermName","termA","termB","toLowerCase","termNamesToIds","names","terms","map","termName","term","name","id","FlatTermSelector","constructor","arguments","onChange","bind","searchTerms","findOrCreateTerm","appendTerm","state","loading","props","availableTerms","selectedTerms","componentDidMount","initRequest","fetchTerms","include","join","then","setState","xhr","statusText","componentWillUnmount","searchRequest","componentDidUpdate","prevProps","updateSelectedTerms","params","taxonomy","query","request","path","rest_base","concat","filter","availableTerm","reduce","accumulator","termId","termObject","push","termNameEscaped","method","data","catch","error","errorCode","code","addRequest","search","searchResult","result","Promise","reject","termNames","uniqueTerms","newTermNames","length","onUpdateTerms","all","newTerms","newAvailableTerms","newTerm","slug","speak","includes","termAddedMessage","render","hasAssignAction","newTermLabel","singularName","termAddedLabel","termRemovedLabel","removeTermLabel","added","removed","remove","select","getCurrentPost","getTaxonomy","hasCreateAction","getEditedPostAttribute","dispatch","restBase","editPost"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tdebounce,\n\tescape as escapeString,\n\tfind,\n\tget,\n\tinvoke,\n\tisEmpty,\n\tuniqBy,\n} from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __, _x, sprintf } from '@wordpress/i18n';\nimport { Component } from '@wordpress/element';\nimport {\n\tFormTokenField,\n\twithFilters,\n\twithSpokenMessages,\n} from '@wordpress/components';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { compose } from '@wordpress/compose';\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { unescapeString, unescapeTerm, unescapeTerms } from '../../utils/terms';\nimport MostUsedTerms from './most-used-terms';\n\n/**\n * Module constants\n */\nconst MAX_TERMS_SUGGESTIONS = 20;\nconst DEFAULT_QUERY = {\n\tper_page: MAX_TERMS_SUGGESTIONS,\n\torderby: 'count',\n\torder: 'desc',\n\t_fields: 'id,name,count',\n};\n\nconst isSameTermName = ( termA, termB ) =>\n\tunescapeString( termA ).toLowerCase() ===\n\tunescapeString( termB ).toLowerCase();\n\nconst termNamesToIds = ( names, terms ) => {\n\treturn names.map(\n\t\t( termName ) =>\n\t\t\tfind( terms, ( term ) => isSameTermName( term.name, termName ) ).id\n\t);\n};\n\nclass FlatTermSelector extends Component {\n\tconstructor() {\n\t\tsuper( ...arguments );\n\t\tthis.onChange = this.onChange.bind( this );\n\t\tthis.searchTerms = debounce( this.searchTerms.bind( this ), 500 );\n\t\tthis.findOrCreateTerm = this.findOrCreateTerm.bind( this );\n\t\tthis.appendTerm = this.appendTerm.bind( this );\n\t\tthis.state = {\n\t\t\tloading: ! isEmpty( this.props.terms ),\n\t\t\tavailableTerms: [],\n\t\t\tselectedTerms: [],\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tif ( ! isEmpty( this.props.terms ) ) {\n\t\t\tthis.initRequest = this.fetchTerms( {\n\t\t\t\tinclude: this.props.terms.join( ',' ),\n\t\t\t\tper_page: -1,\n\t\t\t} );\n\t\t\tthis.initRequest.then(\n\t\t\t\t() => {\n\t\t\t\t\tthis.setState( { loading: false } );\n\t\t\t\t},\n\t\t\t\t( xhr ) => {\n\t\t\t\t\tif ( xhr.statusText === 'abort' ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.setState( {\n\t\t\t\t\t\tloading: false,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tinvoke( this.initRequest, [ 'abort' ] );\n\t\tinvoke( this.searchRequest, [ 'abort' ] );\n\t}\n\n\tcomponentDidUpdate( prevProps ) {\n\t\tif ( prevProps.terms !== this.props.terms ) {\n\t\t\tthis.updateSelectedTerms( this.props.terms );\n\t\t}\n\t}\n\n\tfetchTerms( params = {} ) {\n\t\tconst { taxonomy } = this.props;\n\t\tconst query = { ...DEFAULT_QUERY, ...params };\n\t\tconst request = apiFetch( {\n\t\t\tpath: addQueryArgs( `/wp/v2/${ taxonomy.rest_base }`, query ),\n\t\t} );\n\t\trequest.then( unescapeTerms ).then( ( terms ) => {\n\t\t\tthis.setState( ( state ) => ( {\n\t\t\t\tavailableTerms: state.availableTerms.concat(\n\t\t\t\t\tterms.filter(\n\t\t\t\t\t\t( term ) =>\n\t\t\t\t\t\t\t! find(\n\t\t\t\t\t\t\t\tstate.availableTerms,\n\t\t\t\t\t\t\t\t( availableTerm ) =>\n\t\t\t\t\t\t\t\t\tavailableTerm.id === term.id\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t} ) );\n\t\t\tthis.updateSelectedTerms( this.props.terms );\n\t\t} );\n\n\t\treturn request;\n\t}\n\n\tupdateSelectedTerms( terms = [] ) {\n\t\tconst selectedTerms = terms.reduce( ( accumulator, termId ) => {\n\t\t\tconst termObject = find(\n\t\t\t\tthis.state.availableTerms,\n\t\t\t\t( term ) => term.id === termId\n\t\t\t);\n\t\t\tif ( termObject ) {\n\t\t\t\taccumulator.push( termObject.name );\n\t\t\t}\n\n\t\t\treturn accumulator;\n\t\t}, [] );\n\t\tthis.setState( {\n\t\t\tselectedTerms,\n\t\t} );\n\t}\n\n\tfindOrCreateTerm( termName ) {\n\t\tconst { taxonomy } = this.props;\n\t\tconst termNameEscaped = escapeString( termName );\n\t\t// Tries to create a term or fetch it if it already exists.\n\t\treturn apiFetch( {\n\t\t\tpath: `/wp/v2/${ taxonomy.rest_base }`,\n\t\t\tmethod: 'POST',\n\t\t\tdata: { name: termNameEscaped },\n\t\t} )\n\t\t\t.catch( ( error ) => {\n\t\t\t\tconst errorCode = error.code;\n\t\t\t\tif ( errorCode === 'term_exists' ) {\n\t\t\t\t\t// If the terms exist, fetch it instead of creating a new one.\n\t\t\t\t\tthis.addRequest = apiFetch( {\n\t\t\t\t\t\tpath: addQueryArgs( `/wp/v2/${ taxonomy.rest_base }`, {\n\t\t\t\t\t\t\t...DEFAULT_QUERY,\n\t\t\t\t\t\t\tsearch: termNameEscaped,\n\t\t\t\t\t\t} ),\n\t\t\t\t\t} ).then( unescapeTerms );\n\t\t\t\t\treturn this.addRequest.then( ( searchResult ) => {\n\t\t\t\t\t\treturn find( searchResult, ( result ) =>\n\t\t\t\t\t\t\tisSameTermName( result.name, termName )\n\t\t\t\t\t\t);\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn Promise.reject( error );\n\t\t\t} )\n\t\t\t.then( unescapeTerm );\n\t}\n\n\tonChange( termNames ) {\n\t\tconst uniqueTerms = uniqBy( termNames, ( term ) => term.toLowerCase() );\n\t\tthis.setState( { selectedTerms: uniqueTerms } );\n\t\tconst newTermNames = uniqueTerms.filter(\n\t\t\t( termName ) =>\n\t\t\t\t! find( this.state.availableTerms, ( term ) =>\n\t\t\t\t\tisSameTermName( term.name, termName )\n\t\t\t\t)\n\t\t);\n\n\t\tif ( newTermNames.length === 0 ) {\n\t\t\treturn this.props.onUpdateTerms(\n\t\t\t\ttermNamesToIds( uniqueTerms, this.state.availableTerms ),\n\t\t\t\tthis.props.taxonomy.rest_base\n\t\t\t);\n\t\t}\n\t\tPromise.all( newTermNames.map( this.findOrCreateTerm ) ).then(\n\t\t\t( newTerms ) => {\n\t\t\t\tconst newAvailableTerms = this.state.availableTerms.concat(\n\t\t\t\t\tnewTerms\n\t\t\t\t);\n\t\t\t\tthis.setState( { availableTerms: newAvailableTerms } );\n\t\t\t\treturn this.props.onUpdateTerms(\n\t\t\t\t\ttermNamesToIds( uniqueTerms, newAvailableTerms ),\n\t\t\t\t\tthis.props.taxonomy.rest_base\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\tsearchTerms( search = '' ) {\n\t\tinvoke( this.searchRequest, [ 'abort' ] );\n\t\tif ( search.length >= 3 ) {\n\t\t\tthis.searchRequest = this.fetchTerms( { search } );\n\t\t}\n\t}\n\n\tappendTerm( newTerm ) {\n\t\tconst { onUpdateTerms, taxonomy, terms = [], slug, speak } = this.props;\n\n\t\tif ( terms.includes( newTerm.id ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst newTerms = [ ...terms, newTerm.id ];\n\n\t\tconst termAddedMessage = sprintf(\n\t\t\t/* translators: %s: term name. */\n\t\t\t_x( '%s added', 'term' ),\n\t\t\tget(\n\t\t\t\ttaxonomy,\n\t\t\t\t[ 'labels', 'singular_name' ],\n\t\t\t\tslug === 'post_tag' ? __( 'Tag' ) : __( 'Term' )\n\t\t\t)\n\t\t);\n\n\t\tspeak( termAddedMessage, 'assertive' );\n\n\t\tthis.setState( {\n\t\t\tavailableTerms: [ ...this.state.availableTerms, newTerm ],\n\t\t} );\n\n\t\tonUpdateTerms( newTerms, taxonomy.rest_base );\n\t}\n\n\trender() {\n\t\tconst { slug, taxonomy, hasAssignAction } = this.props;\n\n\t\tif ( ! hasAssignAction ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst { loading, availableTerms, selectedTerms } = this.state;\n\t\tconst termNames = availableTerms.map( ( term ) => term.name );\n\t\tconst newTermLabel = get(\n\t\t\ttaxonomy,\n\t\t\t[ 'labels', 'add_new_item' ],\n\t\t\tslug === 'post_tag' ? __( 'Add new tag' ) : __( 'Add new Term' )\n\t\t);\n\t\tconst singularName = get(\n\t\t\ttaxonomy,\n\t\t\t[ 'labels', 'singular_name' ],\n\t\t\tslug === 'post_tag' ? __( 'Tag' ) : __( 'Term' )\n\t\t);\n\t\tconst termAddedLabel = sprintf(\n\t\t\t/* translators: %s: term name. */\n\t\t\t_x( '%s added', 'term' ),\n\t\t\tsingularName\n\t\t);\n\t\tconst termRemovedLabel = sprintf(\n\t\t\t/* translators: %s: term name. */\n\t\t\t_x( '%s removed', 'term' ),\n\t\t\tsingularName\n\t\t);\n\t\tconst removeTermLabel = sprintf(\n\t\t\t/* translators: %s: term name. */\n\t\t\t_x( 'Remove %s', 'term' ),\n\t\t\tsingularName\n\t\t);\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<FormTokenField\n\t\t\t\t\tvalue={ selectedTerms }\n\t\t\t\t\tsuggestions={ termNames }\n\t\t\t\t\tonChange={ this.onChange }\n\t\t\t\t\tonInputChange={ this.searchTerms }\n\t\t\t\t\tmaxSuggestions={ MAX_TERMS_SUGGESTIONS }\n\t\t\t\t\tdisabled={ loading }\n\t\t\t\t\tlabel={ newTermLabel }\n\t\t\t\t\tmessages={ {\n\t\t\t\t\t\tadded: termAddedLabel,\n\t\t\t\t\t\tremoved: termRemovedLabel,\n\t\t\t\t\t\tremove: removeTermLabel,\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t\t<MostUsedTerms\n\t\t\t\t\ttaxonomy={ taxonomy }\n\t\t\t\t\tonSelect={ this.appendTerm }\n\t\t\t\t/>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nexport default compose(\n\twithSelect( ( select, { slug } ) => {\n\t\tconst { getCurrentPost } = select( editorStore );\n\t\tconst { getTaxonomy } = select( coreStore );\n\t\tconst taxonomy = getTaxonomy( slug );\n\t\treturn {\n\t\t\thasCreateAction: taxonomy\n\t\t\t\t? get(\n\t\t\t\t\t\tgetCurrentPost(),\n\t\t\t\t\t\t[ '_links', 'wp:action-create-' + taxonomy.rest_base ],\n\t\t\t\t\t\tfalse\n\t\t\t\t  )\n\t\t\t\t: false,\n\t\t\thasAssignAction: taxonomy\n\t\t\t\t? get(\n\t\t\t\t\t\tgetCurrentPost(),\n\t\t\t\t\t\t[ '_links', 'wp:action-assign-' + taxonomy.rest_base ],\n\t\t\t\t\t\tfalse\n\t\t\t\t  )\n\t\t\t\t: false,\n\t\t\tterms: taxonomy\n\t\t\t\t? select( editorStore ).getEditedPostAttribute(\n\t\t\t\t\t\ttaxonomy.rest_base\n\t\t\t\t  )\n\t\t\t\t: [],\n\t\t\ttaxonomy,\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\treturn {\n\t\t\tonUpdateTerms( terms, restBase ) {\n\t\t\t\tdispatch( editorStore ).editPost( { [ restBase ]: terms } );\n\t\t\t},\n\t\t};\n\t} ),\n\twithSpokenMessages,\n\twithFilters( 'editor.PostTaxonomyType' )\n)( FlatTermSelector );\n"]}