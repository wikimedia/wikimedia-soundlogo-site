{"version":3,"sources":["@wordpress/editor/src/components/post-author/select.js"],"names":["__","useMemo","useSelect","useDispatch","decodeEntities","SelectControl","store","coreStore","editorStore","AUTHORS_QUERY","PostAuthorSelect","editPost","postAuthor","authors","select","getEditedPostAttribute","getUsers","authorOptions","map","author","value","id","label","name","setAuthorId","Number"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,iBAAvC;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,sBAAnC;AAEA;AACA;AACA;;AACA,SAASD,KAAK,IAAIE,WAAlB,QAAqC,aAArC;AACA,SAASC,aAAT,QAA8B,aAA9B;;AAEA,SAASC,gBAAT,GAA4B;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAeR,WAAW,CAAEK,WAAF,CAAhC;AACA,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA0BX,SAAS,CAAIY,MAAF,IAAc;AACxD,WAAO;AACNF,MAAAA,UAAU,EAAEE,MAAM,CAAEN,WAAF,CAAN,CAAsBO,sBAAtB,CACX,QADW,CADN;AAINF,MAAAA,OAAO,EAAEC,MAAM,CAAEP,SAAF,CAAN,CAAoBS,QAApB,CAA8BP,aAA9B;AAJH,KAAP;AAMA,GAPwC,EAOtC,EAPsC,CAAzC;AASA,QAAMQ,aAAa,GAAGhB,OAAO,CAAE,MAAM;AACpC,WAAO,CAAEY,OAAF,aAAEA,OAAF,cAAEA,OAAF,GAAa,EAAb,EAAkBK,GAAlB,CAAyBC,MAAF,IAAc;AAC3C,aAAO;AACNC,QAAAA,KAAK,EAAED,MAAM,CAACE,EADR;AAENC,QAAAA,KAAK,EAAElB,cAAc,CAAEe,MAAM,CAACI,IAAT;AAFf,OAAP;AAIA,KALM,CAAP;AAMA,GAP4B,EAO1B,CAAEV,OAAF,CAP0B,CAA7B;;AASA,QAAMW,WAAW,GAAKJ,KAAF,IAAa;AAChC,UAAMD,MAAM,GAAGM,MAAM,CAAEL,KAAF,CAArB;AACAT,IAAAA,QAAQ,CAAE;AAAEQ,MAAAA;AAAF,KAAF,CAAR;AACA,GAHD;;AAKA,SACC,cAAC,aAAD;AACC,IAAA,SAAS,EAAC,sBADX;AAEC,IAAA,KAAK,EAAGnB,EAAE,CAAE,QAAF,CAFX;AAGC,IAAA,OAAO,EAAGiB,aAHX;AAIC,IAAA,QAAQ,EAAGO,WAJZ;AAKC,IAAA,KAAK,EAAGZ;AALT,IADD;AASA;;AAED,eAAeF,gBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useMemo } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { decodeEntities } from '@wordpress/html-entities';\nimport { SelectControl } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editorStore } from '../../store';\nimport { AUTHORS_QUERY } from './constants';\n\nfunction PostAuthorSelect() {\n\tconst { editPost } = useDispatch( editorStore );\n\tconst { postAuthor, authors } = useSelect( ( select ) => {\n\t\treturn {\n\t\t\tpostAuthor: select( editorStore ).getEditedPostAttribute(\n\t\t\t\t'author'\n\t\t\t),\n\t\t\tauthors: select( coreStore ).getUsers( AUTHORS_QUERY ),\n\t\t};\n\t}, [] );\n\n\tconst authorOptions = useMemo( () => {\n\t\treturn ( authors ?? [] ).map( ( author ) => {\n\t\t\treturn {\n\t\t\t\tvalue: author.id,\n\t\t\t\tlabel: decodeEntities( author.name ),\n\t\t\t};\n\t\t} );\n\t}, [ authors ] );\n\n\tconst setAuthorId = ( value ) => {\n\t\tconst author = Number( value );\n\t\teditPost( { author } );\n\t};\n\n\treturn (\n\t\t<SelectControl\n\t\t\tclassName=\"post-author-selector\"\n\t\t\tlabel={ __( 'Author' ) }\n\t\t\toptions={ authorOptions }\n\t\t\tonChange={ setAuthorId }\n\t\t\tvalue={ postAuthor }\n\t\t/>\n\t);\n}\n\nexport default PostAuthorSelect;\n"]}