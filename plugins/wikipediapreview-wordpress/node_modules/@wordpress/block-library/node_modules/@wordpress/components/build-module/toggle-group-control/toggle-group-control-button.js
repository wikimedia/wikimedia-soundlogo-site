import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
// eslint-disable-next-line no-restricted-imports
import { Radio } from 'reakit';
/**
 * WordPress dependencies
 */

import { memo } from '@wordpress/element';
/**
 * Internal dependencies
 */

import * as styles from './styles';
import { useCx } from '../utils/hooks';
const {
  ButtonContentView,
  LabelPlaceholderView,
  LabelView,
  SeparatorView
} = styles;

function ToggleGroupControlButton({
  className,
  forwardedRef,
  isBlock = false,
  label,
  showSeparator,
  value,
  ...props
}) {
  const isActive = props.state === value;
  const cx = useCx();
  const labelViewClasses = cx(isBlock && styles.labelBlock);
  const classes = cx(styles.buttonView, className, isActive && styles.buttonActive);
  return createElement(LabelView, {
    className: labelViewClasses,
    "data-active": isActive
  }, createElement(Radio, _extends({}, props, {
    as: "button",
    "aria-label": label,
    className: classes,
    "data-value": value,
    ref: forwardedRef,
    value: value
  }), createElement(ButtonContentView, null, label), createElement(LabelPlaceholderView, {
    "aria-hidden": true
  }, label)), createElement(ToggleGroupControlSeparator, {
    isActive: !showSeparator
  }));
}

const ToggleGroupControlSeparator = memo(({
  isActive
}) => {
  const cx = useCx();
  const classes = cx(isActive && styles.separatorActive);
  return createElement(SeparatorView, {
    "aria-hidden": true,
    className: classes
  });
});
export default memo(ToggleGroupControlButton);
//# sourceMappingURL=toggle-group-control-button.js.map