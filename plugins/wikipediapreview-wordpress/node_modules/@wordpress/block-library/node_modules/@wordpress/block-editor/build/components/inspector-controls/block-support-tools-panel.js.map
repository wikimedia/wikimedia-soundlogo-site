{"version":3,"sources":["@wordpress/block-editor/src/components/inspector-controls/block-support-tools-panel.js"],"names":["BlockSupportToolsPanel","children","label","header","clientId","attributes","select","getBlockAttributes","getSelectedBlockClientId","blockEditorStore","selectedBlockClientId","updateBlockAttributes","resetAll","resetFilters","style","newAttributes","forEach","resetFilter"],"mappings":";;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AAVA;AACA;AACA;;AAIA;AACA;AACA;AAIe,SAASA,sBAAT,CAAiC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAjC,EAA+D;AAC7E,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2B,qBAAaC,MAAF,IAAc;AACzD,UAAM;AAAEC,MAAAA,kBAAF;AAAsBC,MAAAA;AAAtB,QAAmDF,MAAM,CAC9DG,YAD8D,CAA/D;AAGA,UAAMC,qBAAqB,GAAGF,wBAAwB,EAAtD;AAEA,WAAO;AACNJ,MAAAA,QAAQ,EAAEM,qBADJ;AAENL,MAAAA,UAAU,EAAEE,kBAAkB,CAAEG,qBAAF;AAFxB,KAAP;AAIA,GAVgC,EAU9B,EAV8B,CAAjC;AAWA,QAAM;AAAEC,IAAAA;AAAF,MAA4B,uBAAaF,YAAb,CAAlC;;AAEA,QAAMG,QAAQ,GAAG,CAAEC,YAAY,GAAG,EAAjB,KAAyB;AACzC,UAAM;AAAEC,MAAAA;AAAF,QAAYT,UAAlB;AACA,QAAIU,aAAa,GAAG;AAAED,MAAAA;AAAF,KAApB;AAEAD,IAAAA,YAAY,CAACG,OAAb,CAAwBC,WAAF,IAAmB;AACxCF,MAAAA,aAAa,GAAG,EACf,GAAGA,aADY;AAEf,WAAGE,WAAW,CAAEF,aAAF;AAFC,OAAhB;AAIA,KALD,EAJyC,CAWzC;;AACAA,IAAAA,aAAa,GAAG,EACf,GAAGA,aADY;AAEfD,MAAAA,KAAK,EAAE,6BAAkBC,aAAa,CAACD,KAAhC;AAFQ,KAAhB;AAKAH,IAAAA,qBAAqB,CAAEP,QAAF,EAAYW,aAAZ,CAArB;AACA,GAlBD;;AAoBA,SACC,4BAAC,oCAAD;AACC,IAAA,KAAK,EAAGb,KADT;AAEC,IAAA,MAAM,EAAGC,MAFV;AAGC,IAAA,QAAQ,EAAGS,QAHZ;AAIC,IAAA,GAAG,EAAGR,QAJP;AAKC,IAAA,OAAO,EAAGA;AALX,KAOGH,QAPH,CADD;AAWA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __experimentalToolsPanel as ToolsPanel } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\nimport { cleanEmptyObject } from '../../hooks/utils';\n\nexport default function BlockSupportToolsPanel( { children, label, header } ) {\n\tconst { clientId, attributes } = useSelect( ( select ) => {\n\t\tconst { getBlockAttributes, getSelectedBlockClientId } = select(\n\t\t\tblockEditorStore\n\t\t);\n\t\tconst selectedBlockClientId = getSelectedBlockClientId();\n\n\t\treturn {\n\t\t\tclientId: selectedBlockClientId,\n\t\t\tattributes: getBlockAttributes( selectedBlockClientId ),\n\t\t};\n\t}, [] );\n\tconst { updateBlockAttributes } = useDispatch( blockEditorStore );\n\n\tconst resetAll = ( resetFilters = [] ) => {\n\t\tconst { style } = attributes;\n\t\tlet newAttributes = { style };\n\n\t\tresetFilters.forEach( ( resetFilter ) => {\n\t\t\tnewAttributes = {\n\t\t\t\t...newAttributes,\n\t\t\t\t...resetFilter( newAttributes ),\n\t\t\t};\n\t\t} );\n\n\t\t// Enforce a cleaned style object.\n\t\tnewAttributes = {\n\t\t\t...newAttributes,\n\t\t\tstyle: cleanEmptyObject( newAttributes.style ),\n\t\t};\n\n\t\tupdateBlockAttributes( clientId, newAttributes );\n\t};\n\n\treturn (\n\t\t<ToolsPanel\n\t\t\tlabel={ label }\n\t\t\theader={ header }\n\t\t\tresetAll={ resetAll }\n\t\t\tkey={ clientId }\n\t\t\tpanelId={ clientId }\n\t\t>\n\t\t\t{ children }\n\t\t</ToolsPanel>\n\t);\n}\n"]}