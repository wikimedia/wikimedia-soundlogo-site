"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

var _keycodes = require("@wordpress/keycodes");

/**
 * WordPress dependencies
 */
function DuotoneControl({
  colorPalette,
  duotonePalette,
  disableCustomColors,
  disableCustomDuotone,
  value,
  onChange
}) {
  return (0, _element.createElement)(_components.Dropdown, {
    popoverProps: {
      className: 'block-editor-duotone-control__popover',
      headerTitle: (0, _i18n.__)('Duotone')
    },
    renderToggle: ({
      isOpen,
      onToggle
    }) => {
      const openOnArrowDown = event => {
        if (!isOpen && event.keyCode === _keycodes.DOWN) {
          event.preventDefault();
          onToggle();
        }
      };

      return (0, _element.createElement)(_components.ToolbarButton, {
        showTooltip: true,
        onClick: onToggle,
        "aria-haspopup": "true",
        "aria-expanded": isOpen,
        onKeyDown: openOnArrowDown,
        label: (0, _i18n.__)('Apply duotone filter'),
        icon: (0, _element.createElement)(_components.DuotoneSwatch, {
          values: value
        })
      });
    },
    renderContent: () => (0, _element.createElement)(_components.MenuGroup, {
      label: (0, _i18n.__)('Duotone')
    }, (0, _element.createElement)(_components.DuotonePicker, {
      colorPalette: colorPalette,
      duotonePalette: duotonePalette,
      disableCustomColors: disableCustomColors,
      disableCustomDuotone: disableCustomDuotone,
      value: value,
      onChange: onChange
    }))
  });
}

var _default = DuotoneControl;
exports.default = _default;
//# sourceMappingURL=index.js.map