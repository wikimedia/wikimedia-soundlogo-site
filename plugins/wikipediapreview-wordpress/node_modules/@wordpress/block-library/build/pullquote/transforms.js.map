{"version":3,"sources":["@wordpress/block-library/src/pullquote/transforms.js"],"names":["transforms","from","type","isMultiBlock","blocks","transform","attributes","value","map","content","html","multilineTag","anchor","to","citation","paragraphs","push","piece","length","attrs","pieces","headingBlock","quotePieces","slice","pullquoteBlock"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { create, join, split, toHTMLString } from '@wordpress/rich-text';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( attributes ) => {\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: join(\n\t\t\t\t\t\t\tattributes.map( ( { content } ) =>\n\t\t\t\t\t\t\t\tcreate( { html: content } )\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t\tanchor: attributes.anchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { content, anchor } ) => {\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t\tanchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( { value, citation } ) => {\n\t\t\t\tconst paragraphs = [];\n\t\t\t\tif ( value && value !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\t...split(\n\t\t\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t).map( ( piece ) =>\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ( citation && citation !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ( paragraphs.length === 0 ) {\n\t\t\t\t\treturn createBlock( 'core/paragraph', {\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn paragraphs;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { value, citation, ...attrs } ) => {\n\t\t\t\t// If there is no pullquote content, use the citation as the\n\t\t\t\t// content of the resulting heading. A nonexistent citation\n\t\t\t\t// will result in an empty heading.\n\t\t\t\tif ( value === '<p></p>' ) {\n\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tconst pieces = split(\n\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t'\\u2028'\n\t\t\t\t);\n\t\t\t\tconst headingBlock = createBlock( 'core/heading', {\n\t\t\t\t\tcontent: toHTMLString( { value: pieces[ 0 ] } ),\n\t\t\t\t} );\n\t\t\t\tif ( ! citation && pieces.length === 1 ) {\n\t\t\t\t\treturn headingBlock;\n\t\t\t\t}\n\t\t\t\tconst quotePieces = pieces.slice( 1 );\n\t\t\t\tconst pullquoteBlock = createBlock( 'core/pullquote', {\n\t\t\t\t\t...attrs,\n\t\t\t\t\tcitation,\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: quotePieces.length\n\t\t\t\t\t\t\t? join( pieces.slice( 1 ), '\\u2028' )\n\t\t\t\t\t\t\t: create(),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t} );\n\t\t\t\treturn [ headingBlock, pullquoteBlock ];\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}