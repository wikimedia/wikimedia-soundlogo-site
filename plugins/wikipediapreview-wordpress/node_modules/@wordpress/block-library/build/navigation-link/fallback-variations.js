"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _i18n = require("@wordpress/i18n");

var _icons = require("@wordpress/icons");

/**
 * WordPress dependencies
 */
// FALLBACK: this is only used when the server does not understand the variations property in the
// register_block_type call. see navigation-link/index.php.
// Delete this file when supported WP ranges understand the `variations` property when passed to
// register_block_type in index.php
const fallbackVariations = [{
  name: 'link',
  isDefault: true,
  title: (0, _i18n.__)('Custom Link'),
  description: (0, _i18n.__)('A link to a custom URL.'),
  attributes: {}
}, {
  name: 'post',
  icon: _icons.postTitle,
  title: (0, _i18n.__)('Post Link'),
  description: (0, _i18n.__)('A link to a post.'),
  attributes: {
    type: 'post',
    kind: 'post-type'
  }
}, {
  name: 'page',
  icon: _icons.page,
  title: (0, _i18n.__)('Page Link'),
  description: (0, _i18n.__)('A link to a page.'),
  attributes: {
    type: 'page',
    kind: 'post-type'
  }
}, {
  name: 'category',
  icon: _icons.category,
  title: (0, _i18n.__)('Category Link'),
  description: (0, _i18n.__)('A link to a category.'),
  attributes: {
    type: 'category',
    kind: 'taxonomy'
  }
}, {
  name: 'tag',
  icon: _icons.tag,
  title: (0, _i18n.__)('Tag Link'),
  description: (0, _i18n.__)('A link to a tag.'),
  attributes: {
    type: 'tag',
    kind: 'taxonomy'
  }
}];
/**
 * Add `isActive` function to all `navigation link` variations, if not defined.
 * `isActive` function is used to find a variation match from a created
 *  Block by providing its attributes.
 */

fallbackVariations.forEach(variation => {
  if (variation.isActive) return;

  variation.isActive = (blockAttributes, variationAttributes) => blockAttributes.type === variationAttributes.type;
});
var _default = fallbackVariations;
exports.default = _default;
//# sourceMappingURL=fallback-variations.js.map