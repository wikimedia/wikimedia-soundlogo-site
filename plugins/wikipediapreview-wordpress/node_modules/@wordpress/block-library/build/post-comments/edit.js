"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = PostCommentsEdit;

var _element = require("@wordpress/element");

var _classnames = _interopRequireDefault(require("classnames"));

var _data = require("@wordpress/data");

var _blockEditor = require("@wordpress/block-editor");

var _i18n = require("@wordpress/i18n");

var _coreData = require("@wordpress/core-data");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */
function PostCommentsDisplay({
  postId
}) {
  return (0, _data.useSelect)(select => {
    const comments = select(_coreData.store).getEntityRecords('root', 'comment', {
      post: postId
    }); // TODO: "No Comments" placeholder should be editable.

    return comments && comments.length ? comments.map(comment => (0, _element.createElement)(_element.RawHTML, {
      className: "wp-block-post-comments__comment",
      key: comment.id
    }, comment.content.rendered)) : (0, _i18n.__)('No comments.');
  }, [postId]);
}

function PostCommentsEdit({
  attributes,
  setAttributes,
  context
}) {
  const {
    postType,
    postId
  } = context;
  const {
    textAlign
  } = attributes;
  const blockProps = (0, _blockEditor.useBlockProps)({
    className: (0, _classnames.default)({
      [`has-text-align-${textAlign}`]: textAlign
    })
  });

  if (!postType || !postId) {
    return (0, _element.createElement)("div", blockProps, (0, _element.createElement)(_blockEditor.Warning, null, (0, _i18n.__)('Post comments block: no post found.')));
  }

  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_blockEditor.BlockControls, {
    group: "block"
  }, (0, _element.createElement)(_blockEditor.AlignmentControl, {
    value: textAlign,
    onChange: nextAlign => {
      setAttributes({
        textAlign: nextAlign
      });
    }
  })), (0, _element.createElement)("div", blockProps, (0, _element.createElement)(PostCommentsDisplay, {
    postId: postId
  })));
}
//# sourceMappingURL=edit.js.map