"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _url = require("@wordpress/url");

var _data = require("@wordpress/data");

var _notices = require("@wordpress/notices");

/**
 * WordPress dependencies
 */
const EmbedBottomSheet = ({
  value,
  label,
  isVisible,
  onClose,
  onSubmit
}) => {
  const [url, setURL] = (0, _element.useState)(value);
  const {
    createErrorNotice
  } = (0, _data.useDispatch)(_notices.store);
  const linkSettingsOptions = {
    url: {
      label: (0, _i18n.sprintf)( // translators: %s: embed block variant's label e.g: "Twitter".
      (0, _i18n.__)('%s link'), label),
      placeholder: (0, _i18n.__)('Add link'),
      autoFocus: true,
      autoFill: true
    },
    footer: {
      label: (0, _element.createElement)(_components.FooterMessageLink, {
        href: (0, _i18n.__)('https://wordpress.org/support/article/embeds/'),
        value: (0, _i18n.__)('Learn more about embeds')
      }),
      separatorType: 'topFullWidth'
    }
  };
  const onDismiss = (0, _element.useCallback)(() => {
    if (url !== '') {
      if ((0, _url.isURL)(url)) {
        onSubmit(url);
      } else {
        createErrorNotice((0, _i18n.__)('Invalid URL. Please enter a valid URL.')); // If the URL was already defined, we submit it to stop showing the embed placeholder.

        if (value !== '') {
          onSubmit(value);
        }
      }
    } else if (value !== '') {
      // Resets the URL when new value is empty and URL was already defined.
      onSubmit('');
    }
  }, [url, onSubmit, value]);

  function setAttributes(attributes) {
    setURL(attributes.url);
  }

  return (0, _element.createElement)(_components.LinkSettingsNavigation, {
    isVisible: isVisible,
    url: url,
    onClose: onClose,
    onDismiss: onDismiss,
    setAttributes: setAttributes,
    options: linkSettingsOptions,
    withBottomSheet: true,
    showIcon: true
  });
};

var _default = EmbedBottomSheet;
exports.default = _default;
//# sourceMappingURL=embed-bottom-sheet.native.js.map