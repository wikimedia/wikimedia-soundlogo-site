{"version":3,"sources":["@wordpress/block-library/src/post-terms/edit.js"],"names":["PostTermsEdit","attributes","context","setAttributes","term","textAlign","separator","postId","postType","selectedTerm","select","getTaxonomy","coreStore","taxonomy","visibility","publicly_queryable","postTerms","hasPostTerms","isLoading","hasPost","blockProps","className","nextAlign","nextValue","map","postTerm","id","link","event","preventDefault","name","reduce","prev","curr","labels","no_terms"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tAlignmentToolbar,\n\tInspectorControls,\n\tBlockControls,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { Spinner, TextControl } from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport usePostTerms from './use-post-terms';\n\nexport default function PostTermsEdit( {\n\tattributes,\n\tcontext,\n\tsetAttributes,\n} ) {\n\tconst { term, textAlign, separator } = attributes;\n\tconst { postId, postType } = context;\n\n\tconst selectedTerm = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! term ) return {};\n\t\t\tconst { getTaxonomy } = select( coreStore );\n\t\t\tconst taxonomy = getTaxonomy( term );\n\t\t\treturn taxonomy?.visibility?.publicly_queryable ? taxonomy : {};\n\t\t},\n\t\t[ term ]\n\t);\n\tconst { postTerms, hasPostTerms, isLoading } = usePostTerms( {\n\t\tpostId,\n\t\tpostType,\n\t\tterm: selectedTerm,\n\t} );\n\tconst hasPost = postId && postType;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t\t[ `taxonomy-${ term }` ]: term,\n\t\t} ),\n\t} );\n\n\tif ( ! hasPost ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ __( 'Post Terms block: post not found.' ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif ( ! term ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ __( 'Post Terms block: no term specified.' ) }\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls>\n\t\t\t\t<AlignmentToolbar\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<InspectorControls __experimentalGroup=\"advanced\">\n\t\t\t\t<TextControl\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tlabel={ __( 'Separator' ) }\n\t\t\t\t\tvalue={ separator || '' }\n\t\t\t\t\tonChange={ ( nextValue ) => {\n\t\t\t\t\t\tsetAttributes( { separator: nextValue } );\n\t\t\t\t\t} }\n\t\t\t\t\thelp={ __( 'Enter character(s) used to separate terms.' ) }\n\t\t\t\t/>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...blockProps }>\n\t\t\t\t{ isLoading && <Spinner /> }\n\t\t\t\t{ ! isLoading &&\n\t\t\t\t\thasPostTerms &&\n\t\t\t\t\tpostTerms\n\t\t\t\t\t\t.map( ( postTerm ) => (\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tkey={ postTerm.id }\n\t\t\t\t\t\t\t\thref={ postTerm.link }\n\t\t\t\t\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{ postTerm.name }\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t) )\n\t\t\t\t\t\t.reduce( ( prev, curr ) => (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{ prev }\n\t\t\t\t\t\t\t\t<span className=\"wp-block-post-terms__separator\">\n\t\t\t\t\t\t\t\t\t{ separator || ' ' }\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{ curr }\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t) ) }\n\t\t\t\t{ ! isLoading &&\n\t\t\t\t\t! hasPostTerms &&\n\t\t\t\t\t( selectedTerm?.labels?.no_terms ||\n\t\t\t\t\t\t__( 'Term items not found.' ) ) }\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"]}