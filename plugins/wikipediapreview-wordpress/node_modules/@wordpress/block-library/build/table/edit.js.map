{"version":3,"sources":["@wordpress/block-library/src/table/edit.js"],"names":["ALIGNMENT_CONTROLS","icon","alignLeft","title","align","alignCenter","alignRight","cellAriaLabel","head","body","foot","placeholder","TSection","name","props","TagName","TableEdit","attributes","setAttributes","insertBlocksAfter","isSelected","hasFixedLayout","caption","initialRowCount","setInitialRowCount","initialColumnCount","setInitialColumnCount","selectedCell","setSelectedCell","colorProps","borderProps","onChangeInitialColumnCount","count","onChangeInitialRowCount","onCreateTable","event","preventDefault","rowCount","parseInt","columnCount","onChangeFixedLayout","onChange","content","cellAttributes","onChangeColumnAlignment","columnSelection","type","columnIndex","newAttributes","getCellAlignment","onToggleHeaderSection","onToggleFooterSection","onInsertRow","delta","sectionName","rowIndex","newRowIndex","onInsertRowBefore","onInsertRowAfter","onDeleteRow","onInsertColumn","newColumnIndex","onInsertColumnBefore","onInsertColumnAfter","onDeleteColumn","sections","filter","tableControls","tableRowBefore","isDisabled","onClick","tableRowAfter","tableRowDelete","tableColumnBefore","tableColumnAfter","tableColumnDelete","renderedSections","map","cells","tag","CellTag","scope","undefined","isEmpty","length","nextAlign","table","className","style","value"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useState } from '@wordpress/element';\nimport {\n\tInspectorControls,\n\tBlockControls,\n\tRichText,\n\tBlockIcon,\n\tAlignmentControl,\n\tuseBlockProps,\n\t__experimentalUseColorProps as useColorProps,\n\t__experimentalUseBorderProps as useBorderProps,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButton,\n\tPanelBody,\n\tPlaceholder,\n\tTextControl,\n\tToggleControl,\n\tToolbarDropdownMenu,\n} from '@wordpress/components';\nimport {\n\talignLeft,\n\talignRight,\n\talignCenter,\n\tblockTable as icon,\n\ttableColumnAfter,\n\ttableColumnBefore,\n\ttableColumnDelete,\n\ttableRowAfter,\n\ttableRowBefore,\n\ttableRowDelete,\n\ttable,\n} from '@wordpress/icons';\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport {\n\tcreateTable,\n\tupdateSelectedCell,\n\tgetCellAttribute,\n\tinsertRow,\n\tdeleteRow,\n\tinsertColumn,\n\tdeleteColumn,\n\ttoggleSection,\n\tisEmptyTableSection,\n} from './state';\n\nconst ALIGNMENT_CONTROLS = [\n\t{\n\t\ticon: alignLeft,\n\t\ttitle: __( 'Align column left' ),\n\t\talign: 'left',\n\t},\n\t{\n\t\ticon: alignCenter,\n\t\ttitle: __( 'Align column center' ),\n\t\talign: 'center',\n\t},\n\t{\n\t\ticon: alignRight,\n\t\ttitle: __( 'Align column right' ),\n\t\talign: 'right',\n\t},\n];\n\nconst cellAriaLabel = {\n\thead: __( 'Header cell text' ),\n\tbody: __( 'Body cell text' ),\n\tfoot: __( 'Footer cell text' ),\n};\n\nconst placeholder = {\n\thead: __( 'Header label' ),\n\tfoot: __( 'Footer label' ),\n};\n\nfunction TSection( { name, ...props } ) {\n\tconst TagName = `t${ name }`;\n\treturn <TagName { ...props } />;\n}\n\nfunction TableEdit( {\n\tattributes,\n\tsetAttributes,\n\tinsertBlocksAfter,\n\tisSelected,\n} ) {\n\tconst { hasFixedLayout, caption, head, foot } = attributes;\n\tconst [ initialRowCount, setInitialRowCount ] = useState( 2 );\n\tconst [ initialColumnCount, setInitialColumnCount ] = useState( 2 );\n\tconst [ selectedCell, setSelectedCell ] = useState();\n\n\tconst colorProps = useColorProps( attributes );\n\tconst borderProps = useBorderProps( attributes );\n\n\t/**\n\t * Updates the initial column count used for table creation.\n\t *\n\t * @param {number} count New initial column count.\n\t */\n\tfunction onChangeInitialColumnCount( count ) {\n\t\tsetInitialColumnCount( count );\n\t}\n\n\t/**\n\t * Updates the initial row count used for table creation.\n\t *\n\t * @param {number} count New initial row count.\n\t */\n\tfunction onChangeInitialRowCount( count ) {\n\t\tsetInitialRowCount( count );\n\t}\n\n\t/**\n\t * Creates a table based on dimensions in local state.\n\t *\n\t * @param {Object} event Form submit event.\n\t */\n\tfunction onCreateTable( event ) {\n\t\tevent.preventDefault();\n\n\t\tsetAttributes(\n\t\t\tcreateTable( {\n\t\t\t\trowCount: parseInt( initialRowCount, 10 ) || 2,\n\t\t\t\tcolumnCount: parseInt( initialColumnCount, 10 ) || 2,\n\t\t\t} )\n\t\t);\n\t}\n\n\t/**\n\t * Toggles whether the table has a fixed layout or not.\n\t */\n\tfunction onChangeFixedLayout() {\n\t\tsetAttributes( { hasFixedLayout: ! hasFixedLayout } );\n\t}\n\n\t/**\n\t * Changes the content of the currently selected cell.\n\t *\n\t * @param {Array} content A RichText content value.\n\t */\n\tfunction onChange( content ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tsetAttributes(\n\t\t\tupdateSelectedCell(\n\t\t\t\tattributes,\n\t\t\t\tselectedCell,\n\t\t\t\t( cellAttributes ) => ( {\n\t\t\t\t\t...cellAttributes,\n\t\t\t\t\tcontent,\n\t\t\t\t} )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Align text within the a column.\n\t *\n\t * @param {string} align The new alignment to apply to the column.\n\t */\n\tfunction onChangeColumnAlignment( align ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Convert the cell selection to a column selection so that alignment\n\t\t// is applied to the entire column.\n\t\tconst columnSelection = {\n\t\t\ttype: 'column',\n\t\t\tcolumnIndex: selectedCell.columnIndex,\n\t\t};\n\n\t\tconst newAttributes = updateSelectedCell(\n\t\t\tattributes,\n\t\t\tcolumnSelection,\n\t\t\t( cellAttributes ) => ( {\n\t\t\t\t...cellAttributes,\n\t\t\t\talign,\n\t\t\t} )\n\t\t);\n\t\tsetAttributes( newAttributes );\n\t}\n\n\t/**\n\t * Get the alignment of the currently selected cell.\n\t *\n\t * @return {string} The new alignment to apply to the column.\n\t */\n\tfunction getCellAlignment() {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn getCellAttribute( attributes, selectedCell, 'align' );\n\t}\n\n\t/**\n\t * Add or remove a `head` table section.\n\t */\n\tfunction onToggleHeaderSection() {\n\t\tsetAttributes( toggleSection( attributes, 'head' ) );\n\t}\n\n\t/**\n\t * Add or remove a `foot` table section.\n\t */\n\tfunction onToggleFooterSection() {\n\t\tsetAttributes( toggleSection( attributes, 'foot' ) );\n\t}\n\n\t/**\n\t * Inserts a row at the currently selected row index, plus `delta`.\n\t *\n\t * @param {number} delta Offset for selected row index at which to insert.\n\t */\n\tfunction onInsertRow( delta ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { sectionName, rowIndex } = selectedCell;\n\t\tconst newRowIndex = rowIndex + delta;\n\n\t\tsetAttributes(\n\t\t\tinsertRow( attributes, {\n\t\t\t\tsectionName,\n\t\t\t\trowIndex: newRowIndex,\n\t\t\t} )\n\t\t);\n\t\t// Select the first cell of the new row\n\t\tsetSelectedCell( {\n\t\t\tsectionName,\n\t\t\trowIndex: newRowIndex,\n\t\t\tcolumnIndex: 0,\n\t\t\ttype: 'cell',\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts a row before the currently selected row.\n\t */\n\tfunction onInsertRowBefore() {\n\t\tonInsertRow( 0 );\n\t}\n\n\t/**\n\t * Inserts a row after the currently selected row.\n\t */\n\tfunction onInsertRowAfter() {\n\t\tonInsertRow( 1 );\n\t}\n\n\t/**\n\t * Deletes the currently selected row.\n\t */\n\tfunction onDeleteRow() {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { sectionName, rowIndex } = selectedCell;\n\n\t\tsetSelectedCell();\n\t\tsetAttributes( deleteRow( attributes, { sectionName, rowIndex } ) );\n\t}\n\n\t/**\n\t * Inserts a column at the currently selected column index, plus `delta`.\n\t *\n\t * @param {number} delta Offset for selected column index at which to insert.\n\t */\n\tfunction onInsertColumn( delta = 0 ) {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { columnIndex } = selectedCell;\n\t\tconst newColumnIndex = columnIndex + delta;\n\n\t\tsetAttributes(\n\t\t\tinsertColumn( attributes, {\n\t\t\t\tcolumnIndex: newColumnIndex,\n\t\t\t} )\n\t\t);\n\t\t// Select the first cell of the new column\n\t\tsetSelectedCell( {\n\t\t\trowIndex: 0,\n\t\t\tcolumnIndex: newColumnIndex,\n\t\t\ttype: 'cell',\n\t\t} );\n\t}\n\n\t/**\n\t * Inserts a column before the currently selected column.\n\t */\n\tfunction onInsertColumnBefore() {\n\t\tonInsertColumn( 0 );\n\t}\n\n\t/**\n\t * Inserts a column after the currently selected column.\n\t */\n\tfunction onInsertColumnAfter() {\n\t\tonInsertColumn( 1 );\n\t}\n\n\t/**\n\t * Deletes the currently selected column.\n\t */\n\tfunction onDeleteColumn() {\n\t\tif ( ! selectedCell ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { sectionName, columnIndex } = selectedCell;\n\n\t\tsetSelectedCell();\n\t\tsetAttributes(\n\t\t\tdeleteColumn( attributes, { sectionName, columnIndex } )\n\t\t);\n\t}\n\n\tuseEffect( () => {\n\t\tif ( ! isSelected ) {\n\t\t\tsetSelectedCell();\n\t\t}\n\t}, [ isSelected ] );\n\n\tconst sections = [ 'head', 'body', 'foot' ].filter(\n\t\t( name ) => ! isEmptyTableSection( attributes[ name ] )\n\t);\n\n\tconst tableControls = [\n\t\t{\n\t\t\ticon: tableRowBefore,\n\t\t\ttitle: __( 'Insert row before' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertRowBefore,\n\t\t},\n\t\t{\n\t\t\ticon: tableRowAfter,\n\t\t\ttitle: __( 'Insert row after' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertRowAfter,\n\t\t},\n\t\t{\n\t\t\ticon: tableRowDelete,\n\t\t\ttitle: __( 'Delete row' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onDeleteRow,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnBefore,\n\t\t\ttitle: __( 'Insert column before' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertColumnBefore,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnAfter,\n\t\t\ttitle: __( 'Insert column after' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onInsertColumnAfter,\n\t\t},\n\t\t{\n\t\t\ticon: tableColumnDelete,\n\t\t\ttitle: __( 'Delete column' ),\n\t\t\tisDisabled: ! selectedCell,\n\t\t\tonClick: onDeleteColumn,\n\t\t},\n\t];\n\n\tconst renderedSections = [ 'head', 'body', 'foot' ].map( ( name ) => (\n\t\t<TSection name={ name } key={ name }>\n\t\t\t{ attributes[ name ].map( ( { cells }, rowIndex ) => (\n\t\t\t\t<tr key={ rowIndex }>\n\t\t\t\t\t{ cells.map(\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t{ content, tag: CellTag, scope, align },\n\t\t\t\t\t\t\tcolumnIndex\n\t\t\t\t\t\t) => (\n\t\t\t\t\t\t\t<RichText\n\t\t\t\t\t\t\t\ttagName={ CellTag }\n\t\t\t\t\t\t\t\tkey={ columnIndex }\n\t\t\t\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t[ `has-text-align-${ align }` ]: align,\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t'wp-block-table__cell-content'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\tscope={ CellTag === 'th' ? scope : undefined }\n\t\t\t\t\t\t\t\tvalue={ content }\n\t\t\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\t\t\tunstableOnFocus={ () => {\n\t\t\t\t\t\t\t\t\tsetSelectedCell( {\n\t\t\t\t\t\t\t\t\t\tsectionName: name,\n\t\t\t\t\t\t\t\t\t\trowIndex,\n\t\t\t\t\t\t\t\t\t\tcolumnIndex,\n\t\t\t\t\t\t\t\t\t\ttype: 'cell',\n\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\taria-label={ cellAriaLabel[ name ] }\n\t\t\t\t\t\t\t\tplaceholder={ placeholder[ name ] }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t) }\n\t\t\t\t</tr>\n\t\t\t) ) }\n\t\t</TSection>\n\t) );\n\n\tconst isEmpty = ! sections.length;\n\n\treturn (\n\t\t<figure { ...useBlockProps() }>\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<>\n\t\t\t\t\t<BlockControls group=\"block\">\n\t\t\t\t\t\t<AlignmentControl\n\t\t\t\t\t\t\tlabel={ __( 'Change column alignment' ) }\n\t\t\t\t\t\t\talignmentControls={ ALIGNMENT_CONTROLS }\n\t\t\t\t\t\t\tvalue={ getCellAlignment() }\n\t\t\t\t\t\t\tonChange={ ( nextAlign ) =>\n\t\t\t\t\t\t\t\tonChangeColumnAlignment( nextAlign )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t\t<BlockControls group=\"other\">\n\t\t\t\t\t\t<ToolbarDropdownMenu\n\t\t\t\t\t\t\thasArrowIndicator\n\t\t\t\t\t\t\ticon={ table }\n\t\t\t\t\t\t\tlabel={ __( 'Edit table' ) }\n\t\t\t\t\t\t\tcontrols={ tableControls }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t</>\n\t\t\t) }\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<InspectorControls>\n\t\t\t\t\t<PanelBody\n\t\t\t\t\t\ttitle={ __( 'Table settings' ) }\n\t\t\t\t\t\tclassName=\"blocks-table-settings\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Fixed width table cells' ) }\n\t\t\t\t\t\t\tchecked={ !! hasFixedLayout }\n\t\t\t\t\t\t\tonChange={ onChangeFixedLayout }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Header section' ) }\n\t\t\t\t\t\t\tchecked={ !! ( head && head.length ) }\n\t\t\t\t\t\t\tonChange={ onToggleHeaderSection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ __( 'Footer section' ) }\n\t\t\t\t\t\t\tchecked={ !! ( foot && foot.length ) }\n\t\t\t\t\t\t\tonChange={ onToggleFooterSection }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</InspectorControls>\n\t\t\t) }\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<table\n\t\t\t\t\tclassName={ classnames(\n\t\t\t\t\t\tcolorProps.className,\n\t\t\t\t\t\tborderProps.className,\n\t\t\t\t\t\t{ 'has-fixed-layout': hasFixedLayout }\n\t\t\t\t\t) }\n\t\t\t\t\tstyle={ { ...colorProps.style, ...borderProps.style } }\n\t\t\t\t>\n\t\t\t\t\t{ renderedSections }\n\t\t\t\t</table>\n\t\t\t) }\n\t\t\t{ ! isEmpty && (\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"figcaption\"\n\t\t\t\t\taria-label={ __( 'Table caption text' ) }\n\t\t\t\t\tplaceholder={ __( 'Add caption' ) }\n\t\t\t\t\tvalue={ caption }\n\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\tsetAttributes( { caption: value } )\n\t\t\t\t\t}\n\t\t\t\t\t// Deselect the selected table cell when the caption is focused.\n\t\t\t\t\tunstableOnFocus={ () => setSelectedCell() }\n\t\t\t\t\t__unstableOnSplitAtEnd={ () =>\n\t\t\t\t\t\tinsertBlocksAfter( createBlock( 'core/paragraph' ) )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t{ isEmpty && (\n\t\t\t\t<Placeholder\n\t\t\t\t\tlabel={ __( 'Table' ) }\n\t\t\t\t\ticon={ <BlockIcon icon={ icon } showColors /> }\n\t\t\t\t\tinstructions={ __( 'Insert a table for sharing data.' ) }\n\t\t\t\t>\n\t\t\t\t\t<form\n\t\t\t\t\t\tclassName=\"blocks-table__placeholder-form\"\n\t\t\t\t\t\tonSubmit={ onCreateTable }\n\t\t\t\t\t>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Column count' ) }\n\t\t\t\t\t\t\tvalue={ initialColumnCount }\n\t\t\t\t\t\t\tonChange={ onChangeInitialColumnCount }\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tlabel={ __( 'Row count' ) }\n\t\t\t\t\t\t\tvalue={ initialRowCount }\n\t\t\t\t\t\t\tonChange={ onChangeInitialRowCount }\n\t\t\t\t\t\t\tmin=\"1\"\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-input\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tclassName=\"blocks-table__placeholder-button\"\n\t\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ __( 'Create Table' ) }\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</form>\n\t\t\t\t</Placeholder>\n\t\t\t) }\n\t\t</figure>\n\t);\n}\n\nexport default TableEdit;\n"]}