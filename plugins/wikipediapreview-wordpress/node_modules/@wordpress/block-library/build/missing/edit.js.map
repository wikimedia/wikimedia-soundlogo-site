{"version":3,"sources":["@wordpress/block-library/src/missing/edit.js"],"names":["MissingBlockWarning","attributes","convertToHTML","originalName","originalUndelimitedContent","hasContent","hasHTMLBlock","actions","messageHTML","push","className","MissingEdit","dispatch","clientId","replaceBlock","blockEditorStore","content"],"mappings":";;;;;;;AAIA;;AADA;;AAEA;;AACA;;AACA;;AACA;;AAKA;;AAbA;AACA;AACA;AAaA,SAASA,mBAAT,CAA8B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAA9B,EAA8D;AAC7D,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA+CH,UAArD;AACA,QAAMI,UAAU,GAAG,CAAC,CAAED,0BAAtB;AACA,QAAME,YAAY,GAAG,0BAAc,WAAd,CAArB;AAEA,QAAMC,OAAO,GAAG,EAAhB;AACA,MAAIC,WAAJ;;AACA,MAAKH,UAAU,IAAIC,YAAnB,EAAkC;AACjCE,IAAAA,WAAW,GAAG;AACb;AACA,kBACC,2JADD,CAFa,EAKbL,YALa,CAAd;AAOAI,IAAAA,OAAO,CAACE,IAAR,CACC,4BAAC,kBAAD;AAAQ,MAAA,GAAG,EAAC,SAAZ;AAAsB,MAAA,OAAO,EAAGP,aAAhC;AAAgD,MAAA,OAAO,EAAC;AAAxD,OACG,cAAI,cAAJ,CADH,CADD;AAKA,GAbD,MAaO;AACNM,IAAAA,WAAW,GAAG;AACb;AACA,kBACC,8GADD,CAFa,EAKbL,YALa,CAAd;AAOA;;AAED,SACC,mCAAU,gCAAe;AAAEO,IAAAA,SAAS,EAAE;AAAb,GAAf,CAAV,EACC,4BAAC,oBAAD;AAAS,IAAA,OAAO,EAAGH;AAAnB,KAA+BC,WAA/B,CADD,EAEC,4BAAC,gBAAD,QAAW,mBAAUJ,0BAAV,CAAX,CAFD,CADD;AAMA;;AAED,MAAMO,WAAW,GAAG,wBAAc,CAAEC,QAAF,EAAY;AAAEC,EAAAA,QAAF;AAAYZ,EAAAA;AAAZ,CAAZ,KAA0C;AAC3E,QAAM;AAAEa,IAAAA;AAAF,MAAmBF,QAAQ,CAAEG,kBAAF,CAAjC;AACA,SAAO;AACNb,IAAAA,aAAa,GAAG;AACfY,MAAAA,YAAY,CACXD,QADW,EAEX,yBAAa,WAAb,EAA0B;AACzBG,QAAAA,OAAO,EAAEf,UAAU,CAACG;AADK,OAA1B,CAFW,CAAZ;AAMA;;AARK,GAAP;AAUA,CAZmB,EAYfJ,mBAZe,CAApB;eAceW,W","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport { RawHTML } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\nimport { getBlockType, createBlock } from '@wordpress/blocks';\nimport { withDispatch } from '@wordpress/data';\nimport {\n\tWarning,\n\tuseBlockProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { safeHTML } from '@wordpress/dom';\n\nfunction MissingBlockWarning( { attributes, convertToHTML } ) {\n\tconst { originalName, originalUndelimitedContent } = attributes;\n\tconst hasContent = !! originalUndelimitedContent;\n\tconst hasHTMLBlock = getBlockType( 'core/html' );\n\n\tconst actions = [];\n\tlet messageHTML;\n\tif ( hasContent && hasHTMLBlock ) {\n\t\tmessageHTML = sprintf(\n\t\t\t/* translators: %s: block name */\n\t\t\t__(\n\t\t\t\t'Your site doesn’t include support for the \"%s\" block. You can leave this block intact, convert its content to a Custom HTML block, or remove it entirely.'\n\t\t\t),\n\t\t\toriginalName\n\t\t);\n\t\tactions.push(\n\t\t\t<Button key=\"convert\" onClick={ convertToHTML } variant=\"primary\">\n\t\t\t\t{ __( 'Keep as HTML' ) }\n\t\t\t</Button>\n\t\t);\n\t} else {\n\t\tmessageHTML = sprintf(\n\t\t\t/* translators: %s: block name */\n\t\t\t__(\n\t\t\t\t'Your site doesn’t include support for the \"%s\" block. You can leave this block intact or remove it entirely.'\n\t\t\t),\n\t\t\toriginalName\n\t\t);\n\t}\n\n\treturn (\n\t\t<div { ...useBlockProps( { className: 'has-warning' } ) }>\n\t\t\t<Warning actions={ actions }>{ messageHTML }</Warning>\n\t\t\t<RawHTML>{ safeHTML( originalUndelimitedContent ) }</RawHTML>\n\t\t</div>\n\t);\n}\n\nconst MissingEdit = withDispatch( ( dispatch, { clientId, attributes } ) => {\n\tconst { replaceBlock } = dispatch( blockEditorStore );\n\treturn {\n\t\tconvertToHTML() {\n\t\t\treplaceBlock(\n\t\t\t\tclientId,\n\t\t\t\tcreateBlock( 'core/html', {\n\t\t\t\t\tcontent: attributes.originalUndelimitedContent,\n\t\t\t\t} )\n\t\t\t);\n\t\t},\n\t};\n} )( MissingBlockWarning );\n\nexport default MissingEdit;\n"]}