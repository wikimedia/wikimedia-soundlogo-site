{"version":3,"sources":["@wordpress/block-library/src/query/edit/query-placeholder.js"],"names":["QueryPlaceholder","clientId","name","attributes","setAttributes","blockType","defaultVariation","scopeVariations","allVariations","select","getBlockVariations","getBlockType","getDefaultBlockVariation","blocksStore","replaceInnerBlocks","blockEditorStore","blockProps","matchingVariation","icon","src","label","title","nextVariation","innerBlocks"],"mappings":";;;;;;;;;AAGA;;AACA;;AAMA;;AAVA;AACA;AACA;AAaA,MAAMA,gBAAgB,GAAG,CAAE;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,IAAZ;AAAkBC,EAAAA,UAAlB;AAA8BC,EAAAA;AAA9B,CAAF,KAAqD;AAAA;;AAC7E,QAAM;AACLC,IAAAA,SADK;AAELC,IAAAA,gBAFK;AAGLC,IAAAA,eAHK;AAILC,IAAAA;AAJK,MAKF,qBACDC,MAAF,IAAc;AACb,UAAM;AACLC,MAAAA,kBADK;AAELC,MAAAA,YAFK;AAGLC,MAAAA;AAHK,QAIFH,MAAM,CAAEI,aAAF,CAJV;AAMA,WAAO;AACNR,MAAAA,SAAS,EAAEM,YAAY,CAAET,IAAF,CADjB;AAENI,MAAAA,gBAAgB,EAAEM,wBAAwB,CAAEV,IAAF,EAAQ,OAAR,CAFpC;AAGNK,MAAAA,eAAe,EAAEG,kBAAkB,CAAER,IAAF,EAAQ,OAAR,CAH7B;AAINM,MAAAA,aAAa,EAAEE,kBAAkB,CAAER,IAAF;AAJ3B,KAAP;AAMA,GAdE,EAeH,CAAEA,IAAF,CAfG,CALJ;AAsBA,QAAM;AAAEY,IAAAA;AAAF,MAAyB,uBAAaC,kBAAb,CAA/B;AACA,QAAMC,UAAU,GAAG,iCAAnB;AACA,QAAMC,iBAAiB,GAAG,qDAAsBd,UAAtB,EAAkCK,aAAlC,CAA1B;AACA,QAAMU,IAAI,GAAG,CAAAD,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEC,IAAnB,MAA2Bb,SAA3B,aAA2BA,SAA3B,0CAA2BA,SAAS,CAAEa,IAAtC,oDAA2B,gBAAiBC,GAA5C,CAAb;AACA,QAAMC,KAAK,GAAG,CAAAH,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEI,KAAnB,MAA4BhB,SAA5B,aAA4BA,SAA5B,uBAA4BA,SAAS,CAAEgB,KAAvC,CAAd;AACA,SACC,mCAAUL,UAAV,EACC,4BAAC,+CAAD;AACC,IAAA,IAAI,EAAGE,IADR;AAEC,IAAA,KAAK,EAAGE,KAFT;AAGC,IAAA,UAAU,EAAGb,eAHd;AAIC,IAAA,QAAQ,EAAG,CAAEe,aAAa,GAAGhB,gBAAlB,KAAwC;AAClD,UAAKgB,aAAa,CAACnB,UAAnB,EAAgC;AAC/BC,QAAAA,aAAa,CAAEkB,aAAa,CAACnB,UAAhB,CAAb;AACA;;AACD,UAAKmB,aAAa,CAACC,WAAnB,EAAiC;AAChCT,QAAAA,kBAAkB,CACjBb,QADiB,EAEjB,iDACCqB,aAAa,CAACC,WADf,CAFiB,EAKjB,KALiB,CAAlB;AAOA;AACD;AAjBF,IADD,CADD;AAuBA,CAnDD;;eAqDevB,gB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tuseBlockProps,\n\t__experimentalBlockVariationPicker,\n\t__experimentalGetMatchingVariation as getMatchingVariation,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport {\n\tcreateBlocksFromInnerBlocksTemplate,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\n\nconst QueryPlaceholder = ( { clientId, name, attributes, setAttributes } ) => {\n\tconst {\n\t\tblockType,\n\t\tdefaultVariation,\n\t\tscopeVariations,\n\t\tallVariations,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockVariations,\n\t\t\t\tgetBlockType,\n\t\t\t\tgetDefaultBlockVariation,\n\t\t\t} = select( blocksStore );\n\n\t\t\treturn {\n\t\t\t\tblockType: getBlockType( name ),\n\t\t\t\tdefaultVariation: getDefaultBlockVariation( name, 'block' ),\n\t\t\t\tscopeVariations: getBlockVariations( name, 'block' ),\n\t\t\t\tallVariations: getBlockVariations( name ),\n\t\t\t};\n\t\t},\n\t\t[ name ]\n\t);\n\tconst { replaceInnerBlocks } = useDispatch( blockEditorStore );\n\tconst blockProps = useBlockProps();\n\tconst matchingVariation = getMatchingVariation( attributes, allVariations );\n\tconst icon = matchingVariation?.icon || blockType?.icon?.src;\n\tconst label = matchingVariation?.title || blockType?.title;\n\treturn (\n\t\t<div { ...blockProps }>\n\t\t\t<__experimentalBlockVariationPicker\n\t\t\t\ticon={ icon }\n\t\t\t\tlabel={ label }\n\t\t\t\tvariations={ scopeVariations }\n\t\t\t\tonSelect={ ( nextVariation = defaultVariation ) => {\n\t\t\t\t\tif ( nextVariation.attributes ) {\n\t\t\t\t\t\tsetAttributes( nextVariation.attributes );\n\t\t\t\t\t}\n\t\t\t\t\tif ( nextVariation.innerBlocks ) {\n\t\t\t\t\t\treplaceInnerBlocks(\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tcreateBlocksFromInnerBlocksTemplate(\n\t\t\t\t\t\t\t\tnextVariation.innerBlocks\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tfalse\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} }\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default QueryPlaceholder;\n"]}