"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.settings = exports.name = exports.metadata = void 0;

var _i18n = require("@wordpress/i18n");

var _icons = require("@wordpress/icons");

var _deprecated = _interopRequireDefault(require("./deprecated"));

var _edit = _interopRequireDefault(require("./edit"));

var _save = _interopRequireDefault(require("./save"));

var _transforms = _interopRequireDefault(require("./transforms"));

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const metadata = {
  apiVersion: 2,
  name: "core/quote",
  title: "Quote",
  category: "text",
  description: "Give quoted text visual emphasis. \"In quoting others, we cite ourselves.\" \u2014 Julio Cort\xE1zar",
  keywords: ["blockquote", "cite"],
  textdomain: "default",
  attributes: {
    value: {
      type: "string",
      source: "html",
      selector: "blockquote",
      multiline: "p",
      "default": "",
      __experimentalRole: "content"
    },
    citation: {
      type: "string",
      source: "html",
      selector: "cite",
      "default": "",
      __experimentalRole: "content"
    },
    align: {
      type: "string"
    }
  },
  supports: {
    anchor: true
  },
  styles: [{
    name: "default",
    label: "Default",
    isDefault: true
  }, {
    name: "large",
    label: "Large"
  }],
  editorStyle: "wp-block-quote-editor",
  style: "wp-block-quote"
};
exports.metadata = metadata;
const {
  name
} = metadata;
exports.name = name;
const settings = {
  icon: _icons.quote,
  example: {
    attributes: {
      value: '<p>' + (0, _i18n.__)('In quoting others, we cite ourselves.') + '</p>',
      citation: 'Julio Cort√°zar',
      className: 'is-style-large'
    }
  },
  transforms: _transforms.default,
  edit: _edit.default,
  save: _save.default,

  merge(attributes, {
    value,
    citation
  }) {
    // Quote citations cannot be merged. Pick the second one unless it's
    // empty.
    if (!citation) {
      citation = attributes.citation;
    }

    if (!value || value === '<p></p>') {
      return { ...attributes,
        citation
      };
    }

    return { ...attributes,
      value: attributes.value + value,
      citation
    };
  },

  deprecated: _deprecated.default
};
exports.settings = settings;
//# sourceMappingURL=index.js.map