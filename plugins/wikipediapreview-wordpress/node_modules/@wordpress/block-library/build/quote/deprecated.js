"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _blockEditor = require("@wordpress/block-editor");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */
const blockAttributes = {
  value: {
    type: 'string',
    source: 'html',
    selector: 'blockquote',
    multiline: 'p',
    default: ''
  },
  citation: {
    type: 'string',
    source: 'html',
    selector: 'cite',
    default: ''
  },
  align: {
    type: 'string'
  }
};
const deprecated = [{
  attributes: blockAttributes,

  save({
    attributes
  }) {
    const {
      align,
      value,
      citation
    } = attributes;
    return (0, _element.createElement)("blockquote", {
      style: {
        textAlign: align ? align : null
      }
    }, (0, _element.createElement)(_blockEditor.RichText.Content, {
      multiline: true,
      value: value
    }), !_blockEditor.RichText.isEmpty(citation) && (0, _element.createElement)(_blockEditor.RichText.Content, {
      tagName: "cite",
      value: citation
    }));
  }

}, {
  attributes: { ...blockAttributes,
    style: {
      type: 'number',
      default: 1
    }
  },

  migrate(attributes) {
    if (attributes.style === 2) {
      return { ...(0, _lodash.omit)(attributes, ['style']),
        className: attributes.className ? attributes.className + ' is-style-large' : 'is-style-large'
      };
    }

    return attributes;
  },

  save({
    attributes
  }) {
    const {
      align,
      value,
      citation,
      style
    } = attributes;
    return (0, _element.createElement)("blockquote", {
      className: style === 2 ? 'is-large' : '',
      style: {
        textAlign: align ? align : null
      }
    }, (0, _element.createElement)(_blockEditor.RichText.Content, {
      multiline: true,
      value: value
    }), !_blockEditor.RichText.isEmpty(citation) && (0, _element.createElement)(_blockEditor.RichText.Content, {
      tagName: "cite",
      value: citation
    }));
  }

}, {
  attributes: { ...blockAttributes,
    citation: {
      type: 'string',
      source: 'html',
      selector: 'footer',
      default: ''
    },
    style: {
      type: 'number',
      default: 1
    }
  },

  save({
    attributes
  }) {
    const {
      align,
      value,
      citation,
      style
    } = attributes;
    return (0, _element.createElement)("blockquote", {
      className: `blocks-quote-style-${style}`,
      style: {
        textAlign: align ? align : null
      }
    }, (0, _element.createElement)(_blockEditor.RichText.Content, {
      multiline: true,
      value: value
    }), !_blockEditor.RichText.isEmpty(citation) && (0, _element.createElement)(_blockEditor.RichText.Content, {
      tagName: "footer",
      value: citation
    }));
  }

}];
var _default = deprecated;
exports.default = _default;
//# sourceMappingURL=deprecated.js.map