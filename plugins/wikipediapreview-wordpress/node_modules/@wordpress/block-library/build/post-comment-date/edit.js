"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Edit;

var _element = require("@wordpress/element");

var _coreData = require("@wordpress/core-data");

var _date = require("@wordpress/date");

var _blockEditor = require("@wordpress/block-editor");

var _components = require("@wordpress/components");

var _i18n = require("@wordpress/i18n");

/**
 * WordPress dependencies
 */
function Edit({
  attributes,
  context,
  setAttributes
}) {
  const {
    className,
    format
  } = attributes;
  const {
    commentId
  } = context;
  const settings = (0, _date.__experimentalGetSettings)();
  const [siteDateFormat] = (0, _coreData.useEntityProp)('root', 'site', 'date_format');
  const [date] = (0, _coreData.useEntityProp)('root', 'comment', 'date', commentId);
  const formatOptions = Object.values(settings.formats).map(formatOption => ({
    key: formatOption,
    name: (0, _date.dateI18n)(formatOption, date)
  }));
  const resolvedFormat = format || siteDateFormat || settings.formats.date;
  const blockProps = (0, _blockEditor.useBlockProps)({
    className
  });
  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)(_blockEditor.InspectorControls, null, (0, _element.createElement)(_components.PanelBody, {
    title: (0, _i18n.__)('Format settings')
  }, (0, _element.createElement)(_components.CustomSelectControl, {
    hideLabelFromVision: true,
    label: (0, _i18n.__)('Date Format'),
    options: formatOptions,
    onChange: ({
      selectedItem
    }) => setAttributes({
      format: selectedItem.key
    }),
    value: formatOptions.find(option => option.key === resolvedFormat)
  }))), (0, _element.createElement)("div", blockProps, (0, _element.createElement)("time", {
    dateTime: (0, _date.dateI18n)('c', date)
  }, (0, _date.dateI18n)(resolvedFormat, date))));
}
//# sourceMappingURL=edit.js.map