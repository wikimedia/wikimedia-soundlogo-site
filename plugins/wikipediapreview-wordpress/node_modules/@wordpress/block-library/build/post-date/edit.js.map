{"version":3,"sources":["@wordpress/block-library/src/post-date/edit.js"],"names":["PostDateEdit","attributes","textAlign","format","isLink","context","postId","postType","queryId","setAttributes","isDescendentOfQueryLoop","siteFormat","date","setDate","settings","is12Hour","test","formats","time","toLowerCase","replace","split","reverse","join","formatOptions","Object","values","map","formatOption","key","name","resolvedFormat","blockProps","className","timeRef","postDate","event","preventDefault","nextAlign","anchorRef","current","isOpen","onToggle","openOnArrowDown","keyCode","DOWN","edit","selectedItem","find","option"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useEntityProp } from '@wordpress/core-data';\nimport { useRef } from '@wordpress/element';\nimport { __experimentalGetSettings, dateI18n } from '@wordpress/date';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tInspectorControls,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport {\n\tDropdown,\n\tToolbarGroup,\n\tToolbarButton,\n\tToggleControl,\n\tDateTimePicker,\n\tPanelBody,\n\tCustomSelectControl,\n} from '@wordpress/components';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { edit } from '@wordpress/icons';\nimport { DOWN } from '@wordpress/keycodes';\n\nexport default function PostDateEdit( {\n\tattributes: { textAlign, format, isLink },\n\tcontext: { postId, postType, queryId },\n\tsetAttributes,\n} ) {\n\tconst isDescendentOfQueryLoop = !! queryId;\n\tconst [ siteFormat ] = useEntityProp( 'root', 'site', 'date_format' );\n\tconst [ date, setDate ] = useEntityProp(\n\t\t'postType',\n\t\tpostType,\n\t\t'date',\n\t\tpostId\n\t);\n\tconst settings = __experimentalGetSettings();\n\t// To know if the current time format is a 12 hour time, look for \"a\".\n\t// Also make sure this \"a\" is not escaped by a \"/\".\n\tconst is12Hour = /a(?!\\\\)/i.test(\n\t\tsettings.formats.time\n\t\t\t.toLowerCase() // Test only for the lower case \"a\".\n\t\t\t.replace( /\\\\\\\\/g, '' ) // Replace \"//\" with empty strings.\n\t\t\t.split( '' )\n\t\t\t.reverse()\n\t\t\t.join( '' ) // Reverse the string and test for \"a\" not followed by a slash.\n\t);\n\tconst formatOptions = Object.values( settings.formats ).map(\n\t\t( formatOption ) => ( {\n\t\t\tkey: formatOption,\n\t\t\tname: dateI18n( formatOption, date ),\n\t\t} )\n\t);\n\tconst resolvedFormat = format || siteFormat || settings.formats.date;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tconst timeRef = useRef();\n\n\tlet postDate = date ? (\n\t\t<time dateTime={ dateI18n( 'c', date ) } ref={ timeRef }>\n\t\t\t{ dateI18n( resolvedFormat, date ) }\n\t\t</time>\n\t) : (\n\t\t__( 'No Date' )\n\t);\n\tif ( isLink && date ) {\n\t\tpostDate = (\n\t\t\t<a\n\t\t\t\thref=\"#post-date-pseudo-link\"\n\t\t\t\tonClick={ ( event ) => event.preventDefault() }\n\t\t\t>\n\t\t\t\t{ postDate }\n\t\t\t</a>\n\t\t);\n\t}\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\n\t\t\t\t{ date && ! isDescendentOfQueryLoop && (\n\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t<Dropdown\n\t\t\t\t\t\t\tpopoverProps={ { anchorRef: timeRef.current } }\n\t\t\t\t\t\t\trenderContent={ () => (\n\t\t\t\t\t\t\t\t<DateTimePicker\n\t\t\t\t\t\t\t\t\tcurrentDate={ date }\n\t\t\t\t\t\t\t\t\tonChange={ setDate }\n\t\t\t\t\t\t\t\t\tis12Hour={ is12Hour }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\trenderToggle={ ( { isOpen, onToggle } ) => {\n\t\t\t\t\t\t\t\tconst openOnArrowDown = ( event ) => {\n\t\t\t\t\t\t\t\t\tif ( ! isOpen && event.keyCode === DOWN ) {\n\t\t\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\t\t\tonToggle();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\t\t\taria-expanded={ isOpen }\n\t\t\t\t\t\t\t\t\t\ticon={ edit }\n\t\t\t\t\t\t\t\t\t\ttitle={ __( 'Change Date' ) }\n\t\t\t\t\t\t\t\t\t\tonClick={ onToggle }\n\t\t\t\t\t\t\t\t\t\tonKeyDown={ openOnArrowDown }\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t) }\n\t\t\t</BlockControls>\n\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'Format settings' ) }>\n\t\t\t\t\t<CustomSelectControl\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\tlabel={ __( 'Date Format' ) }\n\t\t\t\t\t\toptions={ formatOptions }\n\t\t\t\t\t\tonChange={ ( { selectedItem } ) =>\n\t\t\t\t\t\t\tsetAttributes( {\n\t\t\t\t\t\t\t\tformat: selectedItem.key,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalue={ formatOptions.find(\n\t\t\t\t\t\t\t( option ) => option.key === resolvedFormat\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={ __( 'Link settings' ) }>\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel={ sprintf(\n\t\t\t\t\t\t\t// translators: %s: Name of the post type e.g: \"post\".\n\t\t\t\t\t\t\t__( 'Link to %s' ),\n\t\t\t\t\t\t\tpostType\n\t\t\t\t\t\t) }\n\t\t\t\t\t\tonChange={ () => setAttributes( { isLink: ! isLink } ) }\n\t\t\t\t\t\tchecked={ isLink }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...blockProps }>{ postDate }</div>\n\t\t</>\n\t);\n}\n"]}