{"version":3,"sources":["@wordpress/block-library/src/preformatted/transforms.js"],"names":["transforms","from","type","blocks","transform","content","anchor","isMatch","node","nodeName","children","length","firstChild","schema","phrasingContentSchema","pre","to","attributes"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;AAGA,MAAMA,UAAU,GAAG;AAClBC,EAAAA,IAAI,EAAE,CACL;AACCC,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,MAAM,EAAE,CAAE,WAAF,EAAe,gBAAf,CAFT;AAGCC,IAAAA,SAAS,EAAE,CAAE;AAAEC,MAAAA,OAAF;AAAWC,MAAAA;AAAX,KAAF,KACV,yBAAa,mBAAb,EAAkC;AACjCD,MAAAA,OADiC;AAEjCC,MAAAA;AAFiC,KAAlC;AAJF,GADK,EAUL;AACCJ,IAAAA,IAAI,EAAE,KADP;AAECK,IAAAA,OAAO,EAAIC,IAAF,IACRA,IAAI,CAACC,QAAL,KAAkB,KAAlB,IACA,EACCD,IAAI,CAACE,QAAL,CAAcC,MAAd,KAAyB,CAAzB,IACAH,IAAI,CAACI,UAAL,CAAgBH,QAAhB,KAA6B,MAF9B,CAJF;AAQCI,IAAAA,MAAM,EAAE,CAAE;AAAEC,MAAAA;AAAF,KAAF,MAAmC;AAC1CC,MAAAA,GAAG,EAAE;AACJL,QAAAA,QAAQ,EAAEI;AADN;AADqC,KAAnC;AART,GAVK,CADY;AA0BlBE,EAAAA,EAAE,EAAE,CACH;AACCd,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,MAAM,EAAE,CAAE,gBAAF,CAFT;AAGCC,IAAAA,SAAS,EAAIa,UAAF,IACV,yBAAa,gBAAb,EAA+BA,UAA/B;AAJF,GADG,EAOH;AACCf,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,MAAM,EAAE,CAAE,WAAF,CAFT;AAGCC,IAAAA,SAAS,EAAIa,UAAF,IAAkB,yBAAa,WAAb,EAA0BA,UAA1B;AAH9B,GAPG;AA1Bc,CAAnB;eAyCejB,U","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/code', 'core/paragraph' ],\n\t\t\ttransform: ( { content, anchor } ) =>\n\t\t\t\tcreateBlock( 'core/preformatted', {\n\t\t\t\t\tcontent,\n\t\t\t\t\tanchor,\n\t\t\t\t} ),\n\t\t},\n\t\t{\n\t\t\ttype: 'raw',\n\t\t\tisMatch: ( node ) =>\n\t\t\t\tnode.nodeName === 'PRE' &&\n\t\t\t\t! (\n\t\t\t\t\tnode.children.length === 1 &&\n\t\t\t\t\tnode.firstChild.nodeName === 'CODE'\n\t\t\t\t),\n\t\t\tschema: ( { phrasingContentSchema } ) => ( {\n\t\t\t\tpre: {\n\t\t\t\t\tchildren: phrasingContentSchema,\n\t\t\t\t},\n\t\t\t} ),\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( attributes ) =>\n\t\t\t\tcreateBlock( 'core/paragraph', attributes ),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/code' ],\n\t\t\ttransform: ( attributes ) => createBlock( 'core/code', attributes ),\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}