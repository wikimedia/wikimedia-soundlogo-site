"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = GalleryEditWrapper;

var _element = require("@wordpress/element");

var _blockEditor = require("@wordpress/block-editor");

var _data = require("@wordpress/data");

var _edit = _interopRequireDefault(require("./edit"));

var _edit2 = _interopRequireDefault(require("./v1/edit"));

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/*
 * Using a wrapper around the logic to load the edit for v1 of Gallery block
 * or the refactored version with InnerBlocks. This is to prevent conditional
 * use of hooks lint errors if adding this logic to the top of the edit component.
 */
function GalleryEditWrapper(props) {
  var _attributes$ids, _attributes$images;

  const {
    attributes,
    clientId
  } = props;
  const innerBlockImages = (0, _data.useSelect)(select => {
    var _select$getBlock;

    return (_select$getBlock = select(_blockEditor.store).getBlock(clientId)) === null || _select$getBlock === void 0 ? void 0 : _select$getBlock.innerBlocks;
  }, [clientId]);

  const __unstableGalleryWithImageBlocks = (0, _data.useSelect)(select => {
    const settings = select(_blockEditor.store).getSettings();
    return settings.__unstableGalleryWithImageBlocks;
  }, []); // This logic is used to infer version information from content with higher
  // precedence than the flag. New galleries (and existing empty galleries) will
  // honor the flag.


  const hasNewVersionContent = !!(innerBlockImages !== null && innerBlockImages !== void 0 && innerBlockImages.length);
  const hasOldVersionContent = 0 < (attributes === null || attributes === void 0 ? void 0 : (_attributes$ids = attributes.ids) === null || _attributes$ids === void 0 ? void 0 : _attributes$ids.length) || 0 < (attributes === null || attributes === void 0 ? void 0 : (_attributes$images = attributes.images) === null || _attributes$images === void 0 ? void 0 : _attributes$images.length);

  if (hasOldVersionContent || !hasNewVersionContent && !__unstableGalleryWithImageBlocks) {
    return (0, _element.createElement)(_edit2.default, props);
  }

  return (0, _element.createElement)(_edit.default, props);
}
//# sourceMappingURL=edit-wrapper.js.map