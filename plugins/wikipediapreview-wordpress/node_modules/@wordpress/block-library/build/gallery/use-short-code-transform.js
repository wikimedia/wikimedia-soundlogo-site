"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = useShortCodeTransform;

var _lodash = require("lodash");

var _data = require("@wordpress/data");

var _coreData = require("@wordpress/core-data");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Shortcode transforms don't currently have a tranform method and so can't use a selector to
 * retrieve the data for each image being transformer, so this selector handle this post transformation.
 *
 * @param {Array} shortCodeTransforms An array of image data passed from the shortcode transform.
 *
 * @return {Array} An array of extended image data objects for each of the shortcode transform images.
 */
function useShortCodeTransform(shortCodeTransforms) {
  const newImageData = (0, _data.useSelect)(select => {
    if (!shortCodeTransforms || shortCodeTransforms.length === 0) {
      return;
    }

    const getMedia = select(_coreData.store).getMedia;
    return shortCodeTransforms.map(image => {
      const imageData = getMedia(image.id);

      if (imageData) {
        return {
          id: imageData.id,
          type: 'image',
          url: imageData.source_url,
          mime: imageData.mime_type,
          alt: imageData.alt_text,
          link: imageData.link
        };
      }

      return undefined;
    });
  }, [shortCodeTransforms]);

  if (!newImageData) {
    return;
  }

  if ((0, _lodash.every)(newImageData, img => img && img.url)) {
    return newImageData;
  }
}
//# sourceMappingURL=use-short-code-transform.js.map