import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __experimentalListView as ListView, store as blockEditorStore } from '@wordpress/block-editor';
import { useSelect } from '@wordpress/data';
import { useRef, useEffect, useState } from '@wordpress/element';
export default function BlockNavigationList({
  clientId,
  __experimentalFeatures
}) {
  const blocks = useSelect(select => select(blockEditorStore).__unstableGetClientIdsTree(clientId), [clientId]);
  const listViewRef = useRef();
  const [minHeight, setMinHeight] = useState(300);
  useEffect(() => {
    var _listViewRef$current$, _listViewRef$current;

    setMinHeight((_listViewRef$current$ = listViewRef === null || listViewRef === void 0 ? void 0 : (_listViewRef$current = listViewRef.current) === null || _listViewRef$current === void 0 ? void 0 : _listViewRef$current.clientHeight) !== null && _listViewRef$current$ !== void 0 ? _listViewRef$current$ : 300);
  }, []);
  return createElement("div", {
    style: {
      minHeight
    }
  }, createElement(ListView, {
    ref: listViewRef,
    blocks: blocks,
    showBlockMovers: true,
    showNestedBlocks: true,
    __experimentalFeatures: __experimentalFeatures
  }));
}
//# sourceMappingURL=block-navigation-list.js.map