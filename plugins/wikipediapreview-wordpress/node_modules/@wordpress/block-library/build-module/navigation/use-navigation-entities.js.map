{"version":3,"sources":["@wordpress/block-library/src/navigation/use-navigation-entities.js"],"names":["useSelect","store","coreStore","useNavigationEntities","menuId","usePageEntities","useMenuEntities","useMenuItemEntities","menus","isResolvingMenus","hasResolvedMenus","select","getMenus","isResolving","hasFinishedResolution","menusParameters","per_page","hasMenus","length","menuItems","hasResolvedMenuItems","getMenuItems","hasSelectedMenu","undefined","menuItemsParameters","pages","isResolvingPages","hasResolvedPages","getEntityRecords","pagesParameters","parent","order","orderby","hasPages"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * @typedef {Object} NavigationEntitiesData\n * @property {Array|undefined} pages                - a collection of WP Post entity objects of post type \"Page\".\n * @property {boolean}         isResolvingPages     - indicates whether the request to fetch pages is currently resolving.\n * @property {boolean}         hasResolvedPages     - indicates whether the request to fetch pages has finished resolving.\n * @property {Array|undefined} menus                - a collection of Menu entity objects.\n * @property {boolean}         isResolvingMenus     - indicates whether the request to fetch menus is currently resolving.\n * @property {boolean}         hasResolvedMenus     - indicates whether the request to fetch menus has finished resolving.\n * @property {Array|undefined} menusItems           - a collection of Menu Item entity objects for the current menuId.\n * @property {boolean}         hasResolvedMenuItems - indicates whether the request to fetch menuItems has finished resolving.\n * @property {boolean}         hasPages             - indicates whether there is currently any data for pages.\n * @property {boolean}         hasMenus             - indicates whether there is currently any data for menus.\n */\n\n/**\n * Manages fetching and resolution state for all entities required\n * for the Navigation block.\n *\n * @param {number} menuId the menu for which to retrieve menuItem data.\n * @return { NavigationEntitiesData } the entity data.\n */\nexport default function useNavigationEntities( menuId ) {\n\treturn {\n\t\t...usePageEntities(),\n\t\t...useMenuEntities(),\n\t\t...useMenuItemEntities( menuId ),\n\t};\n}\n\nfunction useMenuEntities() {\n\tconst { menus, isResolvingMenus, hasResolvedMenus } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMenus, isResolving, hasFinishedResolution } = select(\n\t\t\t\tcoreStore\n\t\t\t);\n\n\t\t\tconst menusParameters = [ { per_page: -1 } ];\n\n\t\t\treturn {\n\t\t\t\tmenus: getMenus( ...menusParameters ),\n\t\t\t\tisResolvingMenus: isResolving( 'getMenus', menusParameters ),\n\t\t\t\thasResolvedMenus: hasFinishedResolution(\n\t\t\t\t\t'getMenus',\n\t\t\t\t\tmenusParameters\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\treturn {\n\t\tmenus,\n\t\tisResolvingMenus,\n\t\thasResolvedMenus,\n\t\thasMenus: !! ( hasResolvedMenus && menus?.length ),\n\t};\n}\n\nfunction useMenuItemEntities( menuId ) {\n\tconst { menuItems, hasResolvedMenuItems } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getMenuItems, hasFinishedResolution } = select( coreStore );\n\n\t\t\tconst hasSelectedMenu = menuId !== undefined;\n\t\t\tconst menuItemsParameters = hasSelectedMenu\n\t\t\t\t? [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmenus: menuId,\n\t\t\t\t\t\t\tper_page: -1,\n\t\t\t\t\t\t},\n\t\t\t\t  ]\n\t\t\t\t: undefined;\n\n\t\t\treturn {\n\t\t\t\tmenuItems: hasSelectedMenu\n\t\t\t\t\t? getMenuItems( ...menuItemsParameters )\n\t\t\t\t\t: undefined,\n\t\t\t\thasResolvedMenuItems: hasSelectedMenu\n\t\t\t\t\t? hasFinishedResolution(\n\t\t\t\t\t\t\t'getMenuItems',\n\t\t\t\t\t\t\tmenuItemsParameters\n\t\t\t\t\t  )\n\t\t\t\t\t: false,\n\t\t\t};\n\t\t},\n\t\t[ menuId ]\n\t);\n\n\treturn {\n\t\tmenuItems,\n\t\thasResolvedMenuItems,\n\t};\n}\n\nfunction usePageEntities() {\n\tconst { pages, isResolvingPages, hasResolvedPages } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetEntityRecords,\n\t\t\t\tisResolving,\n\t\t\t\thasFinishedResolution,\n\t\t\t} = select( coreStore );\n\n\t\t\tconst pagesParameters = [\n\t\t\t\t'postType',\n\t\t\t\t'page',\n\t\t\t\t{\n\t\t\t\t\tparent: 0,\n\t\t\t\t\torder: 'asc',\n\t\t\t\t\torderby: 'id',\n\t\t\t\t\tper_page: -1,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\treturn {\n\t\t\t\tpages: getEntityRecords( ...pagesParameters ) || null,\n\t\t\t\tisResolvingPages: isResolving(\n\t\t\t\t\t'getEntityRecords',\n\t\t\t\t\tpagesParameters\n\t\t\t\t),\n\t\t\t\thasResolvedPages: hasFinishedResolution(\n\t\t\t\t\t'getEntityRecords',\n\t\t\t\t\tpagesParameters\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\treturn {\n\t\tpages,\n\t\tisResolvingPages,\n\t\thasResolvedPages,\n\t\thasPages: !! ( hasResolvedPages && pages?.length ),\n\t};\n}\n"]}