{"version":3,"sources":["@wordpress/block-library/src/post-comments/edit.js"],"names":["classnames","useSelect","AlignmentControl","BlockControls","Warning","useBlockProps","__","RawHTML","store","coreStore","PostCommentsDisplay","postId","select","comments","getEntityRecords","post","length","map","comment","id","content","rendered","PostCommentsEdit","attributes","setAttributes","context","postType","textAlign","blockProps","className","nextAlign"],"mappings":";;AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;AACA;AACA;;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SACCC,gBADD,EAECC,aAFD,EAGCC,OAHD,EAICC,aAJD,QAKO,yBALP;AAMA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,KAAK,IAAIC,SAAlB,QAAmC,sBAAnC;;AAEA,SAASC,mBAAT,CAA8B;AAAEC,EAAAA;AAAF,CAA9B,EAA2C;AAC1C,SAAOV,SAAS,CACbW,MAAF,IAAc;AACb,UAAMC,QAAQ,GAAGD,MAAM,CAAEH,SAAF,CAAN,CAAoBK,gBAApB,CAChB,MADgB,EAEhB,SAFgB,EAGhB;AACCC,MAAAA,IAAI,EAAEJ;AADP,KAHgB,CAAjB,CADa,CAQb;;AACA,WAAOE,QAAQ,IAAIA,QAAQ,CAACG,MAArB,GACJH,QAAQ,CAACI,GAAT,CAAgBC,OAAF,IACd,cAAC,OAAD;AACC,MAAA,SAAS,EAAC,iCADX;AAEC,MAAA,GAAG,EAAGA,OAAO,CAACC;AAFf,OAIGD,OAAO,CAACE,OAAR,CAAgBC,QAJnB,CADA,CADI,GASJf,EAAE,CAAE,cAAF,CATL;AAUA,GApBc,EAqBf,CAAEK,MAAF,CArBe,CAAhB;AAuBA;;AAED,eAAe,SAASW,gBAAT,CAA2B;AACzCC,EAAAA,UADyC;AAEzCC,EAAAA,aAFyC;AAGzCC,EAAAA;AAHyC,CAA3B,EAIX;AACH,QAAM;AAAEC,IAAAA,QAAF;AAAYf,IAAAA;AAAZ,MAAuBc,OAA7B;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAgBJ,UAAtB;AACA,QAAMK,UAAU,GAAGvB,aAAa,CAAE;AACjCwB,IAAAA,SAAS,EAAE7B,UAAU,CAAE;AACtB,OAAG,kBAAkB2B,SAAW,EAAhC,GAAqCA;AADf,KAAF;AADY,GAAF,CAAhC;;AAMA,MAAK,CAAED,QAAF,IAAc,CAAEf,MAArB,EAA8B;AAC7B,WACC,qBAAUiB,UAAV,EACC,cAAC,OAAD,QACGtB,EAAE,CAAE,qCAAF,CADL,CADD,CADD;AAOA;;AAED,SACC,8BACC,cAAC,aAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,cAAC,gBAAD;AACC,IAAA,KAAK,EAAGqB,SADT;AAEC,IAAA,QAAQ,EAAKG,SAAF,IAAiB;AAC3BN,MAAAA,aAAa,CAAE;AAAEG,QAAAA,SAAS,EAAEG;AAAb,OAAF,CAAb;AACA;AAJF,IADD,CADD,EAUC,qBAAUF,UAAV,EACC,cAAC,mBAAD;AAAqB,IAAA,MAAM,EAAGjB;AAA9B,IADD,CAVD,CADD;AAgBA","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tWarning,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\nimport { __ } from '@wordpress/i18n';\nimport { RawHTML } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\nfunction PostCommentsDisplay( { postId } ) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tconst comments = select( coreStore ).getEntityRecords(\n\t\t\t\t'root',\n\t\t\t\t'comment',\n\t\t\t\t{\n\t\t\t\t\tpost: postId,\n\t\t\t\t}\n\t\t\t);\n\t\t\t// TODO: \"No Comments\" placeholder should be editable.\n\t\t\treturn comments && comments.length\n\t\t\t\t? comments.map( ( comment ) => (\n\t\t\t\t\t\t<RawHTML\n\t\t\t\t\t\t\tclassName=\"wp-block-post-comments__comment\"\n\t\t\t\t\t\t\tkey={ comment.id }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{ comment.content.rendered }\n\t\t\t\t\t\t</RawHTML>\n\t\t\t\t  ) )\n\t\t\t\t: __( 'No comments.' );\n\t\t},\n\t\t[ postId ]\n\t);\n}\n\nexport default function PostCommentsEdit( {\n\tattributes,\n\tsetAttributes,\n\tcontext,\n} ) {\n\tconst { postType, postId } = context;\n\tconst { textAlign } = attributes;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t} );\n\n\tif ( ! postType || ! postId ) {\n\t\treturn (\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<Warning>\n\t\t\t\t\t{ __( 'Post comments block: no post found.' ) }\n\t\t\t\t</Warning>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\n\t\t\t<div { ...blockProps }>\n\t\t\t\t<PostCommentsDisplay postId={ postId } />\n\t\t\t</div>\n\t\t</>\n\t);\n}\n"]}