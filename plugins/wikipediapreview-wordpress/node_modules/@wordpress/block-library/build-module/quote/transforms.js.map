{"version":3,"sources":["@wordpress/block-library/src/quote/transforms.js"],"names":["createBlock","create","join","split","toHTMLString","transforms","from","type","isMultiBlock","blocks","transform","attributes","value","map","content","html","multilineTag","anchor","citation","prefix","isMatch","node","isParagraphOrSingleCite","hasCitation","child","nodeName","Array","childNodes","every","schema","phrasingContentSchema","blockquote","children","p","cite","to","paragraphs","push","piece","length","attrs","pieces","headingBlock","quotePieces","slice","quoteBlock"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { create, join, split, toHTMLString } from '@wordpress/rich-text';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( attributes ) => {\n\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: join(\n\t\t\t\t\t\t\tattributes.map( ( { content } ) =>\n\t\t\t\t\t\t\t\tcreate( { html: content } )\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t\tanchor: attributes.anchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { content, anchor } ) => {\n\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t\tanchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\ttransform: ( { value, citation, anchor } ) =>\n\t\t\t\tcreateBlock( 'core/quote', {\n\t\t\t\t\tvalue,\n\t\t\t\t\tcitation,\n\t\t\t\t\tanchor,\n\t\t\t\t} ),\n\t\t},\n\t\t{\n\t\t\ttype: 'prefix',\n\t\t\tprefix: '>',\n\t\t\ttransform: ( content ) => {\n\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'raw',\n\t\t\tisMatch: ( node ) => {\n\t\t\t\tconst isParagraphOrSingleCite = ( () => {\n\t\t\t\t\tlet hasCitation = false;\n\t\t\t\t\treturn ( child ) => {\n\t\t\t\t\t\t// Child is a paragraph.\n\t\t\t\t\t\tif ( child.nodeName === 'P' ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Child is a cite and no other cite child exists before it.\n\t\t\t\t\t\tif ( ! hasCitation && child.nodeName === 'CITE' ) {\n\t\t\t\t\t\t\thasCitation = true;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t} )();\n\t\t\t\treturn (\n\t\t\t\t\tnode.nodeName === 'BLOCKQUOTE' &&\n\t\t\t\t\t// The quote block can only handle multiline paragraph\n\t\t\t\t\t// content with an optional cite child.\n\t\t\t\t\tArray.from( node.childNodes ).every(\n\t\t\t\t\t\tisParagraphOrSingleCite\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\t\t\tschema: ( { phrasingContentSchema } ) => ( {\n\t\t\t\tblockquote: {\n\t\t\t\t\tchildren: {\n\t\t\t\t\t\tp: {\n\t\t\t\t\t\t\tchildren: phrasingContentSchema,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcite: {\n\t\t\t\t\t\t\tchildren: phrasingContentSchema,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} ),\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( { value, citation } ) => {\n\t\t\t\tconst paragraphs = [];\n\t\t\t\tif ( value && value !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\t...split(\n\t\t\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t).map( ( piece ) =>\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ( citation && citation !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tif ( paragraphs.length === 0 ) {\n\t\t\t\t\treturn createBlock( 'core/paragraph', {\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn paragraphs;\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { value, citation, ...attrs } ) => {\n\t\t\t\t// If there is no quote content, use the citation as the\n\t\t\t\t// content of the resulting heading. A nonexistent citation\n\t\t\t\t// will result in an empty heading.\n\t\t\t\tif ( value === '<p></p>' ) {\n\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\tconst pieces = split(\n\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t'\\u2028'\n\t\t\t\t);\n\n\t\t\t\tconst headingBlock = createBlock( 'core/heading', {\n\t\t\t\t\tcontent: toHTMLString( { value: pieces[ 0 ] } ),\n\t\t\t\t} );\n\n\t\t\t\tif ( ! citation && pieces.length === 1 ) {\n\t\t\t\t\treturn headingBlock;\n\t\t\t\t}\n\n\t\t\t\tconst quotePieces = pieces.slice( 1 );\n\n\t\t\t\tconst quoteBlock = createBlock( 'core/quote', {\n\t\t\t\t\t...attrs,\n\t\t\t\t\tcitation,\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: quotePieces.length\n\t\t\t\t\t\t\t? join( pieces.slice( 1 ), '\\u2028' )\n\t\t\t\t\t\t\t: create(),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t} );\n\n\t\t\t\treturn [ headingBlock, quoteBlock ];\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\ttransform: ( { value, citation, anchor } ) => {\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue,\n\t\t\t\t\tcitation,\n\t\t\t\t\tanchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}