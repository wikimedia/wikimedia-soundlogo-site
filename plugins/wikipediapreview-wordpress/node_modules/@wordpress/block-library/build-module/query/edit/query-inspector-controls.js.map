{"version":3,"sources":["@wordpress/block-library/src/query/edit/query-inspector-controls.js"],"names":["debounce","PanelBody","QueryControls","TextControl","FormTokenField","SelectControl","RangeControl","ToggleControl","Notice","__","InspectorControls","useSelect","useEffect","useState","useCallback","store","coreStore","getTermsInfo","usePostTypes","MAX_FETCHED_TERMS","stickyOptions","label","value","getTermIdByTermValue","termsMappedByName","termValue","termId","id","termValueLower","toLocaleLowerCase","term","QueryInspectorControls","attributes","query","displayLayout","setQuery","setDisplayLayout","order","orderBy","author","selectedAuthorId","postType","sticky","inherit","showCategories","setShowCategories","showTags","setShowTags","showSticky","setShowSticky","postTypesTaxonomiesMap","postTypesSelectOptions","authorList","categories","tags","select","getEntityRecords","termsQuery","per_page","_categories","_tags","postTypeTaxonomies","includes","onPostTypeChange","newValue","updateQuery","categoryIds","tagIds","onTermsChange","terms","queryProperty","newTermValues","termIds","Array","from","reduce","accumulator","mapByName","add","Set","onCategoriesChange","onTagsChange","querySearch","setQuerySearch","search","onChangeDebounced","cancel","getExistingTermsFormTokenValue","taxonomy","termsMapper","category","queryProp","post_tag","requestedTerm","mapById","push","name","type","columns","Math","max","length","names","undefined"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { debounce } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tPanelBody,\n\tQueryControls,\n\tTextControl,\n\tFormTokenField,\n\tSelectControl,\n\tRangeControl,\n\tToggleControl,\n\tNotice,\n} from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { useEffect, useState, useCallback } from '@wordpress/element';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { getTermsInfo, usePostTypes } from '../utils';\nimport { MAX_FETCHED_TERMS } from '../constants';\n\nconst stickyOptions = [\n\t{ label: __( 'Include' ), value: '' },\n\t{ label: __( 'Exclude' ), value: 'exclude' },\n\t{ label: __( 'Only' ), value: 'only' },\n];\n\n// Helper function to get the term id based on user input in terms `FormTokenField`.\nconst getTermIdByTermValue = ( termsMappedByName, termValue ) => {\n\t// First we check for exact match by `term.id` or case sensitive `term.name` match.\n\tconst termId = termValue?.id || termsMappedByName[ termValue ]?.id;\n\tif ( termId ) return termId;\n\t/**\n\t * Here we make an extra check for entered terms in a non case sensitive way,\n\t * to match user expectations, due to `FormTokenField` behaviour that shows\n\t * suggestions which are case insensitive.\n\t *\n\t * Although WP tries to discourage users to add terms with the same name (case insensitive),\n\t * it's still possible if you manually change the name, as long as the terms have different slugs.\n\t * In this edge case we always apply the first match from the terms list.\n\t */\n\tconst termValueLower = termValue.toLocaleLowerCase();\n\tfor ( const term in termsMappedByName ) {\n\t\tif ( term.toLocaleLowerCase() === termValueLower ) {\n\t\t\treturn termsMappedByName[ term ].id;\n\t\t}\n\t}\n};\n\nexport default function QueryInspectorControls( {\n\tattributes: { query, displayLayout },\n\tsetQuery,\n\tsetDisplayLayout,\n} ) {\n\tconst {\n\t\torder,\n\t\torderBy,\n\t\tauthor: selectedAuthorId,\n\t\tpostType,\n\t\tsticky,\n\t\tinherit,\n\t} = query;\n\tconst [ showCategories, setShowCategories ] = useState( true );\n\tconst [ showTags, setShowTags ] = useState( true );\n\tconst [ showSticky, setShowSticky ] = useState( postType === 'post' );\n\tconst { postTypesTaxonomiesMap, postTypesSelectOptions } = usePostTypes();\n\tconst { authorList, categories, tags } = useSelect( ( select ) => {\n\t\tconst { getEntityRecords } = select( coreStore );\n\t\tconst termsQuery = { per_page: MAX_FETCHED_TERMS };\n\t\tconst _categories = getEntityRecords(\n\t\t\t'taxonomy',\n\t\t\t'category',\n\t\t\ttermsQuery\n\t\t);\n\t\tconst _tags = getEntityRecords( 'taxonomy', 'post_tag', termsQuery );\n\t\treturn {\n\t\t\tcategories: getTermsInfo( _categories ),\n\t\t\ttags: getTermsInfo( _tags ),\n\t\t\tauthorList: getEntityRecords( 'root', 'user', {\n\t\t\t\tper_page: -1,\n\t\t\t} ),\n\t\t};\n\t}, [] );\n\tuseEffect( () => {\n\t\tif ( ! postTypesTaxonomiesMap ) return;\n\t\tconst postTypeTaxonomies = postTypesTaxonomiesMap[ postType ];\n\t\tsetShowCategories( postTypeTaxonomies.includes( 'category' ) );\n\t\tsetShowTags( postTypeTaxonomies.includes( 'post_tag' ) );\n\t}, [ postType, postTypesTaxonomiesMap ] );\n\tuseEffect( () => {\n\t\tsetShowSticky( postType === 'post' );\n\t}, [ postType ] );\n\tconst onPostTypeChange = ( newValue ) => {\n\t\tconst updateQuery = { postType: newValue };\n\t\tif ( ! postTypesTaxonomiesMap[ newValue ].includes( 'category' ) ) {\n\t\t\tupdateQuery.categoryIds = [];\n\t\t}\n\t\tif ( ! postTypesTaxonomiesMap[ newValue ].includes( 'post_tag' ) ) {\n\t\t\tupdateQuery.tagIds = [];\n\t\t}\n\t\tif ( newValue !== 'post' ) {\n\t\t\tupdateQuery.sticky = '';\n\t\t}\n\t\tsetQuery( updateQuery );\n\t};\n\t// Handles categories and tags changes.\n\tconst onTermsChange = ( terms, queryProperty ) => ( newTermValues ) => {\n\t\tconst termIds = Array.from(\n\t\t\tnewTermValues.reduce( ( accumulator, termValue ) => {\n\t\t\t\tconst termId = getTermIdByTermValue(\n\t\t\t\t\tterms.mapByName,\n\t\t\t\t\ttermValue\n\t\t\t\t);\n\t\t\t\tif ( termId ) accumulator.add( termId );\n\t\t\t\treturn accumulator;\n\t\t\t}, new Set() )\n\t\t);\n\t\tsetQuery( { [ queryProperty ]: termIds } );\n\t};\n\tconst onCategoriesChange = onTermsChange( categories, 'categoryIds' );\n\tconst onTagsChange = onTermsChange( tags, 'tagIds' );\n\n\tconst [ querySearch, setQuerySearch ] = useState( query.search );\n\tconst onChangeDebounced = useCallback(\n\t\tdebounce( () => {\n\t\t\tif ( query.search !== querySearch ) {\n\t\t\t\tsetQuery( { search: querySearch } );\n\t\t\t}\n\t\t}, 250 ),\n\t\t[ querySearch, query.search ]\n\t);\n\n\tuseEffect( () => {\n\t\tonChangeDebounced();\n\t\treturn onChangeDebounced.cancel;\n\t}, [ querySearch, onChangeDebounced ] );\n\n\t// Returns only the existing term ids (categories/tags) in proper\n\t// format to be used in `FormTokenField`. This prevents the component\n\t// from crashing in the editor, when non existing term ids were provided.\n\tconst getExistingTermsFormTokenValue = ( taxonomy ) => {\n\t\tconst termsMapper = {\n\t\t\tcategory: {\n\t\t\t\tqueryProp: 'categoryIds',\n\t\t\t\tterms: categories,\n\t\t\t},\n\t\t\tpost_tag: {\n\t\t\t\tqueryProp: 'tagIds',\n\t\t\t\tterms: tags,\n\t\t\t},\n\t\t};\n\t\tconst requestedTerm = termsMapper[ taxonomy ];\n\t\treturn ( query[ requestedTerm.queryProp ] || [] ).reduce(\n\t\t\t( accumulator, termId ) => {\n\t\t\t\tconst term = requestedTerm.terms.mapById[ termId ];\n\t\t\t\tif ( term ) {\n\t\t\t\t\taccumulator.push( {\n\t\t\t\t\t\tid: termId,\n\t\t\t\t\t\tvalue: term.name,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn accumulator;\n\t\t\t},\n\t\t\t[]\n\t\t);\n\t};\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelBody title={ __( 'Settings' ) }>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={ __( 'Inherit query from template' ) }\n\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t'Toggle to use the global query context that is set with the current template, such as an archive or search. Disable to customize the settings independently.'\n\t\t\t\t\t) }\n\t\t\t\t\tchecked={ !! inherit }\n\t\t\t\t\tonChange={ ( value ) => setQuery( { inherit: !! value } ) }\n\t\t\t\t/>\n\t\t\t\t{ ! inherit && (\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\toptions={ postTypesSelectOptions }\n\t\t\t\t\t\tvalue={ postType }\n\t\t\t\t\t\tlabel={ __( 'Post Type' ) }\n\t\t\t\t\t\tonChange={ onPostTypeChange }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'WordPress contains different types of content and they are divided into collections called \"Post Types\". By default there are a few different ones such as blog posts and pages, but plugins could add more.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ displayLayout?.type === 'flex' && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\tvalue={ displayLayout.columns }\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tsetDisplayLayout( { columns: value } )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ 2 }\n\t\t\t\t\t\t\tmax={ Math.max( 6, displayLayout.columns ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{ displayLayout.columns > 6 && (\n\t\t\t\t\t\t\t<Notice status=\"warning\" isDismissible={ false }>\n\t\t\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t\t\t'This column count exceeds the recommended amount and may cause visual breakage.'\n\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t</Notice>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</>\n\t\t\t\t) }\n\t\t\t\t{ ! inherit && (\n\t\t\t\t\t<QueryControls\n\t\t\t\t\t\t{ ...{ order, orderBy } }\n\t\t\t\t\t\tonOrderChange={ ( value ) =>\n\t\t\t\t\t\t\tsetQuery( { order: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t\tonOrderByChange={ ( value ) =>\n\t\t\t\t\t\t\tsetQuery( { orderBy: value } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t{ showSticky && (\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel={ __( 'Sticky posts' ) }\n\t\t\t\t\t\toptions={ stickyOptions }\n\t\t\t\t\t\tvalue={ sticky }\n\t\t\t\t\t\tonChange={ ( value ) => setQuery( { sticky: value } ) }\n\t\t\t\t\t\thelp={ __(\n\t\t\t\t\t\t\t'Blog posts can be \"stickied\", a feature that places them at the top of the front page of posts, keeping it there until new sticky posts are published.'\n\t\t\t\t\t\t) }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</PanelBody>\n\t\t\t{ ! inherit && (\n\t\t\t\t<PanelBody title={ __( 'Filters' ) }>\n\t\t\t\t\t{ showCategories && categories?.terms?.length > 0 && (\n\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\tlabel={ __( 'Categories' ) }\n\t\t\t\t\t\t\tvalue={ getExistingTermsFormTokenValue(\n\t\t\t\t\t\t\t\t'category'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tsuggestions={ categories.names }\n\t\t\t\t\t\t\tonChange={ onCategoriesChange }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t{ showTags && tags?.terms?.length > 0 && (\n\t\t\t\t\t\t<FormTokenField\n\t\t\t\t\t\t\tlabel={ __( 'Tags' ) }\n\t\t\t\t\t\t\tvalue={ getExistingTermsFormTokenValue(\n\t\t\t\t\t\t\t\t'post_tag'\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\tsuggestions={ tags.names }\n\t\t\t\t\t\t\tonChange={ onTagsChange }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t\t<QueryControls\n\t\t\t\t\t\t{ ...{ selectedAuthorId, authorList } }\n\t\t\t\t\t\tonAuthorChange={ ( value ) =>\n\t\t\t\t\t\t\tsetQuery( {\n\t\t\t\t\t\t\t\tauthor: value !== '' ? +value : undefined,\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={ __( 'Keyword' ) }\n\t\t\t\t\t\tvalue={ querySearch }\n\t\t\t\t\t\tonChange={ setQuerySearch }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t) }\n\t\t</InspectorControls>\n\t);\n}\n"]}