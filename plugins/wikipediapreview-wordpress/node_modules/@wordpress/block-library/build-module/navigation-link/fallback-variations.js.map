{"version":3,"sources":["@wordpress/block-library/src/navigation-link/fallback-variations.js"],"names":["__","category","categoryIcon","page","pageIcon","postTitle","postIcon","tag","tagIcon","fallbackVariations","name","isDefault","title","description","attributes","icon","type","kind","forEach","variation","isActive","blockAttributes","variationAttributes"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,EAAT,QAAmB,iBAAnB;AACA,SACCC,QAAQ,IAAIC,YADb,EAECC,IAAI,IAAIC,QAFT,EAGCC,SAAS,IAAIC,QAHd,EAICC,GAAG,IAAIC,OAJR,QAKO,kBALP,C,CAOA;AACA;AACA;AACA;;AACA,MAAMC,kBAAkB,GAAG,CAC1B;AACCC,EAAAA,IAAI,EAAE,MADP;AAECC,EAAAA,SAAS,EAAE,IAFZ;AAGCC,EAAAA,KAAK,EAAEZ,EAAE,CAAE,aAAF,CAHV;AAICa,EAAAA,WAAW,EAAEb,EAAE,CAAE,yBAAF,CAJhB;AAKCc,EAAAA,UAAU,EAAE;AALb,CAD0B,EAQ1B;AACCJ,EAAAA,IAAI,EAAE,MADP;AAECK,EAAAA,IAAI,EAAET,QAFP;AAGCM,EAAAA,KAAK,EAAEZ,EAAE,CAAE,WAAF,CAHV;AAICa,EAAAA,WAAW,EAAEb,EAAE,CAAE,mBAAF,CAJhB;AAKCc,EAAAA,UAAU,EAAE;AAAEE,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB;AALb,CAR0B,EAe1B;AACCP,EAAAA,IAAI,EAAE,MADP;AAECK,EAAAA,IAAI,EAAEX,QAFP;AAGCQ,EAAAA,KAAK,EAAEZ,EAAE,CAAE,WAAF,CAHV;AAICa,EAAAA,WAAW,EAAEb,EAAE,CAAE,mBAAF,CAJhB;AAKCc,EAAAA,UAAU,EAAE;AAAEE,IAAAA,IAAI,EAAE,MAAR;AAAgBC,IAAAA,IAAI,EAAE;AAAtB;AALb,CAf0B,EAsB1B;AACCP,EAAAA,IAAI,EAAE,UADP;AAECK,EAAAA,IAAI,EAAEb,YAFP;AAGCU,EAAAA,KAAK,EAAEZ,EAAE,CAAE,eAAF,CAHV;AAICa,EAAAA,WAAW,EAAEb,EAAE,CAAE,uBAAF,CAJhB;AAKCc,EAAAA,UAAU,EAAE;AAAEE,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,IAAI,EAAE;AAA1B;AALb,CAtB0B,EA6B1B;AACCP,EAAAA,IAAI,EAAE,KADP;AAECK,EAAAA,IAAI,EAAEP,OAFP;AAGCI,EAAAA,KAAK,EAAEZ,EAAE,CAAE,UAAF,CAHV;AAICa,EAAAA,WAAW,EAAEb,EAAE,CAAE,kBAAF,CAJhB;AAKCc,EAAAA,UAAU,EAAE;AAAEE,IAAAA,IAAI,EAAE,KAAR;AAAeC,IAAAA,IAAI,EAAE;AAArB;AALb,CA7B0B,CAA3B;AAsCA;AACA;AACA;AACA;AACA;;AACAR,kBAAkB,CAACS,OAAnB,CAA8BC,SAAF,IAAiB;AAC5C,MAAKA,SAAS,CAACC,QAAf,EAA0B;;AAC1BD,EAAAA,SAAS,CAACC,QAAV,GAAqB,CAAEC,eAAF,EAAmBC,mBAAnB,KACpBD,eAAe,CAACL,IAAhB,KAAyBM,mBAAmB,CAACN,IAD9C;AAEA,CAJD;AAMA,eAAeP,kBAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tcategory as categoryIcon,\n\tpage as pageIcon,\n\tpostTitle as postIcon,\n\ttag as tagIcon,\n} from '@wordpress/icons';\n\n// FALLBACK: this is only used when the server does not understand the variations property in the\n// register_block_type call. see navigation-link/index.php.\n// Delete this file when supported WP ranges understand the `variations` property when passed to\n// register_block_type in index.php\nconst fallbackVariations = [\n\t{\n\t\tname: 'link',\n\t\tisDefault: true,\n\t\ttitle: __( 'Custom Link' ),\n\t\tdescription: __( 'A link to a custom URL.' ),\n\t\tattributes: {},\n\t},\n\t{\n\t\tname: 'post',\n\t\ticon: postIcon,\n\t\ttitle: __( 'Post Link' ),\n\t\tdescription: __( 'A link to a post.' ),\n\t\tattributes: { type: 'post', kind: 'post-type' },\n\t},\n\t{\n\t\tname: 'page',\n\t\ticon: pageIcon,\n\t\ttitle: __( 'Page Link' ),\n\t\tdescription: __( 'A link to a page.' ),\n\t\tattributes: { type: 'page', kind: 'post-type' },\n\t},\n\t{\n\t\tname: 'category',\n\t\ticon: categoryIcon,\n\t\ttitle: __( 'Category Link' ),\n\t\tdescription: __( 'A link to a category.' ),\n\t\tattributes: { type: 'category', kind: 'taxonomy' },\n\t},\n\t{\n\t\tname: 'tag',\n\t\ticon: tagIcon,\n\t\ttitle: __( 'Tag Link' ),\n\t\tdescription: __( 'A link to a tag.' ),\n\t\tattributes: { type: 'tag', kind: 'taxonomy' },\n\t},\n];\n\n/**\n * Add `isActive` function to all `navigation link` variations, if not defined.\n * `isActive` function is used to find a variation match from a created\n *  Block by providing its attributes.\n */\nfallbackVariations.forEach( ( variation ) => {\n\tif ( variation.isActive ) return;\n\tvariation.isActive = ( blockAttributes, variationAttributes ) =>\n\t\tblockAttributes.type === variationAttributes.type;\n} );\n\nexport default fallbackVariations;\n"]}