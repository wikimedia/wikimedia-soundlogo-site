{"version":3,"sources":["@wordpress/block-library/src/post-template/edit.js"],"names":["classnames","useState","useMemo","useSelect","__","BlockContextProvider","BlockPreview","useBlockProps","__experimentalUseInnerBlocksProps","useInnerBlocksProps","store","blockEditorStore","Spinner","coreStore","TEMPLATE","PostTemplateEdit","clientId","context","query","perPage","offset","categoryIds","postType","tagIds","order","orderBy","author","search","exclude","sticky","inherit","queryContext","page","templateSlug","displayLayout","type","layoutType","columns","activeBlockContext","setActiveBlockContext","posts","blocks","select","getEntityRecords","getBlocks","categories","tags","orderby","per_page","length","startsWith","replace","blockContexts","map","post","postId","id","hasLayoutFlex","blockProps","className","innerBlocksProps","template","blockContext"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useMemo } from '@wordpress/element';\nimport { useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tBlockContextProvider,\n\tBlockPreview,\n\tuseBlockProps,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { Spinner } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\nconst TEMPLATE = [\n\t[ 'core/post-title' ],\n\t[ 'core/post-date' ],\n\t[ 'core/post-excerpt' ],\n];\nexport default function PostTemplateEdit( {\n\tclientId,\n\tcontext: {\n\t\tquery: {\n\t\t\tperPage,\n\t\t\toffset,\n\t\t\tcategoryIds = [],\n\t\t\tpostType,\n\t\t\ttagIds = [],\n\t\t\torder,\n\t\t\torderBy,\n\t\t\tauthor,\n\t\t\tsearch,\n\t\t\texclude,\n\t\t\tsticky,\n\t\t\tinherit,\n\t\t} = {},\n\t\tqueryContext = [ { page: 1 } ],\n\t\ttemplateSlug,\n\t\tdisplayLayout: { type: layoutType = 'flex', columns = 1 } = {},\n\t},\n} ) {\n\tconst [ { page } ] = queryContext;\n\tconst [ activeBlockContext, setActiveBlockContext ] = useState();\n\n\tconst { posts, blocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getEntityRecords } = select( coreStore );\n\t\t\tconst { getBlocks } = select( blockEditorStore );\n\t\t\tconst query = {\n\t\t\t\toffset: perPage ? perPage * ( page - 1 ) + offset : 0,\n\t\t\t\tcategories: categoryIds,\n\t\t\t\ttags: tagIds,\n\t\t\t\torder,\n\t\t\t\torderby: orderBy,\n\t\t\t};\n\t\t\tif ( perPage ) {\n\t\t\t\tquery.per_page = perPage;\n\t\t\t}\n\t\t\tif ( author ) {\n\t\t\t\tquery.author = author;\n\t\t\t}\n\t\t\tif ( search ) {\n\t\t\t\tquery.search = search;\n\t\t\t}\n\t\t\tif ( exclude?.length ) {\n\t\t\t\tquery.exclude = exclude;\n\t\t\t}\n\t\t\t// If sticky is not set, it will return all posts in the results.\n\t\t\t// If sticky is set to `only`, it will limit the results to sticky posts only.\n\t\t\t// If it is anything else, it will exclude sticky posts from results. For the record the value stored is `exclude`.\n\t\t\tif ( sticky ) {\n\t\t\t\tquery.sticky = sticky === 'only';\n\t\t\t}\n\t\t\t// If `inherit` is truthy, adjust conditionally the query to create a better preview.\n\t\t\tif ( inherit ) {\n\t\t\t\t// Change the post-type if needed.\n\t\t\t\tif ( templateSlug?.startsWith( 'archive-' ) ) {\n\t\t\t\t\tquery.postType = templateSlug.replace( 'archive-', '' );\n\t\t\t\t\tpostType = query.postType;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tposts: getEntityRecords( 'postType', postType, query ),\n\t\t\t\tblocks: getBlocks( clientId ),\n\t\t\t};\n\t\t},\n\t\t[\n\t\t\tperPage,\n\t\t\tpage,\n\t\t\toffset,\n\t\t\tcategoryIds,\n\t\t\ttagIds,\n\t\t\torder,\n\t\t\torderBy,\n\t\t\tclientId,\n\t\t\tauthor,\n\t\t\tsearch,\n\t\t\tpostType,\n\t\t\texclude,\n\t\t\tsticky,\n\t\t\tinherit,\n\t\t\ttemplateSlug,\n\t\t]\n\t);\n\n\tconst blockContexts = useMemo(\n\t\t() =>\n\t\t\tposts?.map( ( post ) => ( {\n\t\t\t\tpostType: post.type,\n\t\t\t\tpostId: post.id,\n\t\t\t} ) ),\n\t\t[ posts ]\n\t);\n\tconst hasLayoutFlex = layoutType === 'flex' && columns > 1;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t'is-flex-container': hasLayoutFlex,\n\t\t\t[ `columns-${ columns }` ]: hasLayoutFlex,\n\t\t} ),\n\t} );\n\tconst innerBlocksProps = useInnerBlocksProps( {}, { template: TEMPLATE } );\n\n\tif ( ! posts ) {\n\t\treturn (\n\t\t\t<p { ...blockProps }>\n\t\t\t\t<Spinner />\n\t\t\t</p>\n\t\t);\n\t}\n\n\tif ( ! posts.length ) {\n\t\treturn <p { ...blockProps }> { __( 'No results found.' ) }</p>;\n\t}\n\n\treturn (\n\t\t<ul { ...blockProps }>\n\t\t\t{ blockContexts &&\n\t\t\t\tblockContexts.map( ( blockContext ) => (\n\t\t\t\t\t<BlockContextProvider\n\t\t\t\t\t\tkey={ blockContext.postId }\n\t\t\t\t\t\tvalue={ blockContext }\n\t\t\t\t\t>\n\t\t\t\t\t\t{ blockContext ===\n\t\t\t\t\t\t( activeBlockContext || blockContexts[ 0 ] ) ? (\n\t\t\t\t\t\t\t<li { ...innerBlocksProps } />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t<BlockPreview\n\t\t\t\t\t\t\t\t\tblocks={ blocks }\n\t\t\t\t\t\t\t\t\t__experimentalLive\n\t\t\t\t\t\t\t\t\t__experimentalOnClick={ () =>\n\t\t\t\t\t\t\t\t\t\tsetActiveBlockContext( blockContext )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</BlockContextProvider>\n\t\t\t\t) ) }\n\t\t</ul>\n\t);\n}\n"]}