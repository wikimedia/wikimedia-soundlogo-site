{"version":3,"sources":["@wordpress/block-library/src/template-part/edit/inner-blocks.js"],"names":["useEntityBlockEditor","InnerBlocks","__experimentalUseInnerBlocksProps","useInnerBlocksProps","__experimentalBlockContentOverlay","BlockContentOverlay","useSetting","store","blockEditorStore","useSelect","TemplatePartInnerBlocks","postId","id","hasInnerBlocks","layout","tagName","blockProps","clientId","themeSupportsLayout","select","getSettings","supportsLayout","defaultLayout","usedLayout","inherit","blocks","onInput","onChange","innerBlocksProps","value","renderAppender","undefined","ButtonBlockAppender","__experimentalLayout"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,oBAAT,QAAqC,sBAArC;AACA,SACCC,WADD,EAECC,iCAAiC,IAAIC,mBAFtC,EAGCC,iCAAiC,IAAIC,mBAHtC,EAICC,UAJD,EAKCC,KAAK,IAAIC,gBALV,QAMO,yBANP;AAOA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,eAAe,SAASC,uBAAT,CAAkC;AAChDC,EAAAA,MAAM,EAAEC,EADwC;AAEhDC,EAAAA,cAFgD;AAGhDC,EAAAA,MAHgD;AAIhDC,EAAAA,OAJgD;AAKhDC,EAAAA,UALgD;AAMhDC,EAAAA;AANgD,CAAlC,EAOX;AACH,QAAMC,mBAAmB,GAAGT,SAAS,CAAIU,MAAF,IAAc;AAAA;;AACpD,UAAM;AAAEC,MAAAA;AAAF,QAAkBD,MAAM,CAAEX,gBAAF,CAA9B;AACA,2BAAOY,WAAW,EAAlB,iDAAO,aAAeC,cAAtB;AACA,GAHoC,EAGlC,EAHkC,CAArC;AAIA,QAAMC,aAAa,GAAGhB,UAAU,CAAE,QAAF,CAAV,IAA0B,EAAhD;AACA,QAAMiB,UAAU,GAAG,CAAC,CAAET,MAAH,IAAaA,MAAM,CAACU,OAApB,GAA8BF,aAA9B,GAA8CR,MAAjE;AAEA,QAAM,CAAEW,MAAF,EAAUC,OAAV,EAAmBC,QAAnB,IAAgC3B,oBAAoB,CACzD,UADyD,EAEzD,kBAFyD,EAGzD;AAAEY,IAAAA;AAAF,GAHyD,CAA1D;AAMA,QAAMgB,gBAAgB,GAAGzB,mBAAmB,CAAEa,UAAF,EAAc;AACzDa,IAAAA,KAAK,EAAEJ,MADkD;AAEzDC,IAAAA,OAFyD;AAGzDC,IAAAA,QAHyD;AAIzDG,IAAAA,cAAc,EAAEjB,cAAc,GAC3BkB,SAD2B,GAE3B9B,WAAW,CAAC+B,mBAN0C;AAOzDC,IAAAA,oBAAoB,EAAEf,mBAAmB,GAAGK,UAAH,GAAgBQ;AAPA,GAAd,CAA5C;AAUA,SACC,cAAC,mBAAD;AACC,IAAA,QAAQ,EAAGd,QADZ;AAEC,IAAA,OAAO,EAAGF,OAFX;AAGC,IAAA,YAAY,EAAGa;AAHhB,IADD;AAOA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useEntityBlockEditor } from '@wordpress/core-data';\nimport {\n\tInnerBlocks,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n\t__experimentalBlockContentOverlay as BlockContentOverlay,\n\tuseSetting,\n\tstore as blockEditorStore,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\nexport default function TemplatePartInnerBlocks( {\n\tpostId: id,\n\thasInnerBlocks,\n\tlayout,\n\ttagName,\n\tblockProps,\n\tclientId,\n} ) {\n\tconst themeSupportsLayout = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn getSettings()?.supportsLayout;\n\t}, [] );\n\tconst defaultLayout = useSetting( 'layout' ) || {};\n\tconst usedLayout = !! layout && layout.inherit ? defaultLayout : layout;\n\n\tconst [ blocks, onInput, onChange ] = useEntityBlockEditor(\n\t\t'postType',\n\t\t'wp_template_part',\n\t\t{ id }\n\t);\n\n\tconst innerBlocksProps = useInnerBlocksProps( blockProps, {\n\t\tvalue: blocks,\n\t\tonInput,\n\t\tonChange,\n\t\trenderAppender: hasInnerBlocks\n\t\t\t? undefined\n\t\t\t: InnerBlocks.ButtonBlockAppender,\n\t\t__experimentalLayout: themeSupportsLayout ? usedLayout : undefined,\n\t} );\n\n\treturn (\n\t\t<BlockContentOverlay\n\t\t\tclientId={ clientId }\n\t\t\ttagName={ tagName }\n\t\t\twrapperProps={ innerBlocksProps }\n\t\t/>\n\t);\n}\n"]}