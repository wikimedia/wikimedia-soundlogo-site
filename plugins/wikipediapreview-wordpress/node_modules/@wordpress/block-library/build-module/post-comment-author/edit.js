import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { __ } from '@wordpress/i18n';
import { useSelect } from '@wordpress/data';
import { useBlockProps } from '@wordpress/block-editor';
import { store as coreStore } from '@wordpress/core-data';
export default function Edit({
  attributes,
  context
}) {
  const {
    className
  } = attributes;
  const {
    commentId
  } = context;
  const displayName = useSelect(select => {
    const {
      getEntityRecord
    } = select(coreStore);
    const comment = getEntityRecord('root', 'comment', commentId);
    const authorName = comment === null || comment === void 0 ? void 0 : comment.author_name; // eslint-disable-line camelcase

    if (comment && !authorName) {
      var _user$name;

      const user = getEntityRecord('root', 'user', comment.author);
      return (_user$name = user === null || user === void 0 ? void 0 : user.name) !== null && _user$name !== void 0 ? _user$name : __('Anonymous');
    }

    return authorName !== null && authorName !== void 0 ? authorName : '';
  }, [commentId]);
  return createElement("div", useBlockProps(), createElement("p", {
    className: className
  }, displayName));
}
//# sourceMappingURL=edit.js.map