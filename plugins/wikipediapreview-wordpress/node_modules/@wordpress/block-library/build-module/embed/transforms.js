/**
 * WordPress dependencies
 */
import { createBlock } from '@wordpress/blocks';
/**
 * Internal dependencies
 */

const metadata = {
  apiVersion: 2,
  name: "core/embed",
  title: "Embed",
  category: "embed",
  description: "Add a block that displays content pulled from other sites, like Twitter or YouTube.",
  textdomain: "default",
  attributes: {
    url: {
      type: "string"
    },
    caption: {
      type: "string",
      source: "html",
      selector: "figcaption"
    },
    type: {
      type: "string"
    },
    providerNameSlug: {
      type: "string"
    },
    allowResponsive: {
      type: "boolean",
      "default": true
    },
    responsive: {
      type: "boolean",
      "default": false
    },
    previewable: {
      type: "boolean",
      "default": true
    }
  },
  supports: {
    align: true
  },
  editorStyle: "wp-block-embed-editor",
  style: "wp-block-embed"
};
const {
  name: EMBED_BLOCK
} = metadata;
/**
 * Default transforms for generic embeds.
 */

const transforms = {
  from: [{
    type: 'raw',
    isMatch: node => {
      var _node$textContent, _node$textContent$mat;

      return node.nodeName === 'P' && /^\s*(https?:\/\/\S+)\s*$/i.test(node.textContent) && ((_node$textContent = node.textContent) === null || _node$textContent === void 0 ? void 0 : (_node$textContent$mat = _node$textContent.match(/https/gi)) === null || _node$textContent$mat === void 0 ? void 0 : _node$textContent$mat.length) === 1;
    },
    transform: node => {
      return createBlock(EMBED_BLOCK, {
        url: node.textContent.trim()
      });
    }
  }],
  to: [{
    type: 'block',
    blocks: ['core/paragraph'],
    isMatch: ({
      url
    }) => !!url,
    transform: ({
      url,
      caption
    }) => {
      let value = `<a href="${url}">${url}</a>`;

      if (caption !== null && caption !== void 0 && caption.trim()) {
        value += `<br />${caption}`;
      }

      return createBlock('core/paragraph', {
        content: value
      });
    }
  }]
};
export default transforms;
//# sourceMappingURL=transforms.js.map