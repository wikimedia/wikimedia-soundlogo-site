{"version":3,"sources":["@wordpress/block-library/src/cover/transforms.js"],"names":["createBlock","IMAGE_BACKGROUND_TYPE","VIDEO_BACKGROUND_TYPE","transforms","from","type","blocks","transform","caption","url","alt","align","id","anchor","style","color","duotone","content","fontSize","src","backgroundType","isMatch","backgroundColor","gradient","background","innerBlocks","overlayColor","customOverlayColor","customGradient","to","title"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { IMAGE_BACKGROUND_TYPE, VIDEO_BACKGROUND_TYPE } from './shared';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/image' ],\n\t\t\ttransform: ( { caption, url, alt, align, id, anchor, style } ) =>\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/cover',\n\t\t\t\t\t{\n\t\t\t\t\t\turl,\n\t\t\t\t\t\talt,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t\tstyle: {\n\t\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\t\tduotone: style?.color?.duotone,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: caption,\n\t\t\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/video' ],\n\t\t\ttransform: ( { caption, src, align, id, anchor } ) =>\n\t\t\t\tcreateBlock(\n\t\t\t\t\t'core/cover',\n\t\t\t\t\t{\n\t\t\t\t\t\turl: src,\n\t\t\t\t\t\talign,\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tbackgroundType: VIDEO_BACKGROUND_TYPE,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t},\n\t\t\t\t\t[\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: caption,\n\t\t\t\t\t\t\tfontSize: 'large',\n\t\t\t\t\t\t} ),\n\t\t\t\t\t]\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/group' ],\n\t\t\tisMatch: ( { backgroundColor, gradient, style } ) => {\n\t\t\t\t/*\n\t\t\t\t * Make this transformation available only if the Group has background\n\t\t\t\t * or gradient set, because otherwise `Cover` block displays a Placeholder.\n\t\t\t\t *\n\t\t\t\t * This helps avoid arbitrary decisions about the Cover block's background\n\t\t\t\t * and user confusion about the existence of previous content.\n\t\t\t\t */\n\t\t\t\treturn (\n\t\t\t\t\tbackgroundColor ||\n\t\t\t\t\tstyle?.color?.background ||\n\t\t\t\t\tstyle?.color?.gradient ||\n\t\t\t\t\tgradient\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform: (\n\t\t\t\t{ align, anchor, backgroundColor, gradient, style },\n\t\t\t\tinnerBlocks\n\t\t\t) => {\n\t\t\t\treturn createBlock(\n\t\t\t\t\t'core/cover',\n\t\t\t\t\t{\n\t\t\t\t\t\talign,\n\t\t\t\t\t\tanchor,\n\t\t\t\t\t\toverlayColor: backgroundColor,\n\t\t\t\t\t\tcustomOverlayColor: style?.color?.background,\n\t\t\t\t\t\tgradient,\n\t\t\t\t\t\tcustomGradient: style?.color?.gradient,\n\t\t\t\t\t},\n\t\t\t\t\tinnerBlocks\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/image' ],\n\t\t\tisMatch: ( {\n\t\t\t\tbackgroundType,\n\t\t\t\turl,\n\t\t\t\toverlayColor,\n\t\t\t\tcustomOverlayColor,\n\t\t\t\tgradient,\n\t\t\t\tcustomGradient,\n\t\t\t} ) => {\n\t\t\t\tif ( url ) {\n\t\t\t\t\t// If a url exists the transform could happen if that URL represents an image background.\n\t\t\t\t\treturn backgroundType === IMAGE_BACKGROUND_TYPE;\n\t\t\t\t}\n\t\t\t\t// If a url is not set the transform could happen if the cover has no background color or gradient;\n\t\t\t\treturn (\n\t\t\t\t\t! overlayColor &&\n\t\t\t\t\t! customOverlayColor &&\n\t\t\t\t\t! gradient &&\n\t\t\t\t\t! customGradient\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform: ( { title, url, alt, align, id, anchor, style } ) =>\n\t\t\t\tcreateBlock( 'core/image', {\n\t\t\t\t\tcaption: title,\n\t\t\t\t\turl,\n\t\t\t\t\talt,\n\t\t\t\t\talign,\n\t\t\t\t\tid,\n\t\t\t\t\tanchor,\n\t\t\t\t\tstyle: {\n\t\t\t\t\t\tcolor: {\n\t\t\t\t\t\t\tduotone: style?.color?.duotone,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t} ),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/video' ],\n\t\t\tisMatch: ( {\n\t\t\t\tbackgroundType,\n\t\t\t\turl,\n\t\t\t\toverlayColor,\n\t\t\t\tcustomOverlayColor,\n\t\t\t\tgradient,\n\t\t\t\tcustomGradient,\n\t\t\t} ) => {\n\t\t\t\tif ( url ) {\n\t\t\t\t\t// If a url exists the transform could happen if that URL represents a video background.\n\t\t\t\t\treturn backgroundType === VIDEO_BACKGROUND_TYPE;\n\t\t\t\t}\n\t\t\t\t// If a url is not set the transform could happen if the cover has no background color or gradient;\n\t\t\t\treturn (\n\t\t\t\t\t! overlayColor &&\n\t\t\t\t\t! customOverlayColor &&\n\t\t\t\t\t! gradient &&\n\t\t\t\t\t! customGradient\n\t\t\t\t);\n\t\t\t},\n\t\t\ttransform: ( { title, url, align, id, anchor } ) =>\n\t\t\t\tcreateBlock( 'core/video', {\n\t\t\t\t\tcaption: title,\n\t\t\t\t\tsrc: url,\n\t\t\t\t\tid,\n\t\t\t\t\talign,\n\t\t\t\t\tanchor,\n\t\t\t\t} ),\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}