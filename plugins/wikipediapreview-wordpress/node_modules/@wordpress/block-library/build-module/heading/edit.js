import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement, Fragment } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { __ } from '@wordpress/i18n';
import { createBlock } from '@wordpress/blocks';
import { AlignmentControl, BlockControls, RichText, useBlockProps } from '@wordpress/block-editor';
/**
 * Internal dependencies
 */

import HeadingLevelDropdown from './heading-level-dropdown';

function HeadingEdit({
  attributes,
  setAttributes,
  mergeBlocks,
  onReplace,
  style,
  clientId
}) {
  const {
    textAlign,
    content,
    level,
    placeholder
  } = attributes;
  const tagName = 'h' + level;
  const blockProps = useBlockProps({
    className: classnames({
      [`has-text-align-${textAlign}`]: textAlign
    }),
    style
  });
  return createElement(Fragment, null, createElement(BlockControls, {
    group: "block"
  }, createElement(HeadingLevelDropdown, {
    selectedLevel: level,
    onChange: newLevel => setAttributes({
      level: newLevel
    })
  }), createElement(AlignmentControl, {
    value: textAlign,
    onChange: nextAlign => {
      setAttributes({
        textAlign: nextAlign
      });
    }
  })), createElement(RichText, _extends({
    identifier: "content",
    tagName: tagName,
    value: content,
    onChange: value => setAttributes({
      content: value
    }),
    onMerge: mergeBlocks,
    onSplit: (value, isOriginal) => {
      let block;

      if (isOriginal || value) {
        block = createBlock('core/heading', { ...attributes,
          content: value
        });
      } else {
        block = createBlock('core/paragraph');
      }

      if (isOriginal) {
        block.clientId = clientId;
      }

      return block;
    },
    onReplace: onReplace,
    onRemove: () => onReplace([]),
    "aria-label": __('Heading text'),
    placeholder: placeholder || __('Heading'),
    textAlign: textAlign
  }, blockProps)));
}

export default HeadingEdit;
//# sourceMappingURL=edit.js.map