{"version":3,"sources":["@wordpress/block-library/src/heading/edit.js"],"names":["classnames","__","createBlock","AlignmentControl","BlockControls","RichText","useBlockProps","HeadingLevelDropdown","HeadingEdit","attributes","setAttributes","mergeBlocks","onReplace","style","clientId","textAlign","content","level","placeholder","tagName","blockProps","className","newLevel","nextAlign","value","isOriginal","block"],"mappings":";;;AAAA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,YAAvB;AAEA;AACA;AACA;;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SACCC,gBADD,EAECC,aAFD,EAGCC,QAHD,EAICC,aAJD,QAKO,yBALP;AAOA;AACA;AACA;;AACA,OAAOC,oBAAP,MAAiC,0BAAjC;;AAEA,SAASC,WAAT,CAAsB;AACrBC,EAAAA,UADqB;AAErBC,EAAAA,aAFqB;AAGrBC,EAAAA,WAHqB;AAIrBC,EAAAA,SAJqB;AAKrBC,EAAAA,KALqB;AAMrBC,EAAAA;AANqB,CAAtB,EAOI;AACH,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA,KAAtB;AAA6BC,IAAAA;AAA7B,MAA6CT,UAAnD;AACA,QAAMU,OAAO,GAAG,MAAMF,KAAtB;AACA,QAAMG,UAAU,GAAGd,aAAa,CAAE;AACjCe,IAAAA,SAAS,EAAErB,UAAU,CAAE;AACtB,OAAG,kBAAkBe,SAAW,EAAhC,GAAqCA;AADf,KAAF,CADY;AAIjCF,IAAAA;AAJiC,GAAF,CAAhC;AAOA,SACC,8BACC,cAAC,aAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACC,cAAC,oBAAD;AACC,IAAA,aAAa,EAAGI,KADjB;AAEC,IAAA,QAAQ,EAAKK,QAAF,IACVZ,aAAa,CAAE;AAAEO,MAAAA,KAAK,EAAEK;AAAT,KAAF;AAHf,IADD,EAOC,cAAC,gBAAD;AACC,IAAA,KAAK,EAAGP,SADT;AAEC,IAAA,QAAQ,EAAKQ,SAAF,IAAiB;AAC3Bb,MAAAA,aAAa,CAAE;AAAEK,QAAAA,SAAS,EAAEQ;AAAb,OAAF,CAAb;AACA;AAJF,IAPD,CADD,EAeC,cAAC,QAAD;AACC,IAAA,UAAU,EAAC,SADZ;AAEC,IAAA,OAAO,EAAGJ,OAFX;AAGC,IAAA,KAAK,EAAGH,OAHT;AAIC,IAAA,QAAQ,EAAKQ,KAAF,IAAad,aAAa,CAAE;AAAEM,MAAAA,OAAO,EAAEQ;AAAX,KAAF,CAJtC;AAKC,IAAA,OAAO,EAAGb,WALX;AAMC,IAAA,OAAO,EAAG,CAAEa,KAAF,EAASC,UAAT,KAAyB;AAClC,UAAIC,KAAJ;;AAEA,UAAKD,UAAU,IAAID,KAAnB,EAA2B;AAC1BE,QAAAA,KAAK,GAAGxB,WAAW,CAAE,cAAF,EAAkB,EACpC,GAAGO,UADiC;AAEpCO,UAAAA,OAAO,EAAEQ;AAF2B,SAAlB,CAAnB;AAIA,OALD,MAKO;AACNE,QAAAA,KAAK,GAAGxB,WAAW,CAAE,gBAAF,CAAnB;AACA;;AAED,UAAKuB,UAAL,EAAkB;AACjBC,QAAAA,KAAK,CAACZ,QAAN,GAAiBA,QAAjB;AACA;;AAED,aAAOY,KAAP;AACA,KAvBF;AAwBC,IAAA,SAAS,EAAGd,SAxBb;AAyBC,IAAA,QAAQ,EAAG,MAAMA,SAAS,CAAE,EAAF,CAzB3B;AA0BC,kBAAaX,EAAE,CAAE,cAAF,CA1BhB;AA2BC,IAAA,WAAW,EAAGiB,WAAW,IAAIjB,EAAE,CAAE,SAAF,CA3BhC;AA4BC,IAAA,SAAS,EAAGc;AA5Bb,KA6BMK,UA7BN,EAfD,CADD;AAiDA;;AAED,eAAeZ,WAAf","sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { createBlock } from '@wordpress/blocks';\nimport {\n\tAlignmentControl,\n\tBlockControls,\n\tRichText,\n\tuseBlockProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport HeadingLevelDropdown from './heading-level-dropdown';\n\nfunction HeadingEdit( {\n\tattributes,\n\tsetAttributes,\n\tmergeBlocks,\n\tonReplace,\n\tstyle,\n\tclientId,\n} ) {\n\tconst { textAlign, content, level, placeholder } = attributes;\n\tconst tagName = 'h' + level;\n\tconst blockProps = useBlockProps( {\n\t\tclassName: classnames( {\n\t\t\t[ `has-text-align-${ textAlign }` ]: textAlign,\n\t\t} ),\n\t\tstyle,\n\t} );\n\n\treturn (\n\t\t<>\n\t\t\t<BlockControls group=\"block\">\n\t\t\t\t<HeadingLevelDropdown\n\t\t\t\t\tselectedLevel={ level }\n\t\t\t\t\tonChange={ ( newLevel ) =>\n\t\t\t\t\t\tsetAttributes( { level: newLevel } )\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t\t<AlignmentControl\n\t\t\t\t\tvalue={ textAlign }\n\t\t\t\t\tonChange={ ( nextAlign ) => {\n\t\t\t\t\t\tsetAttributes( { textAlign: nextAlign } );\n\t\t\t\t\t} }\n\t\t\t\t/>\n\t\t\t</BlockControls>\n\t\t\t<RichText\n\t\t\t\tidentifier=\"content\"\n\t\t\t\ttagName={ tagName }\n\t\t\t\tvalue={ content }\n\t\t\t\tonChange={ ( value ) => setAttributes( { content: value } ) }\n\t\t\t\tonMerge={ mergeBlocks }\n\t\t\t\tonSplit={ ( value, isOriginal ) => {\n\t\t\t\t\tlet block;\n\n\t\t\t\t\tif ( isOriginal || value ) {\n\t\t\t\t\t\tblock = createBlock( 'core/heading', {\n\t\t\t\t\t\t\t...attributes,\n\t\t\t\t\t\t\tcontent: value,\n\t\t\t\t\t\t} );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tblock = createBlock( 'core/paragraph' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isOriginal ) {\n\t\t\t\t\t\tblock.clientId = clientId;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn block;\n\t\t\t\t} }\n\t\t\t\tonReplace={ onReplace }\n\t\t\t\tonRemove={ () => onReplace( [] ) }\n\t\t\t\taria-label={ __( 'Heading text' ) }\n\t\t\t\tplaceholder={ placeholder || __( 'Heading' ) }\n\t\t\t\ttextAlign={ textAlign }\n\t\t\t\t{ ...blockProps }\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default HeadingEdit;\n"]}