{"version":3,"sources":["@wordpress/block-library/src/pullquote/transforms.js"],"names":["createBlock","create","join","split","toHTMLString","transforms","from","type","isMultiBlock","blocks","transform","attributes","value","map","content","html","multilineTag","anchor","to","citation","paragraphs","push","piece","length","attrs","pieces","headingBlock","quotePieces","slice","pullquoteBlock"],"mappings":"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","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock } from '@wordpress/blocks';\nimport { create, join, split, toHTMLString } from '@wordpress/rich-text';\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( attributes ) => {\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: join(\n\t\t\t\t\t\t\tattributes.map( ( { content } ) =>\n\t\t\t\t\t\t\t\tcreate( { html: content } )\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t\tanchor: attributes.anchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { content, anchor } ) => {\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue: `<p>${ content }</p>`,\n\t\t\t\t\tanchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( { value, citation } ) => {\n\t\t\t\tconst paragraphs = [];\n\t\t\t\tif ( value && value !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\t...split(\n\t\t\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t\t\t'\\u2028'\n\t\t\t\t\t\t).map( ( piece ) =>\n\t\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ( citation && citation !== '<p></p>' ) {\n\t\t\t\t\tparagraphs.push(\n\t\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tif ( paragraphs.length === 0 ) {\n\t\t\t\t\treturn createBlock( 'core/paragraph', {\n\t\t\t\t\t\tcontent: '',\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\treturn paragraphs;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { value, citation, ...attrs } ) => {\n\t\t\t\t// If there is no pullquote content, use the citation as the\n\t\t\t\t// content of the resulting heading. A nonexistent citation\n\t\t\t\t// will result in an empty heading.\n\t\t\t\tif ( value === '<p></p>' ) {\n\t\t\t\t\treturn createBlock( 'core/heading', {\n\t\t\t\t\t\tcontent: citation,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tconst pieces = split(\n\t\t\t\t\tcreate( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t'\\u2028'\n\t\t\t\t);\n\t\t\t\tconst headingBlock = createBlock( 'core/heading', {\n\t\t\t\t\tcontent: toHTMLString( { value: pieces[ 0 ] } ),\n\t\t\t\t} );\n\t\t\t\tif ( ! citation && pieces.length === 1 ) {\n\t\t\t\t\treturn headingBlock;\n\t\t\t\t}\n\t\t\t\tconst quotePieces = pieces.slice( 1 );\n\t\t\t\tconst pullquoteBlock = createBlock( 'core/pullquote', {\n\t\t\t\t\t...attrs,\n\t\t\t\t\tcitation,\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: quotePieces.length\n\t\t\t\t\t\t\t? join( pieces.slice( 1 ), '\\u2028' )\n\t\t\t\t\t\t\t: create(),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t} );\n\t\t\t\treturn [ headingBlock, pullquoteBlock ];\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}