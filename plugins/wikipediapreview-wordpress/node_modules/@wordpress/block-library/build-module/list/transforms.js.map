{"version":3,"sources":["@wordpress/block-library/src/list/transforms.js"],"names":["createBlock","getBlockAttributes","__UNSTABLE_LINE_SEPARATOR","create","join","replace","split","toHTMLString","getListContentSchema","phrasingContentSchema","listContentSchema","ul","ol","attributes","forEach","tag","children","li","transforms","from","type","isMultiBlock","blocks","transform","blockAttributes","values","value","map","content","html","length","multilineTag","anchor","selector","schema","args","node","ordered","nodeName","id","undefined","getAttribute","reversed","start","parseInt","isNaN","outerHTML","prefix","to","multilineWrapperTags","piece"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,WAAT,EAAsBC,kBAAtB,QAAgD,mBAAhD;AACA,SACCC,yBADD,EAECC,MAFD,EAGCC,IAHD,EAICC,OAJD,EAKCC,KALD,EAMCC,YAND,QAOO,sBAPP;;AASA,SAASC,oBAAT,CAA+B;AAAEC,EAAAA;AAAF,CAA/B,EAA2D;AAC1D,QAAMC,iBAAiB,GAAG,EACzB,GAAGD,qBADsB;AAEzBE,IAAAA,EAAE,EAAE,EAFqB;AAGzBC,IAAAA,EAAE,EAAE;AAAEC,MAAAA,UAAU,EAAE,CAAE,MAAF,EAAU,OAAV,EAAmB,UAAnB;AAAd;AAHqB,GAA1B,CAD0D,CAO1D;AACA;AACA;;AACA,GAAE,IAAF,EAAQ,IAAR,EAAeC,OAAf,CAA0BC,GAAF,IAAW;AAClCL,IAAAA,iBAAiB,CAAEK,GAAF,CAAjB,CAAyBC,QAAzB,GAAoC;AACnCC,MAAAA,EAAE,EAAE;AACHD,QAAAA,QAAQ,EAAEN;AADP;AAD+B,KAApC;AAKA,GAND;AAQA,SAAOA,iBAAP;AACA;;AAED,MAAMQ,UAAU,GAAG;AAClBC,EAAAA,IAAI,EAAE,CACL;AACCC,IAAAA,IAAI,EAAE,OADP;AAECC,IAAAA,YAAY,EAAE,IAFf;AAGCC,IAAAA,MAAM,EAAE,CAAE,gBAAF,EAAoB,cAApB,CAHT;AAICC,IAAAA,SAAS,EAAIC,eAAF,IAAuB;AACjC,aAAOxB,WAAW,CAAE,WAAF,EAAe;AAChCyB,QAAAA,MAAM,EAAElB,YAAY,CAAE;AACrBmB,UAAAA,KAAK,EAAEtB,IAAI,CACVoB,eAAe,CAACG,GAAhB,CAAqB,CAAE;AAAEC,YAAAA;AAAF,WAAF,KAAmB;AACvC,kBAAMF,KAAK,GAAGvB,MAAM,CAAE;AAAE0B,cAAAA,IAAI,EAAED;AAAR,aAAF,CAApB;;AAEA,gBAAKJ,eAAe,CAACM,MAAhB,GAAyB,CAA9B,EAAkC;AACjC,qBAAOJ,KAAP;AACA,aALsC,CAOvC;AACA;;;AACA,mBAAOrB,OAAO,CACbqB,KADa,EAEb,KAFa,EAGbxB,yBAHa,CAAd;AAKA,WAdD,CADU,EAgBVA,yBAhBU,CADU;AAmBrB6B,UAAAA,YAAY,EAAE;AAnBO,SAAF,CADY;AAsBhCC,QAAAA,MAAM,EAAER,eAAe,CAACQ;AAtBQ,OAAf,CAAlB;AAwBA;AA7BF,GADK,EAgCL;AACCZ,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,YAAF,EAAgB,gBAAhB,CAFT;AAGCC,IAAAA,SAAS,EAAE,CAAE;AAAEG,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAAF,KAAyB;AACnC,aAAOhC,WAAW,CAAE,WAAF,EAAe;AAChCyB,QAAAA,MAAM,EAAElB,YAAY,CAAE;AACrBmB,UAAAA,KAAK,EAAEvB,MAAM,CAAE;AAAE0B,YAAAA,IAAI,EAAEH,KAAR;AAAeK,YAAAA,YAAY,EAAE;AAA7B,WAAF,CADQ;AAErBA,UAAAA,YAAY,EAAE;AAFO,SAAF,CADY;AAKhCC,QAAAA;AALgC,OAAf,CAAlB;AAOA;AAXF,GAhCK,EA6CL;AACCZ,IAAAA,IAAI,EAAE,KADP;AAECa,IAAAA,QAAQ,EAAE,OAFX;AAGCC,IAAAA,MAAM,EAAIC,IAAF,KAAc;AACrBvB,MAAAA,EAAE,EAAEJ,oBAAoB,CAAE2B,IAAF,CAApB,CAA6BvB,EADZ;AAErBD,MAAAA,EAAE,EAAEH,oBAAoB,CAAE2B,IAAF,CAApB,CAA6BxB;AAFZ,KAAd,CAHT;;AAOCY,IAAAA,SAAS,CAAEa,IAAF,EAAS;AACjB,YAAMvB,UAAU,GAAG;AAClBwB,QAAAA,OAAO,EAAED,IAAI,CAACE,QAAL,KAAkB,IADT;AAElBN,QAAAA,MAAM,EAAEI,IAAI,CAACG,EAAL,KAAY,EAAZ,GAAiBC,SAAjB,GAA6BJ,IAAI,CAACG;AAFxB,OAAnB;;AAKA,UAAK1B,UAAU,CAACwB,OAAhB,EAA0B;AACzB,cAAMjB,IAAI,GAAGgB,IAAI,CAACK,YAAL,CAAmB,MAAnB,CAAb;;AAEA,YAAKrB,IAAL,EAAY;AACXP,UAAAA,UAAU,CAACO,IAAX,GAAkBA,IAAlB;AACA;;AAED,YAAKgB,IAAI,CAACK,YAAL,CAAmB,UAAnB,MAAoC,IAAzC,EAAgD;AAC/C5B,UAAAA,UAAU,CAAC6B,QAAX,GAAsB,IAAtB;AACA;;AAED,cAAMC,KAAK,GAAGC,QAAQ,CAAER,IAAI,CAACK,YAAL,CAAmB,OAAnB,CAAF,EAAgC,EAAhC,CAAtB;;AAEA,YACC,CAAEI,KAAK,CAAEF,KAAF,CAAP,MACA;AACEA,QAAAA,KAAK,KAAK,CAAV,IAAe9B,UAAU,CAAC6B,QAF5B,CADD,EAIE;AACD7B,UAAAA,UAAU,CAAC8B,KAAX,GAAmBA,KAAnB;AACA;AACD;;AAED,aAAO3C,WAAW,CAAE,WAAF,EAAe,EAChC,GAAGC,kBAAkB,CAAE,WAAF,EAAemC,IAAI,CAACU,SAApB,CADW;AAEhC,WAAGjC;AAF6B,OAAf,CAAlB;AAIA;;AAvCF,GA7CK,EAsFL,GAAG,CAAE,GAAF,EAAO,GAAP,EAAac,GAAb,CAAoBoB,MAAF,KAAgB;AACpC3B,IAAAA,IAAI,EAAE,QAD8B;AAEpC2B,IAAAA,MAFoC;;AAGpCxB,IAAAA,SAAS,CAAEK,OAAF,EAAY;AACpB,aAAO5B,WAAW,CAAE,WAAF,EAAe;AAChCyB,QAAAA,MAAM,EAAG,OAAOG,OAAS;AADO,OAAf,CAAlB;AAGA;;AAPmC,GAAhB,CAAlB,CAtFE,EA+FL,GAAG,CAAE,IAAF,EAAQ,IAAR,EAAeD,GAAf,CAAsBoB,MAAF,KAAgB;AACtC3B,IAAAA,IAAI,EAAE,QADgC;AAEtC2B,IAAAA,MAFsC;;AAGtCxB,IAAAA,SAAS,CAAEK,OAAF,EAAY;AACpB,aAAO5B,WAAW,CAAE,WAAF,EAAe;AAChCqC,QAAAA,OAAO,EAAE,IADuB;AAEhCZ,QAAAA,MAAM,EAAG,OAAOG,OAAS;AAFO,OAAf,CAAlB;AAIA;;AARqC,GAAhB,CAApB,CA/FE,CADY;AA2GlBoB,EAAAA,EAAE,EAAE,CACH;AACC5B,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,gBAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,CAAE;AAAEE,MAAAA;AAAF,KAAF,KACVnB,KAAK,CACJH,MAAM,CAAE;AACP0B,MAAAA,IAAI,EAAEJ,MADC;AAEPM,MAAAA,YAAY,EAAE,IAFP;AAGPkB,MAAAA,oBAAoB,EAAE,CAAE,IAAF,EAAQ,IAAR;AAHf,KAAF,CADF,EAMJ/C,yBANI,CAAL,CAOEyB,GAPF,CAOSuB,KAAF,IACNlD,WAAW,CAAE,gBAAF,EAAoB;AAC9B4B,MAAAA,OAAO,EAAErB,YAAY,CAAE;AAAEmB,QAAAA,KAAK,EAAEwB;AAAT,OAAF;AADS,KAApB,CARZ;AAJF,GADG,EAkBH;AACC9B,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,cAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,CAAE;AAAEE,MAAAA;AAAF,KAAF,KACVnB,KAAK,CACJH,MAAM,CAAE;AACP0B,MAAAA,IAAI,EAAEJ,MADC;AAEPM,MAAAA,YAAY,EAAE,IAFP;AAGPkB,MAAAA,oBAAoB,EAAE,CAAE,IAAF,EAAQ,IAAR;AAHf,KAAF,CADF,EAMJ/C,yBANI,CAAL,CAOEyB,GAPF,CAOSuB,KAAF,IACNlD,WAAW,CAAE,cAAF,EAAkB;AAC5B4B,MAAAA,OAAO,EAAErB,YAAY,CAAE;AAAEmB,QAAAA,KAAK,EAAEwB;AAAT,OAAF;AADO,KAAlB,CARZ;AAJF,GAlBG,EAmCH;AACC9B,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,YAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,CAAE;AAAEE,MAAAA,MAAF;AAAUO,MAAAA;AAAV,KAAF,KAA0B;AACpC,aAAOhC,WAAW,CAAE,YAAF,EAAgB;AACjC0B,QAAAA,KAAK,EAAEnB,YAAY,CAAE;AACpBmB,UAAAA,KAAK,EAAEvB,MAAM,CAAE;AACd0B,YAAAA,IAAI,EAAEJ,MADQ;AAEdM,YAAAA,YAAY,EAAE,IAFA;AAGdkB,YAAAA,oBAAoB,EAAE,CAAE,IAAF,EAAQ,IAAR;AAHR,WAAF,CADO;AAMpBlB,UAAAA,YAAY,EAAE;AANM,SAAF,CADc;AASjCC,QAAAA;AATiC,OAAhB,CAAlB;AAWA;AAfF,GAnCG,EAoDH;AACCZ,IAAAA,IAAI,EAAE,OADP;AAECE,IAAAA,MAAM,EAAE,CAAE,gBAAF,CAFT;AAGCC,IAAAA,SAAS,EAAE,CAAE;AAAEE,MAAAA,MAAF;AAAUO,MAAAA;AAAV,KAAF,KAA0B;AACpC,aAAOhC,WAAW,CAAE,gBAAF,EAAoB;AACrC0B,QAAAA,KAAK,EAAEnB,YAAY,CAAE;AACpBmB,UAAAA,KAAK,EAAEvB,MAAM,CAAE;AACd0B,YAAAA,IAAI,EAAEJ,MADQ;AAEdM,YAAAA,YAAY,EAAE,IAFA;AAGdkB,YAAAA,oBAAoB,EAAE,CAAE,IAAF,EAAQ,IAAR;AAHR,WAAF,CADO;AAMpBlB,UAAAA,YAAY,EAAE;AANM,SAAF,CADkB;AASrCC,QAAAA;AATqC,OAApB,CAAlB;AAWA;AAfF,GApDG;AA3Gc,CAAnB;AAmLA,eAAed,UAAf","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { createBlock, getBlockAttributes } from '@wordpress/blocks';\nimport {\n\t__UNSTABLE_LINE_SEPARATOR,\n\tcreate,\n\tjoin,\n\treplace,\n\tsplit,\n\ttoHTMLString,\n} from '@wordpress/rich-text';\n\nfunction getListContentSchema( { phrasingContentSchema } ) {\n\tconst listContentSchema = {\n\t\t...phrasingContentSchema,\n\t\tul: {},\n\t\tol: { attributes: [ 'type', 'start', 'reversed' ] },\n\t};\n\n\t// Recursion is needed.\n\t// Possible: ul > li > ul.\n\t// Impossible: ul > ul.\n\t[ 'ul', 'ol' ].forEach( ( tag ) => {\n\t\tlistContentSchema[ tag ].children = {\n\t\t\tli: {\n\t\t\t\tchildren: listContentSchema,\n\t\t\t},\n\t\t};\n\t} );\n\n\treturn listContentSchema;\n}\n\nconst transforms = {\n\tfrom: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tisMultiBlock: true,\n\t\t\tblocks: [ 'core/paragraph', 'core/heading' ],\n\t\t\ttransform: ( blockAttributes ) => {\n\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\tvalues: toHTMLString( {\n\t\t\t\t\t\tvalue: join(\n\t\t\t\t\t\t\tblockAttributes.map( ( { content } ) => {\n\t\t\t\t\t\t\t\tconst value = create( { html: content } );\n\n\t\t\t\t\t\t\t\tif ( blockAttributes.length > 1 ) {\n\t\t\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t// When converting only one block, transform\n\t\t\t\t\t\t\t\t// every line to a list item.\n\t\t\t\t\t\t\t\treturn replace(\n\t\t\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\t\t\t/\\n/g,\n\t\t\t\t\t\t\t\t\t__UNSTABLE_LINE_SEPARATOR\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} ),\n\t\t\t\t\t\t\t__UNSTABLE_LINE_SEPARATOR\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t} ),\n\t\t\t\t\tanchor: blockAttributes.anchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/quote', 'core/pullquote' ],\n\t\t\ttransform: ( { value, anchor } ) => {\n\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\tvalues: toHTMLString( {\n\t\t\t\t\t\tvalue: create( { html: value, multilineTag: 'p' } ),\n\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t} ),\n\t\t\t\t\tanchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'raw',\n\t\t\tselector: 'ol,ul',\n\t\t\tschema: ( args ) => ( {\n\t\t\t\tol: getListContentSchema( args ).ol,\n\t\t\t\tul: getListContentSchema( args ).ul,\n\t\t\t} ),\n\t\t\ttransform( node ) {\n\t\t\t\tconst attributes = {\n\t\t\t\t\tordered: node.nodeName === 'OL',\n\t\t\t\t\tanchor: node.id === '' ? undefined : node.id,\n\t\t\t\t};\n\n\t\t\t\tif ( attributes.ordered ) {\n\t\t\t\t\tconst type = node.getAttribute( 'type' );\n\n\t\t\t\t\tif ( type ) {\n\t\t\t\t\t\tattributes.type = type;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( node.getAttribute( 'reversed' ) !== null ) {\n\t\t\t\t\t\tattributes.reversed = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst start = parseInt( node.getAttribute( 'start' ), 10 );\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t! isNaN( start ) &&\n\t\t\t\t\t\t// start=1 only makes sense if the list is reversed.\n\t\t\t\t\t\t( start !== 1 || attributes.reversed )\n\t\t\t\t\t) {\n\t\t\t\t\t\tattributes.start = start;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\t...getBlockAttributes( 'core/list', node.outerHTML ),\n\t\t\t\t\t...attributes,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t...[ '*', '-' ].map( ( prefix ) => ( {\n\t\t\ttype: 'prefix',\n\t\t\tprefix,\n\t\t\ttransform( content ) {\n\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\tvalues: `<li>${ content }</li>`,\n\t\t\t\t} );\n\t\t\t},\n\t\t} ) ),\n\t\t...[ '1.', '1)' ].map( ( prefix ) => ( {\n\t\t\ttype: 'prefix',\n\t\t\tprefix,\n\t\t\ttransform( content ) {\n\t\t\t\treturn createBlock( 'core/list', {\n\t\t\t\t\tordered: true,\n\t\t\t\t\tvalues: `<li>${ content }</li>`,\n\t\t\t\t} );\n\t\t\t},\n\t\t} ) ),\n\t],\n\tto: [\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/paragraph' ],\n\t\t\ttransform: ( { values } ) =>\n\t\t\t\tsplit(\n\t\t\t\t\tcreate( {\n\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t} ),\n\t\t\t\t\t__UNSTABLE_LINE_SEPARATOR\n\t\t\t\t).map( ( piece ) =>\n\t\t\t\t\tcreateBlock( 'core/paragraph', {\n\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t} )\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/heading' ],\n\t\t\ttransform: ( { values } ) =>\n\t\t\t\tsplit(\n\t\t\t\t\tcreate( {\n\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t} ),\n\t\t\t\t\t__UNSTABLE_LINE_SEPARATOR\n\t\t\t\t).map( ( piece ) =>\n\t\t\t\t\tcreateBlock( 'core/heading', {\n\t\t\t\t\t\tcontent: toHTMLString( { value: piece } ),\n\t\t\t\t\t} )\n\t\t\t\t),\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/quote' ],\n\t\t\ttransform: ( { values, anchor } ) => {\n\t\t\t\treturn createBlock( 'core/quote', {\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: create( {\n\t\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t\tanchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\ttype: 'block',\n\t\t\tblocks: [ 'core/pullquote' ],\n\t\t\ttransform: ( { values, anchor } ) => {\n\t\t\t\treturn createBlock( 'core/pullquote', {\n\t\t\t\t\tvalue: toHTMLString( {\n\t\t\t\t\t\tvalue: create( {\n\t\t\t\t\t\t\thtml: values,\n\t\t\t\t\t\t\tmultilineTag: 'li',\n\t\t\t\t\t\t\tmultilineWrapperTags: [ 'ul', 'ol' ],\n\t\t\t\t\t\t} ),\n\t\t\t\t\t\tmultilineTag: 'p',\n\t\t\t\t\t} ),\n\t\t\t\t\tanchor,\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t],\n};\n\nexport default transforms;\n"]}