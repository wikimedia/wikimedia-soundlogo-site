{"version":3,"sources":["@wordpress/block-library/src/gallery/edit-wrapper.js"],"names":["store","blockEditorStore","useSelect","EditWithInnerBlocks","EditWithoutInnerBlocks","GalleryEditWrapper","props","attributes","clientId","innerBlockImages","select","getBlock","innerBlocks","__unstableGalleryWithImageBlocks","settings","getSettings","hasNewVersionContent","length","hasOldVersionContent","ids","images"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,KAAK,IAAIC,gBAAlB,QAA0C,yBAA1C;AACA,SAASC,SAAT,QAA0B,iBAA1B;AAEA;AACA;AACA;;AACA,OAAOC,mBAAP,MAAgC,QAAhC;AACA,OAAOC,sBAAP,MAAmC,WAAnC;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,kBAAT,CAA6BC,KAA7B,EAAqC;AAAA;;AACnD,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BF,KAAjC;AAEA,QAAMG,gBAAgB,GAAGP,SAAS,CAC/BQ,MAAF,IAAc;AAAA;;AACb,+BAAOA,MAAM,CAAET,gBAAF,CAAN,CAA2BU,QAA3B,CAAqCH,QAArC,CAAP,qDAAO,iBAAiDI,WAAxD;AACA,GAHgC,EAIjC,CAAEJ,QAAF,CAJiC,CAAlC;;AAOA,QAAMK,gCAAgC,GAAGX,SAAS,CAAIQ,MAAF,IAAc;AACjE,UAAMI,QAAQ,GAAGJ,MAAM,CAAET,gBAAF,CAAN,CAA2Bc,WAA3B,EAAjB;AACA,WAAOD,QAAQ,CAACD,gCAAhB;AACA,GAHiD,EAG/C,EAH+C,CAAlD,CAVmD,CAenD;AACA;AACA;;;AACA,QAAMG,oBAAoB,GAAG,CAAC,EAAEP,gBAAF,aAAEA,gBAAF,eAAEA,gBAAgB,CAAEQ,MAApB,CAA9B;AACA,QAAMC,oBAAoB,GACzB,KAAIX,UAAJ,aAAIA,UAAJ,0CAAIA,UAAU,CAAEY,GAAhB,oDAAI,gBAAiBF,MAArB,KAA+B,KAAIV,UAAJ,aAAIA,UAAJ,6CAAIA,UAAU,CAAEa,MAAhB,uDAAI,mBAAoBH,MAAxB,CADhC;;AAEA,MACCC,oBAAoB,IAClB,CAAEF,oBAAF,IAA0B,CAAEH,gCAF/B,EAGE;AACD,WAAO,cAAC,sBAAD,EAA6BP,KAA7B,CAAP;AACA;;AAED,SAAO,cAAC,mBAAD,EAA0BA,KAA1B,CAAP;AACA","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport EditWithInnerBlocks from './edit';\nimport EditWithoutInnerBlocks from './v1/edit';\n\n/*\n * Using a wrapper around the logic to load the edit for v1 of Gallery block\n * or the refactored version with InnerBlocks. This is to prevent conditional\n * use of hooks lint errors if adding this logic to the top of the edit component.\n */\nexport default function GalleryEditWrapper( props ) {\n\tconst { attributes, clientId } = props;\n\n\tconst innerBlockImages = useSelect(\n\t\t( select ) => {\n\t\t\treturn select( blockEditorStore ).getBlock( clientId )?.innerBlocks;\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst __unstableGalleryWithImageBlocks = useSelect( ( select ) => {\n\t\tconst settings = select( blockEditorStore ).getSettings();\n\t\treturn settings.__unstableGalleryWithImageBlocks;\n\t}, [] );\n\n\t// This logic is used to infer version information from content with higher\n\t// precedence than the flag. New galleries (and existing empty galleries) will\n\t// honor the flag.\n\tconst hasNewVersionContent = !! innerBlockImages?.length;\n\tconst hasOldVersionContent =\n\t\t0 < attributes?.ids?.length || 0 < attributes?.images?.length;\n\tif (\n\t\thasOldVersionContent ||\n\t\t( ! hasNewVersionContent && ! __unstableGalleryWithImageBlocks )\n\t) {\n\t\treturn <EditWithoutInnerBlocks { ...props } />;\n\t}\n\n\treturn <EditWithInnerBlocks { ...props } />;\n}\n"]}