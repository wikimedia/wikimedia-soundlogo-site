import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { store as blockEditorStore } from '@wordpress/block-editor';
import { useSelect } from '@wordpress/data';
/**
 * Internal dependencies
 */

import EditWithInnerBlocks from './edit';
import EditWithoutInnerBlocks from './v1/edit';
/*
 * Using a wrapper around the logic to load the edit for v1 of Gallery block
 * or the refactored version with InnerBlocks. This is to prevent conditional
 * use of hooks lint errors if adding this logic to the top of the edit component.
 */

export default function GalleryEditWrapper(props) {
  var _attributes$ids, _attributes$images;

  const {
    attributes,
    clientId
  } = props;
  const innerBlockImages = useSelect(select => {
    var _select$getBlock;

    return (_select$getBlock = select(blockEditorStore).getBlock(clientId)) === null || _select$getBlock === void 0 ? void 0 : _select$getBlock.innerBlocks;
  }, [clientId]);

  const __unstableGalleryWithImageBlocks = useSelect(select => {
    const settings = select(blockEditorStore).getSettings();
    return settings.__unstableGalleryWithImageBlocks;
  }, []); // This logic is used to infer version information from content with higher
  // precedence than the flag. New galleries (and existing empty galleries) will
  // honor the flag.


  const hasNewVersionContent = !!(innerBlockImages !== null && innerBlockImages !== void 0 && innerBlockImages.length);
  const hasOldVersionContent = 0 < (attributes === null || attributes === void 0 ? void 0 : (_attributes$ids = attributes.ids) === null || _attributes$ids === void 0 ? void 0 : _attributes$ids.length) || 0 < (attributes === null || attributes === void 0 ? void 0 : (_attributes$images = attributes.images) === null || _attributes$images === void 0 ? void 0 : _attributes$images.length);

  if (hasOldVersionContent || !hasNewVersionContent && !__unstableGalleryWithImageBlocks) {
    return createElement(EditWithoutInnerBlocks, props);
  }

  return createElement(EditWithInnerBlocks, props);
}
//# sourceMappingURL=edit-wrapper.js.map