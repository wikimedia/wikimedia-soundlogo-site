{"version":3,"sources":["@wordpress/block-library/src/gallery/gallery.native.js"],"names":["View","isEmpty","defaultColumnsNumber","styles","__","sprintf","BlockCaption","__experimentalUseInnerBlocksProps","useInnerBlocksProps","useState","useEffect","mediaUploadSync","WIDE_ALIGNMENTS","useResizeObserver","TILE_SPACING","MAX_DISPLAYED_COLUMNS","MAX_DISPLAYED_COLUMNS_NARROW","Gallery","props","isCaptionSelected","setIsCaptionSelected","resizeObserver","sizes","maxWidth","setMaxWidth","mediaPlaceholder","attributes","isNarrow","onBlur","insertBlocksAfter","clientId","width","images","align","columns","length","displayedColumns","Math","min","innerBlocksProps","contentResizeMode","allowedBlocks","orientation","renderAppender","numColumns","marginHorizontal","marginVertical","__experimentalLayout","type","alignments","gridProperties","parentWidth","focusGalleryCaption","isFullWidth","full","fullWidth","galleryAppender","caption"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\nimport { isEmpty } from 'lodash';\n\n/**\n * Internal dependencies\n */\nimport { defaultColumnsNumber } from './shared';\nimport styles from './gallery-styles.scss';\n\n/**\n * WordPress dependencies\n */\nimport { __, sprintf } from '@wordpress/i18n';\nimport {\n\tBlockCaption,\n\t__experimentalUseInnerBlocksProps as useInnerBlocksProps,\n} from '@wordpress/block-editor';\nimport { useState, useEffect } from '@wordpress/element';\nimport { mediaUploadSync } from '@wordpress/react-native-bridge';\nimport { WIDE_ALIGNMENTS } from '@wordpress/components';\nimport { useResizeObserver } from '@wordpress/compose';\n\nconst TILE_SPACING = 8;\n\n// we must limit displayed columns since readable content max-width is 580px\nconst MAX_DISPLAYED_COLUMNS = 4;\nconst MAX_DISPLAYED_COLUMNS_NARROW = 2;\n\nexport const Gallery = ( props ) => {\n\tconst [ isCaptionSelected, setIsCaptionSelected ] = useState( false );\n\tconst [ resizeObserver, sizes ] = useResizeObserver();\n\tconst [ maxWidth, setMaxWidth ] = useState( 0 );\n\tuseEffect( mediaUploadSync, [] );\n\n\tconst {\n\t\tmediaPlaceholder,\n\t\tattributes,\n\t\tisNarrow,\n\t\tonBlur,\n\t\tinsertBlocksAfter,\n\t\tclientId,\n\t} = props;\n\n\tuseEffect( () => {\n\t\tconst { width } = sizes || {};\n\t\tif ( width ) {\n\t\t\tsetMaxWidth( width );\n\t\t}\n\t}, [ sizes ] );\n\n\tconst {\n\t\timages,\n\t\talign,\n\t\tcolumns = defaultColumnsNumber( images.length ),\n\t} = attributes;\n\n\tconst displayedColumns = Math.min(\n\t\tcolumns,\n\t\tisNarrow ? MAX_DISPLAYED_COLUMNS_NARROW : MAX_DISPLAYED_COLUMNS\n\t);\n\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{},\n\t\t{\n\t\t\tcontentResizeMode: 'stretch',\n\t\t\tallowedBlocks: [ 'core/image' ],\n\t\t\torientation: 'horizontal',\n\t\t\trenderAppender: false,\n\t\t\tnumColumns: displayedColumns,\n\t\t\tmarginHorizontal: TILE_SPACING,\n\t\t\tmarginVertical: TILE_SPACING,\n\t\t\t__experimentalLayout: { type: 'default', alignments: [] },\n\t\t\tgridProperties: {\n\t\t\t\tnumColumns: displayedColumns,\n\t\t\t},\n\t\t\tparentWidth: maxWidth + 2 * TILE_SPACING,\n\t\t}\n\t);\n\n\tconst focusGalleryCaption = () => {\n\t\tif ( ! isCaptionSelected ) {\n\t\t\tsetIsCaptionSelected( true );\n\t\t}\n\t};\n\n\tconst isFullWidth = align === WIDE_ALIGNMENTS.alignments.full;\n\n\treturn (\n\t\t<View style={ isFullWidth && styles.fullWidth }>\n\t\t\t{ resizeObserver }\n\t\t\t<View { ...innerBlocksProps } />\n\t\t\t<View\n\t\t\t\tstyle={ [\n\t\t\t\t\tisFullWidth && styles.fullWidth,\n\t\t\t\t\tstyles.galleryAppender,\n\t\t\t\t] }\n\t\t\t>\n\t\t\t\t{ mediaPlaceholder }\n\t\t\t</View>\n\t\t\t<BlockCaption\n\t\t\t\tclientId={ clientId }\n\t\t\t\tisSelected={ isCaptionSelected }\n\t\t\t\taccessible={ true }\n\t\t\t\taccessibilityLabelCreator={ ( caption ) =>\n\t\t\t\t\tisEmpty( caption )\n\t\t\t\t\t\t? /* translators: accessibility text. Empty gallery caption. */\n\n\t\t\t\t\t\t  'Gallery caption. Empty'\n\t\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t\t/* translators: accessibility text. %s: gallery caption. */\n\t\t\t\t\t\t\t\t__( 'Gallery caption. %s' ),\n\t\t\t\t\t\t\t\tcaption\n\t\t\t\t\t\t  )\n\t\t\t\t}\n\t\t\t\tonFocus={ focusGalleryCaption }\n\t\t\t\tonBlur={ onBlur } // always assign onBlur as props\n\t\t\t\tinsertBlocksAfter={ insertBlocksAfter }\n\t\t\t/>\n\t\t</View>\n\t);\n};\n\nexport default Gallery;\n"]}