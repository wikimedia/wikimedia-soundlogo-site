import { createElement } from "@wordpress/element";

/**
 * External dependencies
 */
import classnames from 'classnames';
/**
 * WordPress dependencies
 */

import { RichText, useBlockProps, InnerBlocks } from '@wordpress/block-editor';
/**
 * Internal dependencies
 */

import saveWithoutInnerBlocks from './v1/save';
export default function saveWithInnerBlocks({
  attributes
}) {
  var _attributes$ids, _attributes$images;

  if ((attributes === null || attributes === void 0 ? void 0 : (_attributes$ids = attributes.ids) === null || _attributes$ids === void 0 ? void 0 : _attributes$ids.length) > 0 || (attributes === null || attributes === void 0 ? void 0 : (_attributes$images = attributes.images) === null || _attributes$images === void 0 ? void 0 : _attributes$images.length) > 0) {
    return saveWithoutInnerBlocks({
      attributes
    });
  }

  const {
    caption,
    columns,
    imageCrop
  } = attributes;
  const className = classnames('has-nested-images', {
    [`columns-${columns}`]: columns !== undefined,
    [`columns-default`]: columns === undefined,
    'is-cropped': imageCrop
  });
  return createElement("figure", useBlockProps.save({
    className
  }), createElement(InnerBlocks.Content, null), !RichText.isEmpty(caption) && createElement(RichText.Content, {
    tagName: "figcaption",
    className: "blocks-gallery-caption",
    value: caption
  }));
}
//# sourceMappingURL=save.js.map