{"version":3,"sources":["@wordpress/edit-post/src/editor.native.js"],"names":["Editor","Component","constructor","props","arguments","initialHtmlModeEnabled","mode","switchEditorMode","getEditorSettings","maxSize","setTitleRef","bind","settings","hasFixedToolbar","focusMode","hiddenBlockTypes","blockTypes","isRTL","I18nManager","allowedBlockTypes","undefined","defaultAllowedBlockTypes","componentDidMount","editEntityRecord","postType","postId","subscriptionParentSetFocusOnTitle","postTitleRef","focus","subscriptionParentFeaturedImageIdNativeUpdated","payload","featured_media","featuredImageId","undoIgnore","componentWillUnmount","remove","subscribeFeaturedImageIdNativeUpdated","titleRef","render","initialEdits","post","initialHtml","editorSettings","normalizedPost","id","title","raw","initialTitle","content","type","status","meta","select","isFeatureActive","getEditorMode","getPreference","__experimentalGetPreviewDeviceType","editPostStore","getBlockTypes","blocksStore","dispatch","coreStore"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport memize from 'memize';\nimport { size, map, without } from 'lodash';\nimport { I18nManager } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { EditorProvider } from '@wordpress/editor';\nimport { parse, serialize, store as blocksStore } from '@wordpress/blocks';\nimport { withDispatch, withSelect } from '@wordpress/data';\nimport { compose } from '@wordpress/compose';\nimport {\n\tsubscribeSetFocusOnTitle,\n\tsubscribeFeaturedImageIdNativeUpdated,\n} from '@wordpress/react-native-bridge';\nimport { SlotFillProvider } from '@wordpress/components';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport Layout from './components/layout';\nimport { store as editPostStore } from './store';\n\nclass Editor extends Component {\n\tconstructor( props ) {\n\t\tsuper( ...arguments );\n\n\t\tif ( props.initialHtmlModeEnabled && props.mode === 'visual' ) {\n\t\t\t// enable html mode if the initial mode the parent wants it but we're not already in it\n\t\t\tthis.props.switchEditorMode( 'text' );\n\t\t}\n\n\t\tthis.getEditorSettings = memize( this.getEditorSettings, {\n\t\t\tmaxSize: 1,\n\t\t} );\n\n\t\tthis.setTitleRef = this.setTitleRef.bind( this );\n\t}\n\n\tgetEditorSettings(\n\t\tsettings,\n\t\thasFixedToolbar,\n\t\tfocusMode,\n\t\thiddenBlockTypes,\n\t\tblockTypes\n\t) {\n\t\tsettings = {\n\t\t\t...settings,\n\t\t\tisRTL: I18nManager.isRTL,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t};\n\n\t\t// Omit hidden block types if exists and non-empty.\n\t\tif ( size( hiddenBlockTypes ) > 0 ) {\n\t\t\tif ( settings.allowedBlockTypes === undefined ) {\n\t\t\t\t// if no specific flags for allowedBlockTypes are set, assume `true`\n\t\t\t\t// meaning allow all block types\n\t\t\t\tsettings.allowedBlockTypes = true;\n\t\t\t}\n\t\t\t// Defer to passed setting for `allowedBlockTypes` if provided as\n\t\t\t// anything other than `true` (where `true` is equivalent to allow\n\t\t\t// all block types).\n\t\t\tconst defaultAllowedBlockTypes =\n\t\t\t\ttrue === settings.allowedBlockTypes\n\t\t\t\t\t? map( blockTypes, 'name' )\n\t\t\t\t\t: settings.allowedBlockTypes || [];\n\n\t\t\tsettings.allowedBlockTypes = without(\n\t\t\t\tdefaultAllowedBlockTypes,\n\t\t\t\t...hiddenBlockTypes\n\t\t\t);\n\t\t}\n\n\t\treturn settings;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { editEntityRecord, postType, postId } = this.props;\n\n\t\tthis.subscriptionParentSetFocusOnTitle = subscribeSetFocusOnTitle(\n\t\t\t() => {\n\t\t\t\tif ( this.postTitleRef ) {\n\t\t\t\t\tthis.postTitleRef.focus();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tthis.subscriptionParentFeaturedImageIdNativeUpdated = subscribeFeaturedImageIdNativeUpdated(\n\t\t\t( payload ) => {\n\t\t\t\teditEntityRecord(\n\t\t\t\t\t'postType',\n\t\t\t\t\tpostType,\n\t\t\t\t\tpostId,\n\t\t\t\t\t{ featured_media: payload.featuredImageId },\n\t\t\t\t\t{\n\t\t\t\t\t\tundoIgnore: true,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif ( this.subscriptionParentSetFocusOnTitle ) {\n\t\t\tthis.subscriptionParentSetFocusOnTitle.remove();\n\t\t}\n\n\t\tif ( this.subscribeFeaturedImageIdNativeUpdated ) {\n\t\t\tthis.subscribeFeaturedImageIdNativeUpdated.remove();\n\t\t}\n\t}\n\n\tsetTitleRef( titleRef ) {\n\t\tthis.postTitleRef = titleRef;\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\tinitialEdits,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes,\n\t\t\tpost,\n\t\t\tpostId,\n\t\t\tpostType,\n\t\t\tfeaturedImageId,\n\t\t\tinitialHtml,\n\t\t\t...props\n\t\t} = this.props;\n\n\t\tconst editorSettings = this.getEditorSettings(\n\t\t\tsettings,\n\t\t\thasFixedToolbar,\n\t\t\tfocusMode,\n\t\t\thiddenBlockTypes,\n\t\t\tblockTypes\n\t\t);\n\n\t\tconst normalizedPost = post || {\n\t\t\tid: postId,\n\t\t\ttitle: {\n\t\t\t\traw: props.initialTitle || '',\n\t\t\t},\n\t\t\tfeatured_media: featuredImageId,\n\t\t\tcontent: {\n\t\t\t\t// make sure the post content is in sync with gutenberg store\n\t\t\t\t// to avoid marking the post as modified when simply loaded\n\t\t\t\t// For now, let's assume: serialize( parse( html ) ) !== html\n\t\t\t\traw: serialize( parse( initialHtml || '' ) ),\n\t\t\t},\n\t\t\ttype: postType,\n\t\t\tstatus: 'draft',\n\t\t\tmeta: [],\n\t\t};\n\n\t\treturn (\n\t\t\t<SlotFillProvider>\n\t\t\t\t<EditorProvider\n\t\t\t\t\tsettings={ editorSettings }\n\t\t\t\t\tpost={ normalizedPost }\n\t\t\t\t\tinitialEdits={ initialEdits }\n\t\t\t\t\tuseSubRegistry={ false }\n\t\t\t\t\t{ ...props }\n\t\t\t\t>\n\t\t\t\t\t<Layout setTitleRef={ this.setTitleRef } />\n\t\t\t\t</EditorProvider>\n\t\t\t</SlotFillProvider>\n\t\t);\n\t}\n}\n\nexport default compose( [\n\twithSelect( ( select ) => {\n\t\tconst {\n\t\t\tisFeatureActive,\n\t\t\tgetEditorMode,\n\t\t\tgetPreference,\n\t\t\t__experimentalGetPreviewDeviceType,\n\t\t} = select( editPostStore );\n\t\tconst { getBlockTypes } = select( blocksStore );\n\n\t\treturn {\n\t\t\thasFixedToolbar:\n\t\t\t\tisFeatureActive( 'fixedToolbar' ) ||\n\t\t\t\t__experimentalGetPreviewDeviceType() !== 'Desktop',\n\t\t\tfocusMode: isFeatureActive( 'focusMode' ),\n\t\t\tmode: getEditorMode(),\n\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t\tblockTypes: getBlockTypes(),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch ) => {\n\t\tconst { switchEditorMode } = dispatch( editPostStore );\n\t\tconst { editEntityRecord } = dispatch( coreStore );\n\t\treturn {\n\t\t\tswitchEditorMode,\n\t\t\teditEntityRecord,\n\t\t};\n\t} ),\n] )( Editor );\n"]}