{"version":3,"sources":["@wordpress/edit-post/src/store/reducer.js"],"names":["createWithInitialState","initialState","reducer","state","action","preferences","combineReducers","PREFERENCES_DEFAULTS","panels","type","panelName","enabled","isOpen","opened","editorMode","mode","hiddenBlockTypes","blockNames","preferredStyleVariations","blockName","blockStyle","localAutosaveInterval","interval","removedPanels","activeModal","name","publishSidebarActive","isSavingMetaBoxes","metaBoxLocations","metaBoxesPerLocation","deviceType","blockInserterPanel","value","listViewPanel","isEditingTemplate","metaBoxesInitialized","metaBoxes","isSaving","locations","initialized"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { flow, get, includes, omit, union, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { combineReducers } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { PREFERENCES_DEFAULTS } from './defaults';\n\n/**\n * Higher-order reducer creator which provides the given initial state for the\n * original reducer.\n *\n * @param {*} initialState Initial state to provide to reducer.\n *\n * @return {Function} Higher-order reducer.\n */\nconst createWithInitialState = ( initialState ) => ( reducer ) => {\n\treturn ( state = initialState, action ) => reducer( state, action );\n};\n\n/**\n * Reducer returning the user preferences.\n *\n * @param {Object}  state                           Current state.\n * @param {string}  state.mode                      Current editor mode, either\n *                                                  \"visual\" or \"text\".\n * @param {boolean} state.isGeneralSidebarDismissed Whether general sidebar is\n *                                                  dismissed. False by default\n *                                                  or when closing general\n *                                                  sidebar, true when opening\n *                                                  sidebar.\n * @param {boolean} state.isSidebarOpened           Whether the sidebar is\n *                                                  opened or closed.\n * @param {Object}  state.panels                    The state of the different\n *                                                  sidebar panels.\n * @param {Object}  action                          Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport const preferences = flow( [\n\tcombineReducers,\n\tcreateWithInitialState( PREFERENCES_DEFAULTS ),\n] )( {\n\tpanels( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'TOGGLE_PANEL_ENABLED': {\n\t\t\t\tconst { panelName } = action;\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ panelName ]: {\n\t\t\t\t\t\t...state[ panelName ],\n\t\t\t\t\t\tenabled: ! get( state, [ panelName, 'enabled' ], true ),\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase 'TOGGLE_PANEL_OPENED': {\n\t\t\t\tconst { panelName } = action;\n\t\t\t\tconst isOpen =\n\t\t\t\t\tstate[ panelName ] === true ||\n\t\t\t\t\tget( state, [ panelName, 'opened' ], false );\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ panelName ]: {\n\t\t\t\t\t\t...state[ panelName ],\n\t\t\t\t\t\topened: ! isOpen,\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t},\n\teditorMode( state, action ) {\n\t\tif ( action.type === 'SWITCH_MODE' ) {\n\t\t\treturn action.mode;\n\t\t}\n\n\t\treturn state;\n\t},\n\thiddenBlockTypes( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'SHOW_BLOCK_TYPES':\n\t\t\t\treturn without( state, ...action.blockNames );\n\n\t\t\tcase 'HIDE_BLOCK_TYPES':\n\t\t\t\treturn union( state, action.blockNames );\n\t\t}\n\n\t\treturn state;\n\t},\n\tpreferredStyleVariations( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'UPDATE_PREFERRED_STYLE_VARIATIONS': {\n\t\t\t\tif ( ! action.blockName ) {\n\t\t\t\t\treturn state;\n\t\t\t\t}\n\t\t\t\tif ( ! action.blockStyle ) {\n\t\t\t\t\treturn omit( state, [ action.blockName ] );\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\t[ action.blockName ]: action.blockStyle,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn state;\n\t},\n\tlocalAutosaveInterval( state, action ) {\n\t\tswitch ( action.type ) {\n\t\t\tcase 'UPDATE_LOCAL_AUTOSAVE_INTERVAL':\n\t\t\t\treturn action.interval;\n\t\t}\n\n\t\treturn state;\n\t},\n} );\n\n/**\n * Reducer storing the list of all programmatically removed panels.\n *\n * @param {Array}  state  Current state.\n * @param {Object} action Action object.\n *\n * @return {Array} Updated state.\n */\nexport function removedPanels( state = [], action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REMOVE_PANEL':\n\t\t\tif ( ! includes( state, action.panelName ) ) {\n\t\t\t\treturn [ ...state, action.panelName ];\n\t\t\t}\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer for storing the name of the open modal, or null if no modal is open.\n *\n * @param {Object} state  Previous state.\n * @param {Object} action Action object containing the `name` of the modal\n *\n * @return {Object} Updated state\n */\nexport function activeModal( state = null, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_MODAL':\n\t\t\treturn action.name;\n\t\tcase 'CLOSE_MODAL':\n\t\t\treturn null;\n\t}\n\n\treturn state;\n}\n\nexport function publishSidebarActive( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'OPEN_PUBLISH_SIDEBAR':\n\t\t\treturn true;\n\t\tcase 'CLOSE_PUBLISH_SIDEBAR':\n\t\t\treturn false;\n\t\tcase 'TOGGLE_PUBLISH_SIDEBAR':\n\t\t\treturn ! state;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer keeping track of the meta boxes isSaving state.\n * A \"true\" value means the meta boxes saving request is in-flight.\n *\n *\n * @param {boolean} state  Previous state.\n * @param {Object}  action Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function isSavingMetaBoxes( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'REQUEST_META_BOX_UPDATES':\n\t\t\treturn true;\n\t\tcase 'META_BOX_UPDATES_SUCCESS':\n\t\tcase 'META_BOX_UPDATES_FAILURE':\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\n/**\n * Reducer keeping track of the meta boxes per location.\n *\n * @param {boolean} state  Previous state.\n * @param {Object}  action Action Object.\n *\n * @return {Object} Updated state.\n */\nexport function metaBoxLocations( state = {}, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_META_BOXES_PER_LOCATIONS':\n\t\t\treturn action.metaBoxesPerLocation;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer returning the editing canvas device type.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n *\n * @return {Object} Updated state.\n */\nexport function deviceType( state = 'Desktop', action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_PREVIEW_DEVICE_TYPE':\n\t\t\treturn action.deviceType;\n\t}\n\n\treturn state;\n}\n\n/**\n * Reducer to set the block inserter panel open or closed.\n *\n * Note: this reducer interacts with the list view panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function blockInserterPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen ? false : state;\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer to set the list view panel open or closed.\n *\n * Note: this reducer interacts with the inserter panel reducer\n * to make sure that only one of the two panels is open at the same time.\n *\n * @param {Object} state  Current state.\n * @param {Object} action Dispatched action.\n */\nexport function listViewPanel( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_INSERTER_OPENED':\n\t\t\treturn action.value ? false : state;\n\t\tcase 'SET_IS_LIST_VIEW_OPENED':\n\t\t\treturn action.isOpen;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer tracking whether the inserter is open.\n *\n * @param {boolean} state\n * @param {Object}  action\n */\nfunction isEditingTemplate( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'SET_IS_EDITING_TEMPLATE':\n\t\t\treturn action.value;\n\t}\n\treturn state;\n}\n\n/**\n * Reducer tracking whether meta boxes are initialized.\n *\n * @param {boolean} state\n * @param {Object}  action\n *\n * @return {boolean} Updated state.\n */\nfunction metaBoxesInitialized( state = false, action ) {\n\tswitch ( action.type ) {\n\t\tcase 'META_BOXES_INITIALIZED':\n\t\t\treturn true;\n\t}\n\treturn state;\n}\n\nconst metaBoxes = combineReducers( {\n\tisSaving: isSavingMetaBoxes,\n\tlocations: metaBoxLocations,\n\tinitialized: metaBoxesInitialized,\n} );\n\nexport default combineReducers( {\n\tactiveModal,\n\tmetaBoxes,\n\tpreferences,\n\tpublishSidebarActive,\n\tremovedPanels,\n\tdeviceType,\n\tblockInserterPanel,\n\tlistViewPanel,\n\tisEditingTemplate,\n} );\n"]}