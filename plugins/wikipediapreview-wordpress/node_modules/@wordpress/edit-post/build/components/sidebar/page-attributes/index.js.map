{"version":3,"sources":["@wordpress/edit-post/src/components/sidebar/page-attributes/index.js"],"names":["PANEL_NAME","PageAttributes","isEnabled","isOpened","postType","select","getEditedPostAttribute","editorStore","isEditorPanelEnabled","isEditorPanelOpened","editPostStore","getPostType","coreStore","toggleEditorPanelOpened","onTogglePanel"],"mappings":";;;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AAMA;;AACA;;AAKA;;AAtBA;AACA;AACA;;AAGA;AACA;AACA;;AAYA;AACA;AACA;;AAGA;AACA;AACA;AACA,MAAMA,UAAU,GAAG,iBAAnB;;AAEO,SAASC,cAAT,GAA0B;AAChC,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,QAAb;AAAuBC,IAAAA;AAAvB,MAAoC,qBAAaC,MAAF,IAAc;AAClE,UAAM;AAAEC,MAAAA;AAAF,QAA6BD,MAAM,CAAEE,aAAF,CAAzC;AACA,UAAM;AAAEC,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,QAAgDJ,MAAM,CAC3DK,YAD2D,CAA5D;AAGA,UAAM;AAAEC,MAAAA;AAAF,QAAkBN,MAAM,CAAEO,eAAF,CAA9B;AACA,WAAO;AACNV,MAAAA,SAAS,EAAEM,oBAAoB,CAAER,UAAF,CADzB;AAENG,MAAAA,QAAQ,EAAEM,mBAAmB,CAAET,UAAF,CAFvB;AAGNI,MAAAA,QAAQ,EAAEO,WAAW,CAAEL,sBAAsB,CAAE,MAAF,CAAxB;AAHf,KAAP;AAKA,GAXyC,EAWvC,EAXuC,CAA1C;AAaA,QAAM;AAAEO,IAAAA;AAAF,MAA8B,uBAAaH,YAAb,CAApC;;AAEA,MAAK,CAAER,SAAF,IAAe,CAAEE,QAAtB,EAAiC;AAChC,WAAO,IAAP;AACA;;AAED,QAAMU,aAAa,GAAG,qBAASD,uBAAT,EAAkCb,UAAlC,CAAtB;AAEA,SACC,4BAAC,2BAAD,QACC,4BAAC,qBAAD;AACC,IAAA,KAAK,EAAG,iBACPI,QADO,EAEP,CAAE,QAAF,EAAY,YAAZ,CAFO,EAGP,cAAI,iBAAJ,CAHO,CADT;AAMC,IAAA,MAAM,EAAGD,QANV;AAOC,IAAA,QAAQ,EAAGW;AAPZ,KASC,4BAAC,4BAAD,OATD,EAUC,4BAAC,oBAAD,QACC,4BAAC,2BAAD,OADD,CAVD,CADD,CADD;AAkBA;;eAEcb,c","sourcesContent":["/**\n * External dependencies\n */\nimport { get, partial } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { PanelBody, PanelRow } from '@wordpress/components';\nimport {\n\tstore as editorStore,\n\tPageAttributesCheck,\n\tPageAttributesOrder,\n\tPageAttributesParent,\n} from '@wordpress/editor';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\n/**\n * Module Constants\n */\nconst PANEL_NAME = 'page-attributes';\n\nexport function PageAttributes() {\n\tconst { isEnabled, isOpened, postType } = useSelect( ( select ) => {\n\t\tconst { getEditedPostAttribute } = select( editorStore );\n\t\tconst { isEditorPanelEnabled, isEditorPanelOpened } = select(\n\t\t\teditPostStore\n\t\t);\n\t\tconst { getPostType } = select( coreStore );\n\t\treturn {\n\t\t\tisEnabled: isEditorPanelEnabled( PANEL_NAME ),\n\t\t\tisOpened: isEditorPanelOpened( PANEL_NAME ),\n\t\t\tpostType: getPostType( getEditedPostAttribute( 'type' ) ),\n\t\t};\n\t}, [] );\n\n\tconst { toggleEditorPanelOpened } = useDispatch( editPostStore );\n\n\tif ( ! isEnabled || ! postType ) {\n\t\treturn null;\n\t}\n\n\tconst onTogglePanel = partial( toggleEditorPanelOpened, PANEL_NAME );\n\n\treturn (\n\t\t<PageAttributesCheck>\n\t\t\t<PanelBody\n\t\t\t\ttitle={ get(\n\t\t\t\t\tpostType,\n\t\t\t\t\t[ 'labels', 'attributes' ],\n\t\t\t\t\t__( 'Page attributes' )\n\t\t\t\t) }\n\t\t\t\topened={ isOpened }\n\t\t\t\tonToggle={ onTogglePanel }\n\t\t\t>\n\t\t\t\t<PageAttributesParent />\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<PageAttributesOrder />\n\t\t\t\t</PanelRow>\n\t\t\t</PanelBody>\n\t\t</PageAttributesCheck>\n\t);\n}\n\nexport default PageAttributes;\n"]}