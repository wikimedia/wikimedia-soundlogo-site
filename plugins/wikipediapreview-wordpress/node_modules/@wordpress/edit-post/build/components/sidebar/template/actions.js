"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _editor = require("@wordpress/editor");

var _coreData = require("@wordpress/core-data");

var _store = require("../../../store");

var _blocks = require("@wordpress/blocks");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function PostTemplateActions() {
  const [isModalOpen, setIsModalOpen] = (0, _element.useState)(false);
  const [isBusy, setIsBusy] = (0, _element.useState)(false);
  const [title, setTitle] = (0, _element.useState)('');
  const {
    template,
    supportsTemplateMode,
    defaultTemplate
  } = (0, _data.useSelect)(select => {
    var _getPostType$viewable, _getPostType;

    const {
      getCurrentPostType,
      getEditorSettings
    } = select(_editor.store);
    const {
      getPostType
    } = select(_coreData.store);
    const {
      getEditedPostTemplate
    } = select(_store.store);
    const isViewable = (_getPostType$viewable = (_getPostType = getPostType(getCurrentPostType())) === null || _getPostType === void 0 ? void 0 : _getPostType.viewable) !== null && _getPostType$viewable !== void 0 ? _getPostType$viewable : false;

    const _supportsTemplateMode = getEditorSettings().supportsTemplateMode && isViewable;

    return {
      template: _supportsTemplateMode && getEditedPostTemplate(),
      supportsTemplateMode: _supportsTemplateMode,
      defaultTemplate: getEditorSettings().defaultBlockTemplate
    };
  }, []);
  const {
    __unstableCreateTemplate,
    __unstableSwitchToTemplateMode
  } = (0, _data.useDispatch)(_store.store);

  if (!supportsTemplateMode) {
    return null;
  }

  const defaultTitle = (0, _i18n.__)('Custom Template');

  async function onCreateTemplate(event) {
    event.preventDefault();

    if (isBusy) {
      return;
    }

    setIsBusy(true);
    const newTemplateContent = defaultTemplate !== null && defaultTemplate !== void 0 ? defaultTemplate : (0, _blocks.serialize)([(0, _blocks.createBlock)('core/group', {
      tagName: 'header',
      layout: {
        inherit: true
      }
    }, [(0, _blocks.createBlock)('core/site-title'), (0, _blocks.createBlock)('core/site-tagline')]), (0, _blocks.createBlock)('core/separator'), (0, _blocks.createBlock)('core/group', {
      tagName: 'main'
    }, [(0, _blocks.createBlock)('core/group', {
      layout: {
        inherit: true
      }
    }, [(0, _blocks.createBlock)('core/post-title')]), (0, _blocks.createBlock)('core/post-content', {
      layout: {
        inherit: true
      }
    })])]);
    await __unstableCreateTemplate({
      slug: 'wp-custom-template-' + (0, _lodash.kebabCase)(title || defaultTitle),
      content: newTemplateContent,
      title: title || defaultTitle
    });
    setIsBusy(false);
    setIsModalOpen(false);

    __unstableSwitchToTemplateMode(true);
  }

  return (0, _element.createElement)(_element.Fragment, null, (0, _element.createElement)("div", {
    className: "edit-post-template__actions"
  }, !!template && (0, _element.createElement)(_components.Button, {
    variant: "link",
    onClick: () => __unstableSwitchToTemplateMode()
  }, (0, _i18n.__)('Edit')), (0, _element.createElement)(_components.Button, {
    variant: "link",
    onClick: () => setIsModalOpen(true)
  }, (0, _i18n.__)('New'))), isModalOpen && (0, _element.createElement)(_components.Modal, {
    title: (0, _i18n.__)('Create custom template'),
    closeLabel: (0, _i18n.__)('Close'),
    onRequestClose: () => {
      setIsModalOpen(false);
      setTitle('');
    },
    overlayClassName: "edit-post-template__modal"
  }, (0, _element.createElement)("form", {
    onSubmit: onCreateTemplate
  }, (0, _element.createElement)(_components.Flex, {
    align: "flex-start",
    gap: 8
  }, (0, _element.createElement)(_components.FlexItem, null, (0, _element.createElement)(_components.TextControl, {
    label: (0, _i18n.__)('Name'),
    value: title,
    onChange: setTitle,
    placeholder: defaultTitle,
    disabled: isBusy,
    help: (0, _i18n.__)('Describe the purpose of the template, e.g. "Full Width". Custom templates can be applied to any post or page.')
  }))), (0, _element.createElement)(_components.Flex, {
    className: "edit-post-template__modal-actions",
    justify: "flex-end",
    expanded: false
  }, (0, _element.createElement)(_components.FlexItem, null, (0, _element.createElement)(_components.Button, {
    variant: "tertiary",
    onClick: () => {
      setIsModalOpen(false);
      setTitle('');
    }
  }, (0, _i18n.__)('Cancel'))), (0, _element.createElement)(_components.FlexItem, null, (0, _element.createElement)(_components.Button, {
    variant: "primary",
    type: "submit",
    isBusy: isBusy,
    "aria-disabled": isBusy
  }, (0, _i18n.__)('Create')))))));
}

var _default = PostTemplateActions;
exports.default = _default;
//# sourceMappingURL=actions.js.map