"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _editor = require("@wordpress/editor");

var _compose = require("@wordpress/compose");

var _data = require("@wordpress/data");

var _coreData = require("@wordpress/core-data");

var _store = require("../../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Module Constants
 */
const PANEL_NAME = 'featured-image';

function FeaturedImage({
  isEnabled,
  isOpened,
  postType,
  onTogglePanel
}) {
  if (!isEnabled) {
    return null;
  }

  return (0, _element.createElement)(_editor.PostFeaturedImageCheck, null, (0, _element.createElement)(_components.PanelBody, {
    title: (0, _lodash.get)(postType, ['labels', 'featured_image'], (0, _i18n.__)('Featured image')),
    opened: isOpened,
    onToggle: onTogglePanel
  }, (0, _element.createElement)(_editor.PostFeaturedImage, null)));
}

const applyWithSelect = (0, _data.withSelect)(select => {
  const {
    getEditedPostAttribute
  } = select(_editor.store);
  const {
    getPostType
  } = select(_coreData.store);
  const {
    isEditorPanelEnabled,
    isEditorPanelOpened
  } = select(_store.store);
  return {
    postType: getPostType(getEditedPostAttribute('type')),
    isEnabled: isEditorPanelEnabled(PANEL_NAME),
    isOpened: isEditorPanelOpened(PANEL_NAME)
  };
});
const applyWithDispatch = (0, _data.withDispatch)(dispatch => {
  const {
    toggleEditorPanelOpened
  } = dispatch(_store.store);
  return {
    onTogglePanel: (0, _lodash.partial)(toggleEditorPanelOpened, PANEL_NAME)
  };
});

var _default = (0, _compose.compose)(applyWithSelect, applyWithDispatch)(FeaturedImage);

exports.default = _default;
//# sourceMappingURL=index.js.map