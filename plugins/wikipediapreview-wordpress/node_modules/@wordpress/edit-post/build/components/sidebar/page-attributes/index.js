"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PageAttributes = PageAttributes;
exports.default = void 0;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _editor = require("@wordpress/editor");

var _data = require("@wordpress/data");

var _coreData = require("@wordpress/core-data");

var _store = require("../../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Module Constants
 */
const PANEL_NAME = 'page-attributes';

function PageAttributes() {
  const {
    isEnabled,
    isOpened,
    postType
  } = (0, _data.useSelect)(select => {
    const {
      getEditedPostAttribute
    } = select(_editor.store);
    const {
      isEditorPanelEnabled,
      isEditorPanelOpened
    } = select(_store.store);
    const {
      getPostType
    } = select(_coreData.store);
    return {
      isEnabled: isEditorPanelEnabled(PANEL_NAME),
      isOpened: isEditorPanelOpened(PANEL_NAME),
      postType: getPostType(getEditedPostAttribute('type'))
    };
  }, []);
  const {
    toggleEditorPanelOpened
  } = (0, _data.useDispatch)(_store.store);

  if (!isEnabled || !postType) {
    return null;
  }

  const onTogglePanel = (0, _lodash.partial)(toggleEditorPanelOpened, PANEL_NAME);
  return (0, _element.createElement)(_editor.PageAttributesCheck, null, (0, _element.createElement)(_components.PanelBody, {
    title: (0, _lodash.get)(postType, ['labels', 'attributes'], (0, _i18n.__)('Page attributes')),
    opened: isOpened,
    onToggle: onTogglePanel
  }, (0, _element.createElement)(_editor.PageAttributesParent, null), (0, _element.createElement)(_components.PanelRow, null, (0, _element.createElement)(_editor.PageAttributesOrder, null))));
}

var _default = PageAttributes;
exports.default = _default;
//# sourceMappingURL=index.js.map