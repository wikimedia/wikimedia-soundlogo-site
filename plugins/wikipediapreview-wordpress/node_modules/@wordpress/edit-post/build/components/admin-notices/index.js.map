{"version":3,"sources":["@wordpress/edit-post/src/components/admin-notices/index.js"],"names":["NOTICE_CLASS_STATUSES","updated","error","getAdminNotices","Array","from","document","querySelectorAll","reverse","getNoticeHTML","element","fragments","child","childNodes","nodeType","ELEMENT_NODE","value","nodeValue","trim","push","classList","contains","outerHTML","join","getNoticeStatus","className","hasOwnProperty","AdminNotices","Component","componentDidMount","convertNotices","createNotice","props","forEach","status","content","isDismissible","speak","__unstableHTML","parentNode","removeChild","render","dispatch","noticesStore"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AALA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,qBAAqB,GAAG;AAC7B,oBAAkB,SADW;AAE7BC,EAAAA,OAAO,EAAE,SAFoB;AAG7B,oBAAkB,SAHW;AAI7B,kBAAgB,OAJa;AAK7BC,EAAAA,KAAK,EAAE,OALsB;AAM7B,iBAAe;AANc,CAA9B;AASA;AACA;AACA;AACA;AACA;;AACA,SAASC,eAAT,GAA2B;AAC1B;AACA;AACA,SAAOC,KAAK,CAACC,IAAN,CACNC,QAAQ,CAACC,gBAAT,CAA2B,2BAA3B,CADM,EAELC,OAFK,EAAP;AAGA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,aAAT,CAAwBC,OAAxB,EAAkC;AACjC,QAAMC,SAAS,GAAG,EAAlB;;AAEA,OAAM,MAAMC,KAAZ,IAAqBF,OAAO,CAACG,UAA7B,EAA0C;AACzC,QAAKD,KAAK,CAACE,QAAN,KAAmBF,KAAK,CAACG,YAA9B,EAA6C;AAC5C,YAAMC,KAAK,GAAGJ,KAAK,CAACK,SAAN,CAAgBC,IAAhB,EAAd;;AACA,UAAKF,KAAL,EAAa;AACZL,QAAAA,SAAS,CAACQ,IAAV,CAAgBP,KAAK,CAACK,SAAtB;AACA;AACD,KALD,MAKO,IAAK,CAAEL,KAAK,CAACQ,SAAN,CAAgBC,QAAhB,CAA0B,gBAA1B,CAAP,EAAsD;AAC5DV,MAAAA,SAAS,CAACQ,IAAV,CAAgBP,KAAK,CAACU,SAAtB;AACA;AACD;;AAED,SAAOX,SAAS,CAACY,IAAV,CAAgB,EAAhB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,eAAT,CAA0Bd,OAA1B,EAAoC;AACnC,OAAM,MAAMe,SAAZ,IAAyBf,OAAO,CAACU,SAAjC,EAA6C;AAC5C,QAAKpB,qBAAqB,CAAC0B,cAAtB,CAAsCD,SAAtC,CAAL,EAAyD;AACxD,aAAOzB,qBAAqB,CAAEyB,SAAF,CAA5B;AACA;AACD;AACD;;AAEM,MAAME,YAAN,SAA2BC,kBAA3B,CAAqC;AAC3CC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,cAAL;AACA;;AAEDA,EAAAA,cAAc,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AACA7B,IAAAA,eAAe,GAAG8B,OAAlB,CAA6BvB,OAAF,IAAe;AACzC;AACA,YAAMwB,MAAM,GAAGV,eAAe,CAAEd,OAAF,CAA9B;AACA,YAAMyB,OAAO,GAAG1B,aAAa,CAAEC,OAAF,CAA7B;AACA,YAAM0B,aAAa,GAAG1B,OAAO,CAACU,SAAR,CAAkBC,QAAlB,CACrB,gBADqB,CAAtB;AAGAU,MAAAA,YAAY,CAAEG,MAAF,EAAUC,OAAV,EAAmB;AAC9BE,QAAAA,KAAK,EAAE,KADuB;AAE9BC,QAAAA,cAAc,EAAE,IAFc;AAG9BF,QAAAA;AAH8B,OAAnB,CAAZ,CAPyC,CAazC;;AACA1B,MAAAA,OAAO,CAAC6B,UAAR,CAAmBC,WAAnB,CAAgC9B,OAAhC;AACA,KAfD;AAgBA;;AAED+B,EAAAA,MAAM,GAAG;AACR,WAAO,IAAP;AACA;;AA3B0C;;;;eA8B7B,wBAAgBC,QAAF,IAAgB;AAC5C,QAAM;AAAEX,IAAAA;AAAF,MAAmBW,QAAQ,CAAEC,cAAF,CAAjC;AAEA,SAAO;AAAEZ,IAAAA;AAAF,GAAP;AACA,CAJc,EAIVJ,YAJU,C","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { Component } from '@wordpress/element';\nimport { withDispatch } from '@wordpress/data';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Mapping of server-supported notice class names to an equivalent notices\n * module status.\n *\n * @type {Map}\n */\nconst NOTICE_CLASS_STATUSES = {\n\t'notice-success': 'success',\n\tupdated: 'success',\n\t'notice-warning': 'warning',\n\t'notice-error': 'error',\n\terror: 'error',\n\t'notice-info': 'info',\n};\n\n/**\n * Returns an array of admin notice Elements.\n *\n * @return {Element[]} Admin notice elements.\n */\nfunction getAdminNotices() {\n\t// The order is reversed to match expectations of rendered order, since a\n\t// NoticesList is itself rendered in reverse order (newest to oldest).\n\treturn Array.from(\n\t\tdocument.querySelectorAll( '#wpbody-content > .notice' )\n\t).reverse();\n}\n\n/**\n * Given an admin notice Element, returns the relevant notice content HTML.\n *\n * @param {Element} element Admin notice element.\n *\n * @return {Element} Upgraded notice HTML.\n */\nfunction getNoticeHTML( element ) {\n\tconst fragments = [];\n\n\tfor ( const child of element.childNodes ) {\n\t\tif ( child.nodeType !== child.ELEMENT_NODE ) {\n\t\t\tconst value = child.nodeValue.trim();\n\t\t\tif ( value ) {\n\t\t\t\tfragments.push( child.nodeValue );\n\t\t\t}\n\t\t} else if ( ! child.classList.contains( 'notice-dismiss' ) ) {\n\t\t\tfragments.push( child.outerHTML );\n\t\t}\n\t}\n\n\treturn fragments.join( '' );\n}\n\n/**\n * Given an admin notice Element, returns the upgraded status type, or\n * undefined if one cannot be determined (i.e. one is not assigned).\n *\n * @param {Element} element Admin notice element.\n *\n * @return {?string} Upgraded status type.\n */\nfunction getNoticeStatus( element ) {\n\tfor ( const className of element.classList ) {\n\t\tif ( NOTICE_CLASS_STATUSES.hasOwnProperty( className ) ) {\n\t\t\treturn NOTICE_CLASS_STATUSES[ className ];\n\t\t}\n\t}\n}\n\nexport class AdminNotices extends Component {\n\tcomponentDidMount() {\n\t\tthis.convertNotices();\n\t}\n\n\tconvertNotices() {\n\t\tconst { createNotice } = this.props;\n\t\tgetAdminNotices().forEach( ( element ) => {\n\t\t\t// Convert and create.\n\t\t\tconst status = getNoticeStatus( element );\n\t\t\tconst content = getNoticeHTML( element );\n\t\t\tconst isDismissible = element.classList.contains(\n\t\t\t\t'is-dismissible'\n\t\t\t);\n\t\t\tcreateNotice( status, content, {\n\t\t\t\tspeak: false,\n\t\t\t\t__unstableHTML: true,\n\t\t\t\tisDismissible,\n\t\t\t} );\n\n\t\t\t// Remove (now-redundant) admin notice element.\n\t\t\telement.parentNode.removeChild( element );\n\t\t} );\n\t}\n\n\trender() {\n\t\treturn null;\n\t}\n}\n\nexport default withDispatch( ( dispatch ) => {\n\tconst { createNotice } = dispatch( noticesStore );\n\n\treturn { createNotice };\n} )( AdminNotices );\n"]}