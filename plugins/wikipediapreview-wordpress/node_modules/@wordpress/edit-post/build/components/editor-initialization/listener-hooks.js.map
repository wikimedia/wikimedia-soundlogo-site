{"version":3,"sources":["@wordpress/edit-post/src/components/editor-initialization/listener-hooks.js"],"names":["useBlockSelectionListener","postId","hasBlockSelection","isEditorSidebarOpened","select","blockEditorStore","getBlockSelectionStart","STORE_NAME","openGeneralSidebar","useUpdatePostLinkListener","newPermalink","editorStore","getCurrentPost","link","nodeToUpdate","current","document","querySelector","VIEW_AS_PREVIEW_LINK_SELECTOR","VIEW_AS_LINK_SELECTOR","setAttribute"],"mappings":";;;;;;;AAGA;;AACA;;AACA;;AACA;;AAKA;;AAXA;AACA;AACA;;AAMA;AACA;AACA;;AAOA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,yBAAyB,GAAKC,MAAF,IAAc;AACtD,QAAM;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,MAA+C,qBAClDC,MAAF,KAAgB;AACfF,IAAAA,iBAAiB,EAAE,CAAC,CAAEE,MAAM,CAC3BC,kBAD2B,CAAN,CAEpBC,sBAFoB,EADP;AAIfH,IAAAA,qBAAqB,EAAEC,MAAM,CAAEG,qBAAF,CAAN,CAAqBJ,qBAArB;AAJR,GAAhB,CADoD,EAOpD,CAAEF,MAAF,CAPoD,CAArD;AAUA,QAAM;AAAEO,IAAAA;AAAF,MAAyB,uBAAaD,qBAAb,CAA/B;AAEA,0BAAW,MAAM;AAChB,QAAK,CAAEJ,qBAAP,EAA+B;AAC9B;AACA;;AACD,QAAKD,iBAAL,EAAyB;AACxBM,MAAAA,kBAAkB,CAAE,iBAAF,CAAlB;AACA,KAFD,MAEO;AACNA,MAAAA,kBAAkB,CAAE,oBAAF,CAAlB;AACA;AACD,GATD,EASG,CAAEN,iBAAF,EAAqBC,qBAArB,CATH;AAUA,CAvBM;AAyBP;AACA;AACA;AACA;AACA;AACA;;;;;AACO,MAAMM,yBAAyB,GAAKR,MAAF,IAAc;AACtD,QAAM;AAAES,IAAAA;AAAF,MAAmB,qBACtBN,MAAF,KAAgB;AACfM,IAAAA,YAAY,EAAEN,MAAM,CAAEO,aAAF,CAAN,CAAsBC,cAAtB,GAAuCC;AADtC,GAAhB,CADwB,EAIxB,CAAEZ,MAAF,CAJwB,CAAzB;AAMA,QAAMa,YAAY,GAAG,sBAArB;AAEA,0BAAW,MAAM;AAChBA,IAAAA,YAAY,CAACC,OAAb,GACCC,QAAQ,CAACC,aAAT,CAAwBC,wCAAxB,KACAF,QAAQ,CAACC,aAAT,CAAwBE,gCAAxB,CAFD;AAGA,GAJD,EAIG,CAAElB,MAAF,CAJH;AAMA,0BAAW,MAAM;AAChB,QAAK,CAAES,YAAF,IAAkB,CAAEI,YAAY,CAACC,OAAtC,EAAgD;AAC/C;AACA;;AACDD,IAAAA,YAAY,CAACC,OAAb,CAAqBK,YAArB,CAAmC,MAAnC,EAA2CV,YAA3C;AACA,GALD,EAKG,CAAEA,YAAF,CALH;AAMA,CArBM","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEffect, useRef } from '@wordpress/element';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { store as editorStore } from '@wordpress/editor';\n\n/**\n * Internal dependencies\n */\nimport {\n\tSTORE_NAME,\n\tVIEW_AS_LINK_SELECTOR,\n\tVIEW_AS_PREVIEW_LINK_SELECTOR,\n} from '../../store/constants';\n\n/**\n * This listener hook monitors for block selection and triggers the appropriate\n * sidebar state.\n *\n * @param {number} postId The current post id.\n */\nexport const useBlockSelectionListener = ( postId ) => {\n\tconst { hasBlockSelection, isEditorSidebarOpened } = useSelect(\n\t\t( select ) => ( {\n\t\t\thasBlockSelection: !! select(\n\t\t\t\tblockEditorStore\n\t\t\t).getBlockSelectionStart(),\n\t\t\tisEditorSidebarOpened: select( STORE_NAME ).isEditorSidebarOpened(),\n\t\t} ),\n\t\t[ postId ]\n\t);\n\n\tconst { openGeneralSidebar } = useDispatch( STORE_NAME );\n\n\tuseEffect( () => {\n\t\tif ( ! isEditorSidebarOpened ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( hasBlockSelection ) {\n\t\t\topenGeneralSidebar( 'edit-post/block' );\n\t\t} else {\n\t\t\topenGeneralSidebar( 'edit-post/document' );\n\t\t}\n\t}, [ hasBlockSelection, isEditorSidebarOpened ] );\n};\n\n/**\n * This listener hook monitors any change in permalink and updates the view\n * post link in the admin bar.\n *\n * @param {number} postId\n */\nexport const useUpdatePostLinkListener = ( postId ) => {\n\tconst { newPermalink } = useSelect(\n\t\t( select ) => ( {\n\t\t\tnewPermalink: select( editorStore ).getCurrentPost().link,\n\t\t} ),\n\t\t[ postId ]\n\t);\n\tconst nodeToUpdate = useRef();\n\n\tuseEffect( () => {\n\t\tnodeToUpdate.current =\n\t\t\tdocument.querySelector( VIEW_AS_PREVIEW_LINK_SELECTOR ) ||\n\t\t\tdocument.querySelector( VIEW_AS_LINK_SELECTOR );\n\t}, [ postId ] );\n\n\tuseEffect( () => {\n\t\tif ( ! newPermalink || ! nodeToUpdate.current ) {\n\t\t\treturn;\n\t\t}\n\t\tnodeToUpdate.current.setAttribute( 'href', newPermalink );\n\t}, [ newPermalink ] );\n};\n"]}