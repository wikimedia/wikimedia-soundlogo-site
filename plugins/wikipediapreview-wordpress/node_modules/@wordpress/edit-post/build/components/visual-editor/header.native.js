"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _i18n = require("@wordpress/i18n");

var _data = require("@wordpress/data");

var _compose = require("@wordpress/compose");

var _editor = require("@wordpress/editor");

var _components = require("@wordpress/components");

var _blockEditor = require("@wordpress/block-editor");

var _style = _interopRequireDefault(require("./style.scss"));

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
const Header = (0, _element.memo)(function EditorHeader({
  editTitle,
  setTitleRef,
  title,
  getStylesFromColorScheme
}) {
  const blockHolderFocusedStyle = getStylesFromColorScheme(_style.default.blockHolderFocused, _style.default.blockHolderFocusedDark);
  return (0, _element.createElement)(_components.ReadableContentView, null, (0, _element.createElement)(_editor.PostTitle, {
    innerRef: setTitleRef,
    title: title,
    onUpdate: editTitle,
    placeholder: (0, _i18n.__)('Add title'),
    borderStyle: _style.default.blockHolderFullBordered,
    focusedBorderColor: blockHolderFocusedStyle.borderColor,
    accessibilityLabel: "post-title"
  }));
}, (prevProps, nextProps) => prevProps.title === nextProps.title);

var _default = (0, _compose.compose)([(0, _data.withSelect)(select => {
  const {
    getEditedPostAttribute
  } = select('core/editor');
  return {
    title: getEditedPostAttribute('title')
  };
}), (0, _data.withDispatch)(dispatch => {
  const {
    editPost
  } = dispatch('core/editor');
  const {
    clearSelectedBlock
  } = dispatch(_blockEditor.store);
  return {
    clearSelectedBlock,

    editTitle(title) {
      editPost({
        title
      });
    }

  };
}), _compose.withPreferredColorScheme])(Header);

exports.default = _default;
//# sourceMappingURL=header.native.js.map