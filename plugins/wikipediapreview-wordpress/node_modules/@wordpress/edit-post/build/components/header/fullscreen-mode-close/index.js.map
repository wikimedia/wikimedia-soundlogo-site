{"version":3,"sources":["@wordpress/edit-post/src/components/header/fullscreen-mode-close/index.js"],"names":["FullscreenModeClose","showTooltip","icon","href","isActive","isRequestingSiteIcon","postType","siteIconUrl","select","getCurrentPostType","editorStore","isFeatureActive","editPostStore","getEntityRecord","getPostType","isResolving","coreStore","siteData","undefined","site_icon_url","buttonIcon","wordpress","post_type","slug"],"mappings":";;;;;;;;;AAGA;;AAKA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;AAnBA;AACA;AACA;;AAGA;AACA;AACA;;AASA;AACA;AACA;AAGA,SAASA,mBAAT,CAA8B;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,IAAf;AAAqBC,EAAAA;AAArB,CAA9B,EAA4D;AAC3D,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,oBAAZ;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA;AAA5C,MAA4D,qBAC/DC,MAAF,IAAc;AACb,UAAM;AAAEC,MAAAA;AAAF,QAAyBD,MAAM,CAAEE,aAAF,CAArC;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAsBH,MAAM,CAAEI,YAAF,CAAlC;AACA,UAAM;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA,WAAnB;AAAgCC,MAAAA;AAAhC,QAAgDP,MAAM,CAC3DQ,eAD2D,CAA5D;AAGA,UAAMC,QAAQ,GACbJ,eAAe,CAAE,MAAF,EAAU,gBAAV,EAA4BK,SAA5B,CAAf,IAA0D,EAD3D;AAGA,WAAO;AACNd,MAAAA,QAAQ,EAAEO,eAAe,CAAE,gBAAF,CADnB;AAENN,MAAAA,oBAAoB,EAAEU,WAAW,CAAE,iBAAF,EAAqB,CACrD,MADqD,EAErD,gBAFqD,EAGrDG,SAHqD,CAArB,CAF3B;AAONZ,MAAAA,QAAQ,EAAEQ,WAAW,CAAEL,kBAAkB,EAApB,CAPf;AAQNF,MAAAA,WAAW,EAAEU,QAAQ,CAACE;AARhB,KAAP;AAUA,GApBgE,EAqBjE,EArBiE,CAAlE;;AAwBA,MAAK,CAAEf,QAAF,IAAc,CAAEE,QAArB,EAAgC;AAC/B,WAAO,IAAP;AACA;;AAED,MAAIc,UAAU,GAAG,4BAAC,gBAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAkB,IAAA,IAAI,EAAGC;AAAzB,IAAjB;;AAEA,MAAKd,WAAL,EAAmB;AAClBa,IAAAA,UAAU,GACT;AACC,MAAA,GAAG,EAAG,cAAI,WAAJ,CADP;AAEC,MAAA,SAAS,EAAC,2CAFX;AAGC,MAAA,GAAG,EAAGb;AAHP,MADD;AAOA;;AAED,MAAKF,oBAAL,EAA4B;AAC3Be,IAAAA,UAAU,GAAG,IAAb;AACA,GA3C0D,CA6C3D;;;AACA,MAAKlB,IAAL,EAAY;AACXkB,IAAAA,UAAU,GAAG,4BAAC,gBAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAkB,MAAA,IAAI,EAAGlB;AAAzB,MAAb;AACA;;AAED,SACC,4BAAC,kBAAD;AACC,IAAA,SAAS,EAAC,0CADX;AAEC,IAAA,IAAI,EACHC,IADG,aACHA,IADG,cACHA,IADG,GAEH,uBAAc,UAAd,EAA0B;AACzBmB,MAAAA,SAAS,EAAEhB,QAAQ,CAACiB;AADK,KAA1B,CAJF;AAQC,IAAA,KAAK,EAAG,iBAAKjB,QAAL,EAAe,CAAE,QAAF,EAAY,YAAZ,CAAf,EAA2C,cAAI,MAAJ,CAA3C,CART;AASC,IAAA,WAAW,EAAGL;AATf,KAWGmB,UAXH,CADD;AAeA;;eAEcpB,mB","sourcesContent":["/**\n * External dependencies\n */\nimport { get } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { Button, Icon } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { addQueryArgs } from '@wordpress/url';\nimport { wordpress } from '@wordpress/icons';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nfunction FullscreenModeClose( { showTooltip, icon, href } ) {\n\tconst { isActive, isRequestingSiteIcon, postType, siteIconUrl } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getCurrentPostType } = select( editorStore );\n\t\t\tconst { isFeatureActive } = select( editPostStore );\n\t\t\tconst { getEntityRecord, getPostType, isResolving } = select(\n\t\t\t\tcoreStore\n\t\t\t);\n\t\t\tconst siteData =\n\t\t\t\tgetEntityRecord( 'root', '__unstableBase', undefined ) || {};\n\n\t\t\treturn {\n\t\t\t\tisActive: isFeatureActive( 'fullscreenMode' ),\n\t\t\t\tisRequestingSiteIcon: isResolving( 'getEntityRecord', [\n\t\t\t\t\t'root',\n\t\t\t\t\t'__unstableBase',\n\t\t\t\t\tundefined,\n\t\t\t\t] ),\n\t\t\t\tpostType: getPostType( getCurrentPostType() ),\n\t\t\t\tsiteIconUrl: siteData.site_icon_url,\n\t\t\t};\n\t\t},\n\t\t[]\n\t);\n\n\tif ( ! isActive || ! postType ) {\n\t\treturn null;\n\t}\n\n\tlet buttonIcon = <Icon size=\"36px\" icon={ wordpress } />;\n\n\tif ( siteIconUrl ) {\n\t\tbuttonIcon = (\n\t\t\t<img\n\t\t\t\talt={ __( 'Site Icon' ) }\n\t\t\t\tclassName=\"edit-post-fullscreen-mode-close_site-icon\"\n\t\t\t\tsrc={ siteIconUrl }\n\t\t\t/>\n\t\t);\n\t}\n\n\tif ( isRequestingSiteIcon ) {\n\t\tbuttonIcon = null;\n\t}\n\n\t// Override default icon if custom icon is provided via props.\n\tif ( icon ) {\n\t\tbuttonIcon = <Icon size=\"36px\" icon={ icon } />;\n\t}\n\n\treturn (\n\t\t<Button\n\t\t\tclassName=\"edit-post-fullscreen-mode-close has-icon\"\n\t\t\thref={\n\t\t\t\thref ??\n\t\t\t\taddQueryArgs( 'edit.php', {\n\t\t\t\t\tpost_type: postType.slug,\n\t\t\t\t} )\n\t\t\t}\n\t\t\tlabel={ get( postType, [ 'labels', 'view_items' ], __( 'Back' ) ) }\n\t\t\tshowTooltip={ showTooltip }\n\t\t>\n\t\t\t{ buttonIcon }\n\t\t</Button>\n\t);\n}\n\nexport default FullscreenModeClose;\n"]}