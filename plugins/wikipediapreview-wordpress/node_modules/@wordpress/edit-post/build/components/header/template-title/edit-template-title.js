"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = EditTemplateTitle;

var _element = require("@wordpress/element");

var _lodash = require("lodash");

var _i18n = require("@wordpress/i18n");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _editor = require("@wordpress/editor");

var _coreData = require("@wordpress/core-data");

var _store = require("../../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function EditTemplateTitle() {
  const {
    template
  } = (0, _data.useSelect)(select => {
    const {
      getEditedPostTemplate
    } = select(_store.store);
    return {
      template: getEditedPostTemplate()
    };
  }, []);
  const {
    editEntityRecord
  } = (0, _data.useDispatch)(_coreData.store);
  const {
    getEditorSettings
  } = (0, _data.useSelect)(_editor.store);
  const {
    updateEditorSettings
  } = (0, _data.useDispatch)(_editor.store);
  let templateTitle = (0, _i18n.__)('Default');

  if (template !== null && template !== void 0 && template.title) {
    templateTitle = template.title;
  } else if (!!template) {
    templateTitle = template.slug;
  }

  return (0, _element.createElement)(_components.TextControl, {
    label: (0, _i18n.__)('Title'),
    value: templateTitle,
    help: (0, _i18n.__)('Give the template a title that indicates its purpose, e.g. "Full Width".'),
    onChange: newTitle => {
      const settings = getEditorSettings();
      const newAvailableTemplates = (0, _lodash.mapValues)(settings.availableTemplates, (existingTitle, id) => {
        if (id !== template.slug) {
          return existingTitle;
        }

        return newTitle;
      });
      updateEditorSettings({ ...settings,
        availableTemplates: newAvailableTemplates
      });
      editEntityRecord('postType', 'wp_template', template.id, {
        title: newTitle
      });
    }
  });
}
//# sourceMappingURL=edit-template-title.js.map