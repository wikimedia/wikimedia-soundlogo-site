"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _editor = require("@wordpress/editor");

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _i18n = require("@wordpress/i18n");

var _keycodes = require("@wordpress/keycodes");

var _compose = require("@wordpress/compose");

var _store = require("../../store");

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */
function TextEditor({
  onExit,
  isRichEditingEnabled
}) {
  return (0, _element.createElement)("div", {
    className: "edit-post-text-editor"
  }, isRichEditingEnabled && (0, _element.createElement)("div", {
    className: "edit-post-text-editor__toolbar"
  }, (0, _element.createElement)("h2", null, (0, _i18n.__)('Editing code')), (0, _element.createElement)(_components.Button, {
    variant: "tertiary",
    onClick: onExit,
    shortcut: _keycodes.displayShortcut.secondary('m')
  }, (0, _i18n.__)('Exit code editor')), (0, _element.createElement)(_editor.TextEditorGlobalKeyboardShortcuts, null)), (0, _element.createElement)("div", {
    className: "edit-post-text-editor__body"
  }, (0, _element.createElement)(_editor.PostTitle, null), (0, _element.createElement)(_editor.PostTextEditor, null)));
}

var _default = (0, _compose.compose)((0, _data.withSelect)(select => ({
  isRichEditingEnabled: select(_editor.store).getEditorSettings().richEditingEnabled
})), (0, _data.withDispatch)(dispatch => {
  return {
    onExit() {
      dispatch(_store.store).switchEditorMode('visual');
    }

  };
}))(TextEditor);

exports.default = _default;
//# sourceMappingURL=index.js.map