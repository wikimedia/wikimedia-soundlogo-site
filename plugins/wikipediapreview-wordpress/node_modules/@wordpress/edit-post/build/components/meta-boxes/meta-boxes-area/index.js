"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _element = require("@wordpress/element");

var _classnames = _interopRequireDefault(require("classnames"));

var _components = require("@wordpress/components");

var _data = require("@wordpress/data");

var _store = require("../../../store");

/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Render metabox area.
 *
 * @param {Object} props          Component props.
 * @param {string} props.location metabox location.
 * @return {WPComponent} The component to be rendered.
 */
function MetaBoxesArea({
  location
}) {
  const container = (0, _element.useRef)(null);
  const formRef = (0, _element.useRef)(null);
  (0, _element.useEffect)(() => {
    formRef.current = document.querySelector('.metabox-location-' + location);

    if (formRef.current) {
      container.current.appendChild(formRef.current);
    }

    return () => {
      if (formRef.current) {
        document.querySelector('#metaboxes').appendChild(formRef.current);
      }
    };
  }, [location]);
  const isSaving = (0, _data.useSelect)(select => {
    return select(_store.store).isSavingMetaBoxes();
  }, []);
  const classes = (0, _classnames.default)('edit-post-meta-boxes-area', `is-${location}`, {
    'is-loading': isSaving
  });
  return (0, _element.createElement)("div", {
    className: classes
  }, isSaving && (0, _element.createElement)(_components.Spinner, null), (0, _element.createElement)("div", {
    className: "edit-post-meta-boxes-area__container",
    ref: container
  }), (0, _element.createElement)("div", {
    className: "edit-post-meta-boxes-area__clear"
  }));
}

var _default = MetaBoxesArea;
exports.default = _default;
//# sourceMappingURL=index.js.map