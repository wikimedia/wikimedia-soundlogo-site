{"version":3,"sources":["@wordpress/components/src/ui/color-picker/picker.tsx"],"names":["HslColorPicker","HslaColorPicker","Picker","color","enableAlpha","onChange","reactColorfulColor","h","s","Math","floor","l","a","Component"],"mappings":";;AAAA;AACA;AACA;AAEA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,gBAAhD;AAQA,OAAO,MAAMC,MAAM,GAAG,CAAE;AAAEC,EAAAA,KAAF;AAASC,EAAAA,WAAT;AAAsBC,EAAAA;AAAtB,CAAF,KAAqD;AAC1E;AACA;AACA,QAAMC,kBAAkB,GAAG;AAC1BC,IAAAA,CAAC,EAAEJ,KAAK,CAACI,CADiB;AAE1BC,IAAAA,CAAC,EAAEL,KAAK,CAACK,CAAN,IAAW,CAAX,GAAeC,IAAI,CAACC,KAAL,CAAYP,KAAK,CAACK,CAAN,GAAU,GAAtB,CAAf,GAA6CL,KAAK,CAACK,CAF5B;AAG1BG,IAAAA,CAAC,EAAER,KAAK,CAACQ,CAAN,IAAW,CAAX,GAAeF,IAAI,CAACC,KAAL,CAAYP,KAAK,CAACQ,CAAN,GAAU,GAAtB,CAAf,GAA6CR,KAAK,CAACQ,CAH5B;AAI1BC,IAAAA,CAAC,EAAIT,KAAF,CAA+BS;AAJR,GAA3B;AAOA,QAAMC,SAAS,GAAGT,WAAW,GAAGH,eAAH,GAAqBD,cAAlD;AAEA,SAAO,cAAC,SAAD;AAAW,IAAA,KAAK,EAAGM,kBAAnB;AAAwC,IAAA,QAAQ,EAAGD;AAAnD,IAAP;AACA,CAbM","sourcesContent":["/**\n * External dependencies\n */\nimport type { ColorFormats } from 'tinycolor2';\nimport { HslColorPicker, HslaColorPicker } from 'react-colorful';\n\ninterface PickerProps {\n\tcolor: ColorFormats.HSL | ColorFormats.HSLA;\n\tenableAlpha: boolean;\n\tonChange: ( nextColor: ColorFormats.HSL | ColorFormats.HSLA ) => void;\n}\n\nexport const Picker = ( { color, enableAlpha, onChange }: PickerProps ) => {\n\t// RC accepts s and l as a range from 0 - 100, whereas tinycolor expects a decimal value representing the percentage\n\t// so we need to make sure that we're giving RC the correct color format that it expects\n\tconst reactColorfulColor = {\n\t\th: color.h,\n\t\ts: color.s <= 1 ? Math.floor( color.s * 100 ) : color.s,\n\t\tl: color.l <= 1 ? Math.floor( color.l * 100 ) : color.l,\n\t\ta: ( color as ColorFormats.HSLA ).a,\n\t};\n\n\tconst Component = enableAlpha ? HslaColorPicker : HslColorPicker;\n\n\treturn <Component color={ reactColorfulColor } onChange={ onChange } />;\n};\n"]}