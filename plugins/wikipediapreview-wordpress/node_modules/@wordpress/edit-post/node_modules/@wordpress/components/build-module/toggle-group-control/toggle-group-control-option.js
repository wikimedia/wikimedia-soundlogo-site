import _extends from "@babel/runtime/helpers/esm/extends";
import { createElement } from "@wordpress/element";

/**
 * WordPress dependencies
 */
import { useInstanceId } from '@wordpress/compose';
/**
 * Internal dependencies
 */

import { contextConnect, useContextSystem } from '../ui/context';
import ToggleGroupControlButton from './toggle-group-control-button';
import { useToggleGroupControlContext } from './toggle-group-control-context';

function getShowSeparator(toggleGroupControlContext, index) {
  var _items$index, _items;

  const {
    currentId,
    items
  } = toggleGroupControlContext;
  const isLast = index === items.length - 1;
  const isActive = ((_items$index = items[index]) === null || _items$index === void 0 ? void 0 : _items$index.id) === currentId;
  const isNextActive = ((_items = items[index + 1]) === null || _items === void 0 ? void 0 : _items.id) === currentId;
  let showSeparator = true;

  if (items.length < 3) {
    showSeparator = false;
  }

  if (isActive || isNextActive || isLast) {
    showSeparator = false;
  }

  return showSeparator;
}

function ToggleGroupControlOption(props, forwardedRef) {
  const toggleGroupControlContext = useToggleGroupControlContext();
  const id = useInstanceId(ToggleGroupControlOption, toggleGroupControlContext.baseId || 'toggle-group-control-option');
  const buttonProps = useContextSystem({ ...props,
    id
  }, 'ToggleGroupControlOption');
  const index = toggleGroupControlContext.items.findIndex(item => item.id === buttonProps.id);
  const showSeparator = getShowSeparator(toggleGroupControlContext, index);
  return createElement(ToggleGroupControlButton, _extends({
    ref: forwardedRef
  }, toggleGroupControlContext, buttonProps, {
    showSeparator
  }));
}

export default contextConnect(ToggleGroupControlOption, 'ToggleGroupControlOption');
//# sourceMappingURL=toggle-group-control-option.js.map