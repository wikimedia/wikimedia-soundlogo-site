{"version":3,"sources":["@wordpress/components/src/toggle-group-control/component.tsx"],"names":["noop","ToggleGroupControl","props","forwardedRef","className","isAdaptiveWidth","isBlock","label","hideLabelFromVision","help","onChange","value","children","otherProps","cx","containerRef","resizeListener","sizes","baseId","toString","radio","state","setState","classes","styles","block","View","width"],"mappings":";;;;;;;;;;;AAWA;;;;AAPA;;AACA;;AAOA;;AAKA;;AAKA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AA5BA;AACA;AACA;AACA;;AAWA;AACA;AACA;AAcA,MAAMA,IAAI,GAAG,MAAM,CAAE,CAArB;;AAEA,SAASC,kBAAT,CACCC,KADD,EAECC,YAFD,EAGE;AACD,QAAM;AACLC,IAAAA,SADK;AAELC,IAAAA,eAAe,GAAG,KAFb;AAGLC,IAAAA,OAAO,GAAG,KAHL;AAILC,IAAAA,KAJK;AAKLC,IAAAA,mBAAmB,GAAG,KALjB;AAMLC,IAAAA,IANK;AAOLC,IAAAA,QAAQ,GAAGV,IAPN;AAQLW,IAAAA,KARK;AASLC,IAAAA,QATK;AAUL,OAAGC;AAVE,MAWF,+BAAkBX,KAAlB,EAAyB,oBAAzB,CAXJ;AAYA,QAAMY,EAAE,GAAG,mBAAX;AACA,QAAMC,YAAY,GAAG,sBAArB;AACA,QAAM,CAAEC,cAAF,EAAkBC,KAAlB,IAA4B,gCAAlC;AACA,QAAMC,MAAM,GAAG,4BACdjB,kBADc,EAEd,sBAFc,EAGbkB,QAHa,EAAf;AAIA,QAAMC,KAAK,GAAG,2BAAe;AAC5BF,IAAAA,MAD4B;AAE5BG,IAAAA,KAAK,EAAEV;AAFqB,GAAf,CAAd,CApBC,CAyBD;;AACA,8BAAiB,MAAM;AACtBD,IAAAA,QAAQ,CAAEU,KAAK,CAACC,KAAR,CAAR;AACA,GAFD,EAEG,CAAED,KAAK,CAACC,KAAR,CAFH,EA1BC,CA8BD;;AACA,8BAAiB,MAAM;AACtB,QAAKV,KAAK,KAAKS,KAAK,CAACC,KAArB,EAA6B;AAC5BD,MAAAA,KAAK,CAACE,QAAN,CAAgBX,KAAhB;AACA;AACD,GAJD,EAIG,CAAEA,KAAF,CAJH;AAMA,QAAMY,OAAO,GAAG,sBACf,MACCT,EAAE,CACDU,MAAM,CAACvB,kBADN,EAEDK,OAAO,IAAIkB,MAAM,CAACC,KAFjB,EAGD,QAHC,EAIDrB,SAJC,CAFY,EAQf,CAAEA,SAAF,EAAaE,OAAb,CARe,CAAhB;AAUA,SACC,4BAAC,oBAAD;AAAa,IAAA,IAAI,EAAGG;AAApB,KACC,4BAAC,kCAAD,CAA2B,QAA3B;AACC,IAAA,KAAK,EAAG,EAAE,GAAGW,KAAL;AAAYd,MAAAA,OAAO,EAAE,CAAED;AAAvB;AADT,KAGG,CAAEG,mBAAF,IACD,yCACC,4BAAC,oBAAD,CAAa,WAAb,QACGD,KADH,CADD,CAJF,EAUC,4BAAC,kBAAD,6BACMa,KADN;AAEC,kBAAab,KAFd;AAGC,IAAA,EAAE,EAAGmB,UAHN;AAIC,IAAA,SAAS,EAAGH;AAJb,KAKMV,UALN;AAMC,IAAA,GAAG,EAAG,2BAAc,CAAEE,YAAF,EAAgBZ,YAAhB,CAAd;AANP,MAQGa,cARH,EASC,4BAAC,mCAAD,6BACMI,KADN;AAEC,IAAA,YAAY,EAAGL,YAFhB;AAGC,IAAA,cAAc,EAAGE,KAAK,CAACU,KAHxB;AAIC,IAAA,eAAe,EAAGtB;AAJnB,KATD,EAeGO,QAfH,CAVD,CADD,CADD;AAgCA;;eAEc,6BAAgBX,kBAAhB,EAAoC,oBAApC,C","sourcesContent":["/**\n * External dependencies\n */\n// eslint-disable-next-line no-restricted-imports\nimport { RadioGroup, useRadioState } from 'reakit';\nimport useResizeAware from 'react-resize-aware';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { useRef, useMemo } from '@wordpress/element';\nimport { useMergeRefs, useInstanceId } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport {\n\tcontextConnect,\n\tuseContextSystem,\n\tWordPressComponentProps,\n} from '../ui/context';\nimport { useUpdateEffect, useCx } from '../utils/hooks';\nimport { View } from '../view';\nimport BaseControl from '../base-control';\nimport ToggleGroupControlBackdrop from './toggle-group-control-backdrop';\nimport type { ToggleGroupControlProps } from './types';\nimport ToggleGroupControlContext from './toggle-group-control-context';\nimport * as styles from './styles';\n\nconst noop = () => {};\n\nfunction ToggleGroupControl(\n\tprops: WordPressComponentProps< ToggleGroupControlProps, 'input' >,\n\tforwardedRef: import('react').Ref< any >\n) {\n\tconst {\n\t\tclassName,\n\t\tisAdaptiveWidth = false,\n\t\tisBlock = false,\n\t\tlabel,\n\t\thideLabelFromVision = false,\n\t\thelp,\n\t\tonChange = noop,\n\t\tvalue,\n\t\tchildren,\n\t\t...otherProps\n\t} = useContextSystem( props, 'ToggleGroupControl' );\n\tconst cx = useCx();\n\tconst containerRef = useRef();\n\tconst [ resizeListener, sizes ] = useResizeAware();\n\tconst baseId = useInstanceId(\n\t\tToggleGroupControl,\n\t\t'toggle-group-control'\n\t).toString();\n\tconst radio = useRadioState( {\n\t\tbaseId,\n\t\tstate: value,\n\t} );\n\n\t// Propagate radio.state change\n\tuseUpdateEffect( () => {\n\t\tonChange( radio.state );\n\t}, [ radio.state ] );\n\n\t// Sync incoming value with radio.state\n\tuseUpdateEffect( () => {\n\t\tif ( value !== radio.state ) {\n\t\t\tradio.setState( value );\n\t\t}\n\t}, [ value ] );\n\n\tconst classes = useMemo(\n\t\t() =>\n\t\t\tcx(\n\t\t\t\tstyles.ToggleGroupControl,\n\t\t\t\tisBlock && styles.block,\n\t\t\t\t'medium',\n\t\t\t\tclassName\n\t\t\t),\n\t\t[ className, isBlock ]\n\t);\n\treturn (\n\t\t<BaseControl help={ help }>\n\t\t\t<ToggleGroupControlContext.Provider\n\t\t\t\tvalue={ { ...radio, isBlock: ! isAdaptiveWidth } }\n\t\t\t>\n\t\t\t\t{ ! hideLabelFromVision && (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<BaseControl.VisualLabel>\n\t\t\t\t\t\t\t{ label }\n\t\t\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t\t<RadioGroup\n\t\t\t\t\t{ ...radio }\n\t\t\t\t\taria-label={ label }\n\t\t\t\t\tas={ View }\n\t\t\t\t\tclassName={ classes }\n\t\t\t\t\t{ ...otherProps }\n\t\t\t\t\tref={ useMergeRefs( [ containerRef, forwardedRef ] ) }\n\t\t\t\t>\n\t\t\t\t\t{ resizeListener }\n\t\t\t\t\t<ToggleGroupControlBackdrop\n\t\t\t\t\t\t{ ...radio }\n\t\t\t\t\t\tcontainerRef={ containerRef }\n\t\t\t\t\t\tcontainerWidth={ sizes.width }\n\t\t\t\t\t\tisAdaptiveWidth={ isAdaptiveWidth }\n\t\t\t\t\t/>\n\t\t\t\t\t{ children }\n\t\t\t\t</RadioGroup>\n\t\t\t</ToggleGroupControlContext.Provider>\n\t\t</BaseControl>\n\t);\n}\n\nexport default contextConnect( ToggleGroupControl, 'ToggleGroupControl' );\n"]}