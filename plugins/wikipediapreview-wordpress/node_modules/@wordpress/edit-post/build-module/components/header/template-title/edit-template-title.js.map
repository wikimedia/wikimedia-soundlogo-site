{"version":3,"sources":["@wordpress/edit-post/src/components/header/template-title/edit-template-title.js"],"names":["mapValues","__","TextControl","useDispatch","useSelect","store","editorStore","coreStore","editPostStore","EditTemplateTitle","template","select","getEditedPostTemplate","editEntityRecord","getEditorSettings","updateEditorSettings","templateTitle","title","slug","newTitle","settings","newAvailableTemplates","availableTemplates","existingTitle","id"],"mappings":";;AAAA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,QAA1B;AAEA;AACA;AACA;;AACA,SAASC,EAAT,QAAmB,iBAAnB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,iBAAvC;AACA,SAASC,KAAK,IAAIC,WAAlB,QAAqC,mBAArC;AACA,SAASD,KAAK,IAAIE,SAAlB,QAAmC,sBAAnC;AAEA;AACA;AACA;;AACA,SAASF,KAAK,IAAIG,aAAlB,QAAuC,gBAAvC;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAC3C,QAAM;AAAEC,IAAAA;AAAF,MAAeN,SAAS,CAAIO,MAAF,IAAc;AAC7C,UAAM;AAAEC,MAAAA;AAAF,QAA4BD,MAAM,CAAEH,aAAF,CAAxC;AACA,WAAO;AACNE,MAAAA,QAAQ,EAAEE,qBAAqB;AADzB,KAAP;AAGA,GAL6B,EAK3B,EAL2B,CAA9B;AAOA,QAAM;AAAEC,IAAAA;AAAF,MAAuBV,WAAW,CAAEI,SAAF,CAAxC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAwBV,SAAS,CAAEE,WAAF,CAAvC;AACA,QAAM;AAAES,IAAAA;AAAF,MAA2BZ,WAAW,CAAEG,WAAF,CAA5C;;AAEA,MAAIU,aAAa,GAAGf,EAAE,CAAE,SAAF,CAAtB;;AACA,MAAKS,QAAL,aAAKA,QAAL,eAAKA,QAAQ,CAAEO,KAAf,EAAuB;AACtBD,IAAAA,aAAa,GAAGN,QAAQ,CAACO,KAAzB;AACA,GAFD,MAEO,IAAK,CAAC,CAAEP,QAAR,EAAmB;AACzBM,IAAAA,aAAa,GAAGN,QAAQ,CAACQ,IAAzB;AACA;;AAED,SACC,cAAC,WAAD;AACC,IAAA,KAAK,EAAGjB,EAAE,CAAE,OAAF,CADX;AAEC,IAAA,KAAK,EAAGe,aAFT;AAGC,IAAA,IAAI,EAAGf,EAAE,CACR,0EADQ,CAHV;AAMC,IAAA,QAAQ,EAAKkB,QAAF,IAAgB;AAC1B,YAAMC,QAAQ,GAAGN,iBAAiB,EAAlC;AACA,YAAMO,qBAAqB,GAAGrB,SAAS,CACtCoB,QAAQ,CAACE,kBAD6B,EAEtC,CAAEC,aAAF,EAAiBC,EAAjB,KAAyB;AACxB,YAAKA,EAAE,KAAKd,QAAQ,CAACQ,IAArB,EAA4B;AAC3B,iBAAOK,aAAP;AACA;;AACD,eAAOJ,QAAP;AACA,OAPqC,CAAvC;AASAJ,MAAAA,oBAAoB,CAAE,EACrB,GAAGK,QADkB;AAErBE,QAAAA,kBAAkB,EAAED;AAFC,OAAF,CAApB;AAIAR,MAAAA,gBAAgB,CAAE,UAAF,EAAc,aAAd,EAA6BH,QAAQ,CAACc,EAAtC,EAA0C;AACzDP,QAAAA,KAAK,EAAEE;AADkD,OAA1C,CAAhB;AAGA;AAxBF,IADD;AA4BA","sourcesContent":["/**\n * External dependencies\n */\nimport { mapValues } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { TextControl } from '@wordpress/components';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as coreStore } from '@wordpress/core-data';\n\n/**\n * Internal dependencies\n */\nimport { store as editPostStore } from '../../../store';\n\nexport default function EditTemplateTitle() {\n\tconst { template } = useSelect( ( select ) => {\n\t\tconst { getEditedPostTemplate } = select( editPostStore );\n\t\treturn {\n\t\t\ttemplate: getEditedPostTemplate(),\n\t\t};\n\t}, [] );\n\n\tconst { editEntityRecord } = useDispatch( coreStore );\n\tconst { getEditorSettings } = useSelect( editorStore );\n\tconst { updateEditorSettings } = useDispatch( editorStore );\n\n\tlet templateTitle = __( 'Default' );\n\tif ( template?.title ) {\n\t\ttemplateTitle = template.title;\n\t} else if ( !! template ) {\n\t\ttemplateTitle = template.slug;\n\t}\n\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={ __( 'Title' ) }\n\t\t\tvalue={ templateTitle }\n\t\t\thelp={ __(\n\t\t\t\t'Give the template a title that indicates its purpose, e.g. \"Full Width\".'\n\t\t\t) }\n\t\t\tonChange={ ( newTitle ) => {\n\t\t\t\tconst settings = getEditorSettings();\n\t\t\t\tconst newAvailableTemplates = mapValues(\n\t\t\t\t\tsettings.availableTemplates,\n\t\t\t\t\t( existingTitle, id ) => {\n\t\t\t\t\t\tif ( id !== template.slug ) {\n\t\t\t\t\t\t\treturn existingTitle;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn newTitle;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tupdateEditorSettings( {\n\t\t\t\t\t...settings,\n\t\t\t\t\tavailableTemplates: newAvailableTemplates,\n\t\t\t\t} );\n\t\t\t\teditEntityRecord( 'postType', 'wp_template', template.id, {\n\t\t\t\t\ttitle: newTitle,\n\t\t\t\t} );\n\t\t\t} }\n\t\t/>\n\t);\n}\n"]}