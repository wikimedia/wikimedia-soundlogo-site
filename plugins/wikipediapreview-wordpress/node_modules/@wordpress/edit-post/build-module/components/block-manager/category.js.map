{"version":3,"sources":["@wordpress/edit-post/src/components/block-manager/category.js"],"names":["includes","map","without","useContext","useMemo","withSelect","withDispatch","compose","withInstanceId","CheckboxControl","BlockTypesChecklist","EditPostSettings","store","editPostStore","BlockManagerCategory","instanceId","title","blockTypes","hiddenBlockTypes","toggleVisible","toggleAllVisible","settings","allowedBlockTypes","filteredBlockTypes","filter","name","length","checkedBlockNames","titleId","isAllChecked","ariaChecked","select","getPreference","dispatch","ownProps","showBlockTypes","hideBlockTypes","blockName","nextIsChecked","blockNames"],"mappings":"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","sourcesContent":["/**\n * External dependencies\n */\nimport { includes, map, without } from 'lodash';\n\n/**\n * WordPress dependencies\n */\nimport { useContext, useMemo } from '@wordpress/element';\nimport { withSelect, withDispatch } from '@wordpress/data';\nimport { compose, withInstanceId } from '@wordpress/compose';\nimport { CheckboxControl } from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesChecklist from './checklist';\nimport EditPostSettings from '../edit-post-settings';\nimport { store as editPostStore } from '../../store';\n\nfunction BlockManagerCategory( {\n\tinstanceId,\n\ttitle,\n\tblockTypes,\n\thiddenBlockTypes,\n\ttoggleVisible,\n\ttoggleAllVisible,\n} ) {\n\tconst settings = useContext( EditPostSettings );\n\tconst { allowedBlockTypes } = settings;\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tif ( allowedBlockTypes === true ) {\n\t\t\treturn blockTypes;\n\t\t}\n\t\treturn blockTypes.filter( ( { name } ) => {\n\t\t\treturn includes( allowedBlockTypes || [], name );\n\t\t} );\n\t}, [ allowedBlockTypes, blockTypes ] );\n\n\tif ( ! filteredBlockTypes.length ) {\n\t\treturn null;\n\t}\n\n\tconst checkedBlockNames = without(\n\t\tmap( filteredBlockTypes, 'name' ),\n\t\t...hiddenBlockTypes\n\t);\n\n\tconst titleId = 'edit-post-block-manager__category-title-' + instanceId;\n\n\tconst isAllChecked = checkedBlockNames.length === filteredBlockTypes.length;\n\n\tlet ariaChecked;\n\tif ( isAllChecked ) {\n\t\tariaChecked = 'true';\n\t} else if ( checkedBlockNames.length > 0 ) {\n\t\tariaChecked = 'mixed';\n\t} else {\n\t\tariaChecked = 'false';\n\t}\n\n\treturn (\n\t\t<div\n\t\t\trole=\"group\"\n\t\t\taria-labelledby={ titleId }\n\t\t\tclassName=\"edit-post-block-manager__category\"\n\t\t>\n\t\t\t<CheckboxControl\n\t\t\t\tchecked={ isAllChecked }\n\t\t\t\tonChange={ toggleAllVisible }\n\t\t\t\tclassName=\"edit-post-block-manager__category-title\"\n\t\t\t\taria-checked={ ariaChecked }\n\t\t\t\tlabel={ <span id={ titleId }>{ title }</span> }\n\t\t\t/>\n\t\t\t<BlockTypesChecklist\n\t\t\t\tblockTypes={ filteredBlockTypes }\n\t\t\t\tvalue={ checkedBlockNames }\n\t\t\t\tonItemChange={ toggleVisible }\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default compose( [\n\twithInstanceId,\n\twithSelect( ( select ) => {\n\t\tconst { getPreference } = select( editPostStore );\n\n\t\treturn {\n\t\t\thiddenBlockTypes: getPreference( 'hiddenBlockTypes' ),\n\t\t};\n\t} ),\n\twithDispatch( ( dispatch, ownProps ) => {\n\t\tconst { showBlockTypes, hideBlockTypes } = dispatch( editPostStore );\n\n\t\treturn {\n\t\t\ttoggleVisible( blockName, nextIsChecked ) {\n\t\t\t\tif ( nextIsChecked ) {\n\t\t\t\t\tshowBlockTypes( blockName );\n\t\t\t\t} else {\n\t\t\t\t\thideBlockTypes( blockName );\n\t\t\t\t}\n\t\t\t},\n\t\t\ttoggleAllVisible( nextIsChecked ) {\n\t\t\t\tconst blockNames = map( ownProps.blockTypes, 'name' );\n\t\t\t\tif ( nextIsChecked ) {\n\t\t\t\t\tshowBlockTypes( blockNames );\n\t\t\t\t} else {\n\t\t\t\t\thideBlockTypes( blockNames );\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t} ),\n] )( BlockManagerCategory );\n"]}